{"version":3,"sources":["components/Button.js","utils/getPosition.js","components/Cell/index.js","components/TreeNode.js","actions/cell.js","constant/index.js","App.js","serviceWorker.js","constant/position.js","reducers/treeReducer.js","constant/tree.js","reducers/index.js","store.js","index.js"],"names":["Button","_ref","name","className","style","react_default","a","createElement","index_esm","color","getConnectLine","position","classNames","require","Cell","props","forceUpdate","_useState","useState","_useState2","Object","slicedToArray","set","value","useForceUpdate","_props$cell$value","cell","id","root","handleAddChild","handleAddSibling","handleRemoveCell","handleAppendSibling","handleAppendChild","activeCell","setActiveCell","_useState3","_useState4","setIsDragging","_useState5","_useState6","onHover","setOnHover","inputRef","React","createRef","allowDrop","event","currentArea","target","getAttribute","includes","preventDefault","console","log","drop","data","dataTransfer","getData","JSON","parse","cellId","replace","concat","onDrop","e","onDragOver","children","length","onDragStart","setData","stringify","draggable","ref","onClick","handleActive","onDragLeave","handleDragLeave","uuidv4","connect","state","calculateNodeWidth","_document","_document$getElementB","document","getElementById","offsetWidth","tree","_root","dispatch","dispatchAddChild","type","addChild","dispatchAddSibling","addSibling","dispatchRemoveCell","removeCell","dispatchAppendSibling","siblingId","appendSibling","TreeNode","_tree$value","_tree$children","newCell","group","parentId","hasChildren","Cell_Cell","map","treeNode","key","nodeWidth","App","components_TreeNode","store","Boolean","window","location","hostname","match","isChild","ChartTree","Tree","classCallCheck","this","createClass","callback","goThrough","node","forEach","child","parentValue","newNode","_traverse","push","siblingValue","siblingPosition","n","splice","childNode","index","returnNode","_this","parentNode","_search","leafsRet","_displayLeafs","flat","_addNode","initialState","combineReducers","_cell$value","_cell$value2","_parentNode$children","_parentNode$children2","childPos","cellPos","arguments","undefined","action","getPosition","positionTypes","objectSpread","_childPosition","_addSibling","_removeNode","parentLength","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54e89c9d.chunk.js","sourcesContent":["import React from 'react';\nimport { IoIosAddCircle, IoIosRemoveCircle } from 'react-icons/io';\n\nexport default function Button({ name, className, style }) {\n  switch (name) {\n    case 'add':\n      return (\n        <IoIosAddCircle\n          className=\"w-12 h-12 text-white z-100\"\n          style={{ color: '#2f7fef' }}\n        />\n      );\n    case 'minus':\n      return (\n        <IoIosRemoveCircle className=\"w-12 h-12\" style={{ color: 'red' }} />\n      );\n    default:\n      return null;\n  }\n}\n","//this function get position of a child node in it's parents' children array\nexport const getPosition = (length, position) => {\n  if (position === 0 && length > 0) {\n    return 'isFirstChild';\n  }\n  if (position === length && position !== 0) {\n    return 'isLastChild';\n  }\n  if (position !== 0 && position < length && length > 2) {\n    return 'isChild';\n  }\n};\nexport const getConnectLine = position => {\n  switch (position) {\n    case 'isFirstChild':\n      return 'right-connect-line';\n    case 'isChild':\n      return 'full-connect-line';\n    case 'isLastChild':\n      return 'left-connect-line';\n    default:\n      return '';\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { IoIosMore } from 'react-icons/io';\nimport Button from '../Button';\nimport { getConnectLine } from '../../utils/getPosition';\nimport { onClickInside } from '../../utils/detectElement';\nlet classNames = require('classnames');\n\n// create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\nexport const Cell = props => {\n  const forceUpdate = useForceUpdate();\n  const { name, id, root, position } = props.cell.value;\n  const {\n    handleAddChild,\n    handleAddSibling,\n    handleRemoveCell,\n    handleAppendChild,\n    handleAppendSibling\n  } = props;\n  const { activeCell, setActiveCell } = props;\n  const [isDragging, setIsDragging] = useState(false);\n  const [onHover, setOnHover] = useState(null);\n  const inputRef = React.createRef();\n  const dragStart = (event, cell) => {\n    setIsDragging(true);\n    event.dataTransfer.setData('cell', JSON.stringify(cell));\n  };\n  const allowDrop = event => {\n    const currentArea = event.target.getAttribute('id');\n    let id;\n    if (currentArea.includes('sibling-dropzone')) {\n      // id =\n      //   currentArea.replace(/right-sibling-dropzone-/g, '') ||\n      //   currentArea.replace(/left-sibling-dropzone-/g, '');\n      // setOnHover(id);\n      setOnHover(currentArea);\n    }\n    event.preventDefault();\n  };\n  const handleDragLeave = event => {\n    const currentArea = event.target.getAttribute('id');\n    let id;\n    if (currentArea.includes('sibling-dropzone')) {\n      id =\n        currentArea.replace(/right-sibling-dropzone-/g, '') ||\n        currentArea.replace(/left-sibling-dropzone-/g, '');\n      setOnHover(null);\n    }\n  };\n  console.log(onHover);\n\n  const drop = (event, data) => {\n    event.preventDefault();\n    var data = event.dataTransfer.getData('cell');\n    data = JSON.parse(data);\n    let cellId = event.target.getAttribute('id');\n    if (event.target.getAttribute('name') === 'right-sibling-dropzone') {\n      event.target.style.className = 'is-dragging';\n      cellId = cellId.replace(/right-sibling-dropzone-/g, '');\n      handleAppendSibling('right', data, cellId);\n    }\n    if (event.target.getAttribute('name') === 'left-sibling-dropzone') {\n      cellId = cellId.replace(/left-sibling-dropzone-/g, '');\n      handleAppendSibling('left', data, cellId);\n    }\n    setIsDragging(false);\n    forceUpdate();\n  };\n  const handleActive = e => {\n    const currentId = e.target.getAttribute('id');\n    if (currentId.includes(id)) {\n      if (!activeCell) {\n        setActiveCell(id);\n      }\n      if (activeCell) {\n        setActiveCell(null);\n      }\n      if (activeCell !== id) {\n        setActiveCell(id);\n      }\n    }\n  };\n\n  return (\n    <div className={classNames(getConnectLine(position))}>\n      <div className={classNames('relative')}>\n        <div\n          className={classNames(\n            'cell-width mt-12 h-32 flex justify-center relative',\n            onHover?.includes(id) &&\n              onHover?.includes('right') &&\n              'on-right-dragged-over',\n            onHover?.includes(id) &&\n              onHover?.includes('left') &&\n              'on-left-dragged-over'\n          )}\n        >\n          {!root && (\n            <div\n              className={classNames(\n                'w-24 h-32 left-dz bg-blue-100 absolute left-0 top-0 dropzone'\n              )}\n              name=\"left-sibling-dropzone\"\n              id={`left-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n            ></div>\n          )}\n          <div\n            id={id}\n            className={classNames(\n              'border main-border rounded-lg  w-56 h-24',\n              !root && 'absolute above-line',\n              props.cell.children.length > 0 && 'absolute below-line'\n            )}\n            onDragStart={e => dragStart(e, props.cell)}\n            draggable={!root && 'true'}\n          >\n            <div\n              className={classNames(\n                'flex items-center h-4 w-full main-border-bottom',\n                !root && 'draggable',\n                activeCell === id && 'main-bg'\n              )}\n            >\n              <IoIosMore\n                className={classNames(\n                  'text-4xl font-semibold pl-2',\n                  id === activeCell ? 'text-white' : 'main-text-color'\n                )}\n              />\n            </div>\n            <div\n              ref={inputRef}\n              className=\"relative px-2 py-2 text-xl font-semibold main-text-color\"\n              id={`edit-${id}`}\n              onClick={e => handleActive(e)}\n            >\n              {name}\n            </div>\n          </div>\n          {/* only render \"add sibling\" button for cell not root*/}\n          {!root &&\n            (activeCell !== id && (\n              <div\n                className={[\n                  'absolute opacity-0 hover:opacity-100 flex justify-center w-12 h-32 top-0 right-0'\n                ]}\n                onClick={() => {\n                  handleAddSibling(props.cell.value);\n                }}\n              >\n                <Button name=\"add\" className=\"absolute\" />\n              </div>\n            ))}\n          {!root && (\n            <div\n              className={classNames(\n                'w-24 h-32 right-dz bg-blue-100 absolute top-0 right-0 dropzone'\n              )}\n              name=\"right-sibling-dropzone\"\n              id={`right-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n              onDragLeave={e => handleDragLeave(e)}\n            ></div>\n          )}\n          {activeCell !== id && (\n            <div\n              className={[\n                'absolute bottom-0 opacity-0 hover:opacity-100 flex justify-center w-56 h-8'\n              ]}\n              onClick={() => {\n                handleAddChild(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\"absolute z-100\" />\n            </div>\n          )}\n          {/* toggle remove button on hover cell but not the root cell */}\n          {activeCell === id && !root && (\n            <div\n              id={`remove${id}`}\n              className={classNames(\n                'absolute bottom-0 right-0 flex justify-center w-56 h-8',\n                activeCell === id ? 'opacity-1' : 'opacity-0'\n              )}\n              onClick={() => {\n                handleRemoveCell(props.cell.value);\n              }}\n            >\n              <Button id={`remove${id}`} name=\"minus\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {};\n\nexport default connect(mapStateToProps)(Cell);\n","import React, { useState, useEffect } from 'react';\nimport { Cell } from './Cell';\nimport { connect } from 'react-redux';\nimport {\n  addChild,\n  addSibling,\n  removeCell,\n  appendSibling\n} from '../actions/cell';\nconst uuidv4 = require('uuid/v4');\nvar classNames = require('classnames');\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\n\nconst calculateNodeWidth = id => {\n  return id && document?.getElementById(id)?.offsetWidth;\n};\nconst TreeNode = props => {\n  const forceUpdate = useForceUpdate();\n  const { tree } = props;\n  const [activeCell, setActiveCell] = useState(null);\n\n  const {\n    dispatchAddChild,\n    dispatchAddSibling,\n    dispatchRemoveCell,\n    dispatchAppendSibling\n  } = props;\n\n  const handleAddChild = cell => {\n    const id = uuidv4();\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddChild(newCell);\n    forceUpdate();\n  };\n  const handleAddSibling = cell => {\n    const id = uuidv4();\n\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.parentId,\n        siblingId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddSibling(newCell);\n    forceUpdate();\n  };\n\n  const handleAppendSibling = (position, data, siblingId) => {\n    let newCell = data;\n    dispatchAppendSibling(position, newCell, siblingId);\n    forceUpdate();\n  };\n\n  const handleRemoveCell = cell => {\n    dispatchRemoveCell(cell);\n    forceUpdate();\n  };\n  return (\n    <div>\n      {/* render root cell */}\n      <div className=\"flex justify-center\">\n        {tree?.value?.root && (\n          <Cell\n            activeCell={activeCell}\n            setActiveCell={setActiveCell}\n            cell={tree}\n            handleAddChild={handleAddChild}\n            handleAddSibling={handleAddSibling}\n            handleAppendSibling={handleAppendSibling}\n          />\n        )}\n      </div>\n      <div className=\"flex justify-center\">\n        {tree?.children?.length > 0 &&\n          tree.children.map((treeNode, key) => (\n            <div\n              id={treeNode.value.id}\n              key={key}\n              className={classNames('flex flex-col items-center relative')}\n            >\n              <Cell\n                activeCell={activeCell}\n                setActiveCell={setActiveCell}\n                key={key}\n                cell={treeNode}\n                handleAddChild={handleAddChild}\n                handleAddSibling={handleAddSibling}\n                handleAppendSibling={handleAppendSibling}\n                handleRemoveCell={handleRemoveCell}\n              />\n              {treeNode.children.length > 0 && (\n                <TreeNode\n                  nodeWidth={calculateNodeWidth(treeNode.value.id)}\n                  id={treeNode.value.id}\n                  tree={treeNode}\n                  dispatchAddChild={dispatchAddChild}\n                  dispatchAddSibling={dispatchAddSibling}\n                  dispatchRemoveCell={dispatchRemoveCell}\n                  dispatchAppendSibling={dispatchAppendSibling}\n                />\n              )}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  dispatchAddChild: cell => {\n    dispatch(addChild(cell));\n  },\n  dispatchAddSibling: cell => {\n    dispatch(addSibling(cell));\n  },\n  dispatchRemoveCell: cell => {\n    dispatch(removeCell(cell));\n  },\n  dispatchAppendSibling: (position, cell, id) => {\n    dispatch(appendSibling(position, cell, id));\n  }\n});\n\nconst mapStateToProps = state => {\n  const tree = state.tree.tree._root;\n  return { tree };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TreeNode);\n","import * as actionTypes from '../constant/index';\nexport const addChild = cell => ({\n  type: actionTypes.ADD_CHILD,\n  cell: cell\n});\n\nexport const addSibling = cell => ({\n  type: actionTypes.ADD_SIBLING,\n  cell: cell\n});\n\nexport const removeCell = cell => ({\n  type: actionTypes.REMOVE_CELL,\n  cell: cell\n});\n\nexport const appendSibling = (position, cell, siblingId) => {\n  switch (position) {\n    case 'right':\n      return {\n        type: actionTypes.APPEND_RIGHT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    case 'left':\n      return {\n        type: actionTypes.APPEND_LEFT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    default:\n      return null;\n  }\n};\n","export const main = 'MAIN';\nexport const ADD_CHILD = 'ADD_CHILD';\nexport const ADD_SIBLING = 'ADD_SIBLING';\nexport const REMOVE_CELL = 'REMOVE_CELL';\nexport const APPEND_RIGHT_SIBLING = 'APPEND_RIGHT_SIBLING';\nexport const APPEND_LEFT_SIBLING = 'APPEND_LEFT_SIBLING';\n","import React from 'react';\nimport TreeNode from './components/TreeNode';\n\nconst App = props => {\n  return (\n    <div className=\"wrapper mt-24\">\n      <div>\n        <TreeNode store={props.store} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const isFirstChild = 'isFirstChild';\nexport const isLastChild = 'isLastChild';\nexport const isChild = 'isChild';\n","import * as actionTypes from '../constant';\nimport { initTree } from '../constant/tree';\nimport { getPosition } from '../utils/getPosition';\nimport * as positionTypes from '../constant/position';\n\nconst ChartTree = initTree();\n//default root node to tree\nChartTree._addNode({\n  group: 'main',\n  id: 'te83nwko7b',\n  name: 'Root',\n  root: true,\n  hasChildren: false\n});\n\nconst tree = ChartTree;\nconst initialState = {\n  tree\n};\nexport const treeReducer = (state = initialState, action) => {\n  const { cell } = action;\n  let parentId = cell?.value?.parentId;\n  const siblingId = cell?.value?.siblingId || action.siblingId;\n  let { tree } = state;\n  const parentNode = tree._search(parentId);\n  const position = parentNode?.children?.length;\n  const length = parentNode?.children?.length;\n  let childPos, cellPos;\n  switch (action.type) {\n    case actionTypes.ADD_CHILD:\n      cell.value.position = getPosition(length, position);\n      //toggle previous sibling node into isChild\n      if (parentNode.children.length > 1) {\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      //toggle previous sibling to be first node if there are 2 siblings\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n      }\n      //toggle parent hasChildren field to true\n      parentNode.value.hasChildren = true;\n      tree._addNode(cell, parentId);\n      return { ...state, tree };\n    case actionTypes.ADD_SIBLING:\n      childPos = tree?._childPosition(parentId, siblingId);\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n        cell.value.position = positionTypes.isLastChild;\n      }\n      if (length > 1 && childPos === length - 1) {\n        cell.value.position = positionTypes.isLastChild;\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      if (length > 1 && childPos !== length - 1) {\n        cell.value.position = positionTypes.isChild;\n      }\n      tree._addSibling(cell, parentId, siblingId, 'right');\n      return { ...state, tree };\n\n    case actionTypes.APPEND_RIGHT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos + 1 && cellPos !== childPos) {\n        if (cellPos === 0 && childPos !== length - 1) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length === 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length > 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos !== 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isChild;\n        }\n        if (cellPos === length - 1) {\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (\n          length > 2 &&\n          cellPos !== 0 &&\n          cellPos !== length - 1 &&\n          childPos === length - 1\n        ) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'right');\n      }\n      return { ...state, tree };\n\n    case actionTypes.APPEND_LEFT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos - 1 && childPos !== cellPos) {\n        if (childPos === 0 && cellPos !== length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n        }\n\n        if (childPos === 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n        }\n        if (childPos !== 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[childPos].value.position =\n            positionTypes.isLastChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'left');\n      }\n      return { ...state, tree };\n\n    case actionTypes.REMOVE_CELL:\n      tree._removeNode(cell.id);\n      const parentLength = tree._search(cell.parentId).children.length;\n      //is cell is first\n      if (tree._search(cell.parentId).children.length > 1) {\n        tree._search(cell.parentId).children[0].value.position =\n          positionTypes.isFirstChild;\n        tree._search(cell.parentId).children[parentLength - 1].value.position =\n          positionTypes.isLastChild;\n      }\n      //if cell if first child in 2-child-array\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      //if cell is last cell\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      return { ...state, tree };\n    default:\n      return state;\n  }\n};\n","export class Tree {\n  constructor(root) {\n    this._root = root || null;\n  }\n\n  _traverse(callback) {\n    function goThrough(node) {\n      callback(node);\n      node.children.forEach(child => {\n        goThrough(child);\n      });\n    }\n    goThrough(this._root);\n  }\n\n  _addNode(value, parentValue) {\n    const newNode = {\n      value: value,\n      children: []\n    };\n\n    if (this._root === null) {\n      this._root = newNode;\n      return;\n    }\n\n    this._traverse(node => {\n      if (node.value.id === parentValue) {\n        return node.children.push(value);\n      }\n    });\n  }\n\n  _addSibling(value, parentValue, siblingValue, position) {\n    if (position === 'right') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition + 1, 0, value);\n        }\n      });\n    }\n    if (position === 'left') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition, 0, value);\n        }\n      });\n    }\n  }\n\n  _removeNode(value) {\n    this._traverse(node => {\n      node.children.forEach((childNode, index) => {\n        if (childNode.value.id === value) {\n          node.children.splice(index, 1);\n        }\n      });\n    });\n  }\n\n  _search(value) {\n    let returnNode = 'Not Found';\n    this._traverse(node => {\n      if (node.value.id === value) {\n        returnNode = node;\n      }\n    });\n    return returnNode;\n  }\n\n  _displayLeafs(parentValue) {\n    const parentNode =\n      typeof parentValue === 'string' ? this._search(parentValue) : parentValue;\n    let leafsRet = [];\n    if (parentValue.children && !parentValue.children.length) {\n      return parentValue;\n    }\n\n    parentNode.children.forEach(child => {\n      leafsRet.push(this._displayLeafs(child));\n    });\n\n    return leafsRet.flat();\n  }\n\n  _childPosition(parentValue, siblingValue) {\n    let position;\n    this._search(parentValue).children.map((n, key) => {\n      if (n.value.id === siblingValue) {\n        position = key;\n      }\n    });\n    return position;\n  }\n}\n\nexport const initTree = () => {\n  const tree = new Tree();\n  return tree;\n};\n","import { combineReducers } from 'redux';\nimport { treeReducer as tree } from './treeReducer';\nexport default combineReducers({\n  tree\n});\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport rootReducer from './reducers/index';\nimport logger from 'redux-logger';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(logger))\n  );\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}