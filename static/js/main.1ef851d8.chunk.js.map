{"version":3,"sources":["components/Button.js","utils/getPosition.js","components/Cell/index.js","components/TreeNode.js","actions/cell.js","constant/index.js","App.js","serviceWorker.js","reducers/treeReducer.js","constant/tree.js","reducers/index.js","store.js","index.js"],"names":["Button","_ref","name","className","style","react_default","a","createElement","index_esm","color","getConnectLine","position","classNames","require","Cell","props","_props$cell$value","cell","value","id","root","handleAddChild","handleAddSibling","handleRemoveCell","isEditing","setIsEditing","activeCell","editing","onClick","console","log","children","length","uuidv4","connect","state","tree","_root","dispatch","dispatchAddChild","type","addChild","dispatchAddSibling","addSibling","dispatchRemoveCell","removeCell","TreeNode","_tree$value","_tree$children","forceUpdate","_useState","useState","_useState2","Object","slicedToArray","set","useForceUpdate","_useState3","_useState4","newCell","group","parentId","hasChildren","siblingId","Cell_Cell","map","treeNode","key","App","components_TreeNode","store","Boolean","window","location","hostname","match","ChartTree","Tree","classCallCheck","this","createClass","callback","goThrough","node","forEach","child","parentValue","newNode","_traverse","push","siblingValue","siblingPosition","n","splice","childNode","index","returnNode","_this","parentNode","_search","leafsRet","_displayLeafs","flat","_addNode","initialState","combineReducers","_cell$value","_cell$value2","_parentNode$children","_parentNode$children2","arguments","undefined","action","getPosition","objectSpread","childPos","_childPosition","_addSibling","_removeNode","parentLength","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ef851d8.chunk.js","sourcesContent":["import React from 'react';\nimport { IoIosAddCircle, IoIosRemoveCircle } from 'react-icons/io';\n\nexport default function Button({ name, className, style }) {\n  switch (name) {\n    case 'add':\n      return (\n        <IoIosAddCircle\n          className=\"w-12 h-12 text-white z-100\"\n          style={{ color: '#2f7fef' }}\n        />\n      );\n    case 'minus':\n      return (\n        <IoIosRemoveCircle className=\"w-12 h-12\" style={{ color: 'red' }} />\n      );\n    default:\n      return null;\n  }\n}\n","//this function get position of a child node in it's parents' children array\nexport const getPosition = (length, position) => {\n  if (position === 0 && length > 0) {\n    return 'isFirstChild';\n  }\n  if (position === length && position !== 0) {\n    return 'isLastChild';\n  }\n  if (position !== 0 && position < length && length > 2) {\n    return 'isChild';\n  }\n};\nexport const getConnectLine = position => {\n  switch (position) {\n    case 'isFirstChild':\n      return 'right-connect-line';\n    case 'isChild':\n      return 'full-connect-line';\n    case 'isLastChild':\n      return 'left-connect-line';\n    default:\n      return '';\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IoIosMore } from 'react-icons/io';\nimport Button from '../Button';\nimport { getConnectLine } from '../../utils/getPosition';\nvar classNames = require('classnames');\n\nexport const Cell = props => {\n  const { name, id, root, position } = props.cell.value;\n  const { handleAddChild, handleAddSibling, handleRemoveCell } = props;\n  const { isEditing, setIsEditing } = props;\n  const { activeCell, editing } = isEditing;\n  return (\n    <div className={classNames(getConnectLine(position))}>\n      <div className={classNames('relative')}>\n        <div\n          className={classNames(\n            'cell-width mt-12 h-32 relative flex justify-between'\n          )}\n        >\n          <div\n            onClick={() => {\n              console.log('click on cell ', id);\n              //reset active cell to empty string if user toggle editing from true to false\n              setIsEditing({\n                activeCell: editing ? '' : id,\n                editing: !editing\n              });\n            }}\n            className={classNames(\n              'border main-border w-56 h-24',\n              !root && 'absolute above-line',\n              props.cell.children.length > 0 && 'absolute below-line'\n            )}\n          >\n            <div\n              className={classNames(\n                'flex items-center h-4 w-full main-border-bottom',\n                editing && activeCell === id && 'main-bg'\n              )}\n            >\n              <IoIosMore\n                className={classNames(\n                  'text-4xl font-semibold pl-2',\n                  editing && id === activeCell\n                    ? 'text-white'\n                    : 'main-text-color'\n                )}\n              />\n            </div>\n            <div className=\"relative px-2 py-2 text-xl font-semibold main-text-color\">\n              {id}\n            </div>\n          </div>\n          {/* only render \"add sibling\" button for cell not root*/}\n          {!root &&\n            (activeCell !== id && (\n              <div\n                className={[\n                  'ml-4 opacity-0 hover:opacity-100 flex justify-center w-12 h-32 absolute top-0 right-0'\n                ]}\n                onClick={() => {\n                  handleAddSibling(props.cell.value);\n                }}\n              >\n                <Button name=\"add\" className=\"absolute z-100\" />\n              </div>\n            ))}\n          {activeCell !== id && (\n            <div\n              className={[\n                'absolute bottom-0 opacity-0 hover:opacity-100 flex justify-center w-56 h-8'\n              ]}\n              onClick={() => {\n                handleAddChild(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\"absolute z-100\" />\n            </div>\n          )}\n          {/* toggle remove button on hover cell but not the root cell */}\n          {activeCell === id && !root && (\n            <div\n              className={classNames(\n                'absolute bottom-0 right-0 flex justify-center w-56 h-8',\n                editing && activeCell === id ? 'opacity-1' : 'opacity-0'\n              )}\n              onClick={() => {\n                handleRemoveCell(props.cell.value);\n              }}\n            >\n              <Button name=\"minus\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {};\n\nexport default connect(mapStateToProps)(Cell);\n","import React, { useState } from 'react';\nimport { Cell } from './Cell';\nimport { connect } from 'react-redux';\nimport { addChild, addSibling, removeCell } from '../actions/cell';\nconst uuidv4 = require('uuid/v4');\nvar classNames = require('classnames');\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\nconst TreeNode = props => {\n  const forceUpdate = useForceUpdate();\n  const { tree } = props;\n  const [isEditing, setIsEditing] = useState({\n    activeCell: '',\n    editing: false\n  });\n\n  const { dispatchAddChild, dispatchAddSibling, dispatchRemoveCell } = props;\n  const handleAddChild = cell => {\n    const id = uuidv4();\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddChild(newCell);\n    forceUpdate();\n  };\n  const handleAddSibling = cell => {\n    const id = uuidv4();\n\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.parentId,\n        siblingId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddSibling(newCell);\n    forceUpdate();\n  };\n\n  const handleRemoveCell = cell => {\n    dispatchRemoveCell(cell);\n    forceUpdate();\n  };\n  return (\n    <div>\n      {/* render root cell */}\n      <div className=\"flex justify-center\">\n        {tree?.value?.root && (\n          <Cell\n            isEditing={isEditing}\n            setIsEditing={setIsEditing}\n            cell={tree}\n            handleAddChild={handleAddChild}\n            handleAddSibling={handleAddSibling}\n          />\n        )}\n      </div>\n      <div className=\"flex justify-center\">\n        {tree?.children?.length > 0 &&\n          tree.children.map((treeNode, key) => (\n            <div\n              key={key}\n              className={classNames('flex flex-col items-center relative')}\n            >\n              <Cell\n                isEditing={isEditing}\n                setIsEditing={setIsEditing}\n                key={key}\n                cell={treeNode}\n                handleAddChild={handleAddChild}\n                handleAddSibling={handleAddSibling}\n                handleRemoveCell={handleRemoveCell}\n              />\n              {treeNode.children.length > 0 && (\n                <TreeNode\n                  tree={treeNode}\n                  dispatchAddChild={dispatchAddChild}\n                  dispatchAddSibling={dispatchAddSibling}\n                  dispatchRemoveCell={dispatchRemoveCell}\n                />\n              )}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  dispatchAddChild: cell => {\n    dispatch(addChild(cell));\n  },\n  dispatchAddSibling: cell => {\n    dispatch(addSibling(cell));\n  },\n  dispatchRemoveCell: cell => {\n    dispatch(removeCell(cell));\n  }\n});\n\nconst mapStateToProps = state => {\n  const tree = state.tree.tree._root;\n  return { tree };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TreeNode);\n","import * as actionTypes from '../constant/index';\nexport const addChild = cell => ({\n  type: actionTypes.ADD_CHILD,\n  cell: cell\n});\n\nexport const addSibling = cell => ({\n  type: actionTypes.ADD_SIBLING,\n  cell: cell\n});\n\nexport const removeCell = cell => ({\n  type: actionTypes.REMOVE_CELL,\n  cell: cell\n});\n","export const main = 'MAIN';\nexport const ADD_CHILD = 'ADD_CHILD';\nexport const ADD_SIBLING = 'ADD_SIBLING';\nexport const REMOVE_CELL = 'REMOVE_CELL';\n","import React from 'react';\nimport TreeNode from './components/TreeNode';\n\nconst App = props => {\n  return (\n    <div className=\"mt-24\">\n      <TreeNode store={props.store} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../constant';\nimport { initTree } from '../constant/tree';\nimport { getPosition } from '../utils/getPosition';\n\nconst ChartTree = initTree();\n//default root node to tree\nChartTree._addNode({\n  group: 'main',\n  id: 'te83nwko7b',\n  name: 'Root',\n  root: true,\n  hasChildren: false\n});\n\nconst tree = ChartTree;\nconst initialState = {\n  tree\n};\nexport const treeReducer = (state = initialState, action) => {\n  const { cell } = action;\n  const parentId = cell?.value?.parentId;\n  const siblingId = cell?.value?.siblingId;\n  let { tree } = state;\n  const parentNode = tree._search(parentId);\n  const position = parentNode?.children?.length;\n  const length = parentNode?.children?.length;\n  switch (action.type) {\n    case actionTypes.ADD_CHILD:\n      cell.value.position = getPosition(length, position);\n      //toggle previous sibling node into isChild\n      if (parentNode.children.length > 1) {\n        parentNode.children[length - 1].value.position = 'isChild';\n      }\n      //toggle previous sibling to be first node if there are 2 siblings\n      if (length === 1) {\n        parentNode.children[0].value.position = 'isFirstChild';\n      }\n      //toggle parent hasChildren field to true\n      parentNode.value.hasChildren = true;\n      tree._addNode(cell, parentId);\n      return { ...state, tree };\n    case actionTypes.ADD_SIBLING:\n      const childPos = tree._childPosition(parentId, siblingId);\n      if (length === 1) {\n        parentNode.children[0].value.position = 'isFirstChild';\n        cell.value.position = 'isLastChild';\n      }\n      if (length > 1 && childPos === length - 1) {\n        cell.value.position = 'isLastChild';\n        parentNode.children[length - 1].value.position = 'isChild';\n      }\n      if (length > 1 && childPos !== length - 1) {\n        cell.value.position = 'isChild';\n      }\n      tree._addSibling(cell, parentId, siblingId);\n      return { ...state, tree };\n    case actionTypes.REMOVE_CELL:\n      tree._removeNode(cell.id);\n      const parentLength = tree._search(cell.parentId).children.length;\n      //is cell is first\n      if (tree._search(cell.parentId).children.length > 1) {\n        tree._search(cell.parentId).children[0].value.position = 'isFirstChild';\n        tree._search(cell.parentId).children[parentLength - 1].value.position =\n          'isLastChild';\n      }\n      //if cell if first child in 2-child-array\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      //if cell is last cell\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      return { ...state, tree };\n    default:\n      return state;\n  }\n};\n","export class Tree {\n  constructor(root) {\n    this._root = root || null;\n  }\n\n  _traverse(callback) {\n    const self = this;\n    function goThrough(node) {\n      callback(node);\n      node.children.forEach(child => {\n        goThrough(child);\n      });\n    }\n    goThrough(this._root);\n  }\n\n  _addNode(value, parentValue) {\n    const newNode = {\n      value: value,\n      children: []\n    };\n\n    if (this._root === null) {\n      this._root = newNode;\n      return;\n    }\n\n    this._traverse(node => {\n      if (node.value.id === parentValue) {\n        return node.children.push(value);\n      }\n    });\n  }\n\n  _addSibling(value, parentValue, siblingValue) {\n    this._traverse(node => {\n      if (node.value.id === parentValue) {\n        //find its left sibling position\n        let siblingPosition;\n        node.children.map((n, key) => {\n          if (n.value.id === siblingValue) {\n            siblingPosition = key;\n          }\n        });\n        return node.children.splice(siblingPosition + 1, 0, value);\n      }\n    });\n  }\n\n  _removeNode(value) {\n    this._traverse(node => {\n      node.children.forEach((childNode, index) => {\n        if (childNode.value.id === value) {\n          node.children.splice(index, 1);\n        }\n      });\n    });\n  }\n\n  _search(value) {\n    let returnNode = 'Not Found';\n    this._traverse(node => {\n      if (node.value.id === value) {\n        returnNode = node;\n      }\n    });\n    return returnNode;\n  }\n\n  _displayLeafs(parentValue) {\n    const parentNode =\n      typeof parentValue === 'string' ? this._search(parentValue) : parentValue;\n    let leafsRet = [];\n    if (parentValue.children && !parentValue.children.length) {\n      return parentValue;\n    }\n\n    parentNode.children.forEach(child => {\n      leafsRet.push(this._displayLeafs(child));\n    });\n\n    return leafsRet.flat();\n  }\n\n  _childPosition(parentValue, siblingValue) {\n    let position;\n    this._search(parentValue).children.map((n, key) => {\n      if (n.value.id === siblingValue) {\n        position = key;\n      }\n    });\n    return position;\n  }\n}\n\nexport const initTree = () => {\n  const tree = new Tree();\n  return tree;\n};\n","import { combineReducers } from 'redux';\nimport { treeReducer as tree } from './treeReducer';\nexport default combineReducers({\n  tree\n});\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport rootReducer from './reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(logger))\n  );\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}