{"version":3,"sources":["components/Button.js","utils/getPosition.js","components/Cell/index.js","components/TreeNode.js","actions/cell.js","constant/index.js","components/Header.js","constant/estimationTable.js","components/Estimation/Tick.js","utils/cloneObj.js","components/Estimation/Table.js","actions/estimation.js","actions/toggleEstimation.js","components/Estimation/index.js","App.js","serviceWorker.js","constant/tree.js","constant/position.js","reducers/treeReducer.js","reducers/estimationReducer.js","utils/getColor.js","reducers/index.js","reducers/toggleEstimationReducer.js","configureStore.js","index.js","utils/localStorage.js"],"names":["Button","_ref","name","className","style","react_default","a","createElement","index_esm","color","getConnectLine","position","classNames","require","Cell","props","forceUpdate","_useState","useState","_useState2","Object","slicedToArray","set","value","useForceUpdate","_props$cell$value","cell","id","root","estimation","toggleEstimation","handleAddChild","handleAddSibling","handleRemoveCell","handleAppendChild","handleAppendSibling","activeCell","setActiveCell","_useState3","_useState4","setIsDragging","_useState5","_useState6","onHover","setOnHover","inputRef","React","createRef","cellRef","allowDrop","event","currentArea","target","getAttribute","includes","concat","preventDefault","handleClickEvent","useCallback","current","contains","useEffect","document","addEventListener","removeEventListener","drop","data","targetCell","getElementById","dropCell","cellId","dataTransfer","getData","JSON","parse","hasChildNodes","replace","cellsCollection","getElementsByClassName","toConsumableArray","map","v","classList","remove","onDrop","e","onDragOver","ref","children","length","onDragStart","setData","stringify","draggable","onClick","handleActive","width","rows","data-min-rows","placeholder","onDragLeave","right","key","activated","hours","uuidv4","calculateNodeWidth","_document","_document$getElementB","offsetWidth","connect","state","tree","_root","dispatch","dispatchAddChild","type","addChild","dispatchAppendChild","parentId","appendChild","dispatchAddSibling","addSibling","dispatchRemoveCell","removeCell","dispatchAppendSibling","siblingId","appendSibling","TreeNode","_tree$value","_tree$children","newCell","group","hasChildren","Cell_Cell","obj","treeNode","nodeWidth","setToggleEstimation","fa_index_esm","head","unit","toggle","Tick","index","clone","copy","constructor","attr","hasOwnProperty","calculateSumMembers","arr","Array","isArray","reduce","cnt","o","parseFloat","rate","Table","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAddRow","dispatchAddRow","dispatchKeepToggle","handleRemoveRow","row","window","confirm","dispatchRemoveRow","onDragEnd","fromIndex","toIndex","item1","item2","dispatchArrangeRow","dragProps","nodeSelector","handleSelector","handleInputChange","_e$target","prefix","split","dispatchEditCell","handleToggleTick","dispatchToggleTick","bind","assertThisInitialized","reset","setState","_this2","which","keyCode","_this3","lib_default","table","h","item","autoComplete","onChange","title","Estimation_Tick","Component","arrangeRow","addRow","removeRow","editCell","toggleTick","dispatchCloseToggle","Estimation","Estimation_Table","components_Header","components_TreeNode","store","Estimation_Estimation","Boolean","location","hostname","match","Tree","createClass","initialTree","initTree","callback","goThrough","node","forEach","child","parentValue","newNode","_traverse","push","siblingValue","siblingPosition","n","splice","childNode","returnNode","parentNode","_search","leafsRet","_displayLeafs","flat","isChild","_addNode","initialState","getColor","defaultValue","order","amount","localStorage","combineReducers","_cell$value","_cell$value2","_parentNode$children","_parentNode$children2","_tree$_search","childPos","cellPos","arguments","undefined","action","getPosition","positionTypes","objectSpread","_removeNode","grandparent","_childPosition","_addSibling","parentLength","isOpen","newRow","count","filter","it","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","blacklist","stateReconciler","autoMergeLevel2","pReducer","persistReducer","rootReducer","createStore","applyMiddleware","logger","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","setItem","update","clear","removeItem","get","getItem","check"],"mappings":"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","file":"static/js/main.1ac77e79.chunk.js","sourcesContent":["import React from 'react';\nimport { IoIosAddCircle, IoIosRemoveCircle } from 'react-icons/io';\n\nexport default function Button({ name, className, style }) {\n  switch (name) {\n    case 'add':\n      return (\n        <IoIosAddCircle\n          className=\"w-8 h-8 text-white z-100 rounded-full bg-white\"\n          style={{ color: '#2f7fef' }}\n        />\n      );\n    case 'minus':\n      return (\n        <IoIosRemoveCircle className=\"w-8 h-8 rounded-full bg-white\" style={{ color: 'red' }} />\n      );\n    default:\n      return null;\n  }\n}\n","//this function get position of a child node in it's parents' children array\nexport const getPosition = (length, position) => {\n  if (position === 0 && length > 0) {\n    return 'isFirstChild';\n  }\n  if (position === length && position !== 0) {\n    return 'isLastChild';\n  }\n  if (position !== 0 && position < length && length > 2) {\n    return 'isChild';\n  }\n};\nexport const getConnectLine = position => {\n  switch (position) {\n    case 'isFirstChild':\n      return 'right-connect-line';\n    case 'isChild':\n      return 'full-connect-line';\n    case 'isLastChild':\n      return 'left-connect-line';\n    default:\n      return '';\n  }\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { IoIosMore } from 'react-icons/io';\nimport Button from '../Button';\nimport { getConnectLine } from '../../utils/getPosition';\nlet classNames = require('classnames');\n\n// create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\nexport const Cell = props => {\n  const forceUpdate = useForceUpdate();\n  const { name, id, root, position } = props.cell.value;\n  const { estimation, toggleEstimation } = props;\n  const {\n    handleAddChild,\n    handleAddSibling,\n    handleRemoveCell,\n    handleAppendChild,\n    handleAppendSibling\n  } = props;\n  const { activeCell, setActiveCell } = props;\n  const [isDragging, setIsDragging] = useState(false);\n  const [onHover, setOnHover] = useState(null);\n  const inputRef = React.createRef();\n  const cellRef = React.createRef(null);\n  const dragStart = (event, cell) => {\n    setIsDragging(true);\n    event.dataTransfer.setData('cell', JSON.stringify(cell));\n  };\n  const allowDrop = event => {\n    const currentArea = event.target.getAttribute('id');\n    const name = event.target.getAttribute('name');\n    let id;\n    if (currentArea?.includes('sibling-dropzone')) {\n      setOnHover(currentArea);\n    }\n    if (name === 'child-dropzone') {\n      setOnHover(`child-dropzone-${id}`);\n    }\n    event.preventDefault();\n  };\n\n  const handleDragLeave = event => {\n    const currentArea = event.target.getAttribute('id');\n    if (currentArea.includes('sibling-dropzone')) {\n      setOnHover(null);\n    }\n    if (event.target.getAttribute('name') === 'child-dropzone') {\n      setOnHover(null);\n    }\n  };\n\n  const handleClickEvent = useCallback(\n    event => {\n      const { target } = event;\n      if (\n        cellRef &&\n        cellRef.current &&\n        id === activeCell &&\n        !cellRef.current.contains(target)\n      ) {\n        setActiveCell(null);\n      }\n    },\n    // eslint-disable-next-line\n    []\n  );\n  useEffect(() => {\n    document.addEventListener('click', handleClickEvent);\n    return () => {\n      document.removeEventListener('click', handleClickEvent);\n    };\n  }, [handleClickEvent]);\n\n  const drop = (event, data) => {\n    event.preventDefault();\n    const targetCell = document.getElementById(id);\n    const dropCell = event.target;\n    let cellId = dropCell.getAttribute('id');\n    var data = event.dataTransfer.getData('cell');\n    data = JSON.parse(data);\n    if (\n      targetCell.hasChildNodes(dropCell) &&\n      dropCell.getAttribute('name') !== 'right-sibling-dropzone' &&\n      dropCell.getAttribute('name') !== 'left-sibling-dropzone'\n    ) {\n      cellId = cellId.replace(/textarea-|edit-/g, '') || cellId;\n      handleAppendChild(data, cellId);\n      forceUpdate();\n    }\n    if (event.target.getAttribute('name') === 'right-sibling-dropzone') {\n      event.target.style.className = 'is-dragging';\n      cellId = cellId.replace(/right-sibling-dropzone-/g, '');\n      handleAppendSibling('right', data, cellId);\n      const cellsCollection = document.getElementsByClassName('cell');\n      let cellArr = [...cellsCollection];\n      cellArr.map(v => {\n        v.classList.remove('on-right-dragged-over', 'on-left-dragged-over');\n      });\n    }\n    if (event.target.getAttribute('name') === 'left-sibling-dropzone') {\n      cellId = cellId.replace(/left-sibling-dropzone-/g, '');\n      handleAppendSibling('left', data, cellId);\n    }\n    setIsDragging(false);\n    setOnHover(null);\n    forceUpdate();\n  };\n  const handleActive = e => {\n    const currentId = e.target.getAttribute('id');\n    if (currentId.includes(id)) {\n      if (!activeCell || activeCell !== id) {\n        setActiveCell(id);\n      }\n      if (activeCell) {\n        setActiveCell(null);\n      }\n    }\n  };\n\n  return (\n    <div className={classNames(getConnectLine(position))}>\n      <div className={classNames('relative')}>\n        <div\n          className={classNames(\n            'cell cell-width mt-12 mb-2 h-32 flex justify-center relative',\n            onHover?.includes(id) &&\n              onHover?.includes('right') &&\n              'on-right-dragged-over',\n            onHover?.includes(id) &&\n              onHover?.includes('left') &&\n              'on-left-dragged-over'\n          )}\n        >\n          {!root && (\n            <div\n              className={classNames(\n                'left-dz bg-red absolute left-0 top-0 dropzone bg-transparent'\n              )}\n              name=\"left-sibling-dropzone\"\n              id={`left-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n            ></div>\n          )}\n          <div\n            id={id}\n            ref={cellRef}\n            name=\"child-dropzone\"\n            className={classNames(\n              'border main-border rounded-lg w-48',\n              !root && 'absolute above-line min-h-cell',\n              props.cell.children.length > 0 && 'absolute below-line'\n            )}\n            onDragStart={e => dragStart(e, props.cell)}\n            draggable={!root && 'true'}\n            onDrop={e => {\n              drop(e, props.cell);\n            }}\n            onDragOver={e => allowDrop(e)}\n          >\n            <div\n              className={classNames(\n                'flex items-center h-4 w-full main-border-bottom',\n                !root && 'draggable',\n                activeCell === id && 'main-bg'\n              )}\n            >\n              <IoIosMore\n                className={classNames(\n                  'text-4xl font-semibold pl-2',\n                  id === activeCell ? 'text-white' : 'main-text-color'\n                )}\n              />\n            </div>\n            <div\n              ref={inputRef}\n              className=\"relative px-2 py-2 text-xl font-semibold main-text-color\"\n              id={`edit-${id}`}\n              onClick={e => handleActive(e)}\n            >\n              <textarea\n                style={{ width: '100%' }}\n                rows=\"2\"\n                data-min-rows=\"2\"\n                id={`textarea-${id}`}\n                placeholder={name}\n              ></textarea>\n            </div>\n          </div>\n          {/* only render \"add sibling\" button for cell not root*/}\n          {!root && activeCell !== id && (\n            <div\n              className={[\n                'absolute opacity-0 hover:opacity-100 flex justify-start items-center w-24 h-32 top-0 right-0'\n              ]}\n              onClick={() => {\n                handleAddSibling(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\" z-100\" />\n            </div>\n          )}\n          {!root && (\n            <div\n              className={classNames(\n                'right-dz bg-red absolute top-0 right-0 dropzone bg-transparent'\n              )}\n              name=\"right-sibling-dropzone\"\n              id={`right-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n              onDragLeave={e => handleDragLeave(e)}\n            ></div>\n          )}\n          {/* estimation vertical line */}\n          {toggleEstimation && (\n            <div\n              className={\n                'flex flex-col h-auto items-center justify-center absolute'\n              }\n              style={{ right: '80px' }}\n            >\n              {estimation.map(\n                (e, key) =>\n                  e.activated && (\n                    <div\n                      key={key}\n                      className={classNames([\n                        'w-8 text-center h-6 px-2',\n                        key !== estimation.length - 1 &&\n                          key !== 0 &&\n                          'border-middle-cells',\n                        key === 0 && 'border-first-cell',\n                        key === estimation.length - 1 && 'border-last-cell'\n                      ])}\n                      style={{ color: e.activated ? e.color : '' }}\n                    >\n                      {e.hours}\n                    </div>\n                  )\n              )}\n            </div>\n          )}\n          {/* ends estimation vertical line */}\n          {activeCell !== id && (\n            <div\n              className={[\n                'absolute bottom-0 opacity-0 hover:opacity-100 flex justify-center w-48 h-8'\n              ]}\n              onClick={() => {\n                handleAddChild(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\"absolute z-100\" />\n            </div>\n          )}\n          {/* toggle remove button on hover cell but not the root cell */}\n          {activeCell === id && !root && (\n            <div\n              id={`remove${id}`}\n              className={classNames(\n                'absolute bottom-0 right-0 flex justify-center w-48 h-8',\n                activeCell === id ? 'opacity-1' : 'opacity-0'\n              )}\n              onClick={() => {\n                handleRemoveCell(props.cell.value);\n              }}\n            >\n              <Button id={`remove${id}`} name=\"minus\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cell;\n","import React, { useState } from 'react';\nimport { Cell } from './Cell';\nimport { connect } from 'react-redux';\nimport {\n  addChild,\n  appendChild,\n  addSibling,\n  removeCell,\n  appendSibling\n} from '../actions/cell';\nconst uuidv4 = require('uuid/v4');\nvar classNames = require('classnames');\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n  const [_, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\n\nconst calculateNodeWidth = id => {\n  return id && document?.getElementById(id)?.offsetWidth;\n};\nconst TreeNode = props => {\n  const forceUpdate = useForceUpdate();\n  const { tree, toggleEstimation } = props;\n  const { estimation } = props;\n  const [activeCell, setActiveCell] = useState(null);\n\n  const {\n    dispatchAddChild,\n    dispatchAppendChild,\n    dispatchAddSibling,\n    dispatchRemoveCell,\n    dispatchAppendSibling\n  } = props;\n\n  const handleAddChild = cell => {\n    const id = uuidv4();\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddChild(newCell);\n    forceUpdate();\n  };\n\n  const handleAppendChild = (cell, parentId) => {\n    //prevent dropping at the same cell\n    cell.value.id !== parentId && dispatchAppendChild(cell, parentId);\n    forceUpdate();\n  };\n  const handleAddSibling = cell => {\n    const id = uuidv4();\n\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.parentId,\n        siblingId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddSibling(newCell);\n    forceUpdate();\n  };\n\n  const handleAppendSibling = (position, data, siblingId) => {\n    let newCell = data;\n    dispatchAppendSibling(position, newCell, siblingId);\n    forceUpdate();\n  };\n\n  const handleRemoveCell = cell => {\n    dispatchRemoveCell(cell);\n    forceUpdate();\n  };\n  return (\n    <div className={classNames(['flex flex-col flex-wrap',!toggleEstimation && 'pointer-events-none'])}>\n      {/* render root cell */}\n      <div className=\"flex justify-center\">\n        {tree?.value?.root && (\n          <Cell\n            toggleEstimation={toggleEstimation}\n            activeCell={activeCell}\n            setActiveCell={(obj)=>setActiveCell(obj)}\n            cell={tree}\n            estimation={estimation}\n            handleAddChild={handleAddChild}\n            handleAddSibling={handleAddSibling}\n            handleAppendSibling={handleAppendSibling}\n          />\n        )}\n      </div>\n      <div className=\"flex justify-center\">\n        {tree?.children?.length > 0 &&\n          tree.children.map((treeNode, key) => (\n            <div\n              id={treeNode.value.id}\n              key={key}\n              className={classNames('flex flex-col items-center relative')}\n            >\n              <Cell\n                  toggleEstimation={toggleEstimation}\n                  estimation={estimation}\n                  activeCell={activeCell}\n                  setActiveCell={(obj)=>setActiveCell(obj)}\n                  key={key}\n                  cell={treeNode}\n                  handleAddChild={handleAddChild}\n                  handleAppendChild={handleAppendChild}\n                  handleAddSibling={handleAddSibling}\n                  handleAppendSibling={handleAppendSibling}\n                  handleRemoveCell={handleRemoveCell}\n              />\n              {treeNode.children.length > 0 && (\n                <TreeNode\n                  toggleEstimation={toggleEstimation}\n                  estimation={estimation}\n                  nodeWidth={calculateNodeWidth(treeNode.value.id)}\n                  id={treeNode.value.id}\n                  tree={treeNode}\n                  dispatchAddChild={dispatchAddChild}\n                  dispatchAppendChild={dispatchAppendChild}\n                  dispatchAddSibling={dispatchAddSibling}\n                  dispatchRemoveCell={dispatchRemoveCell}\n                  dispatchAppendSibling={dispatchAppendSibling}\n                />\n              )}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  dispatchAddChild: cell => {\n    dispatch(addChild(cell));\n  },\n  dispatchAppendChild: (cell, parentId) => {\n    dispatch(appendChild(cell, parentId));\n  },\n  dispatchAddSibling: cell => {\n    dispatch(addSibling(cell));\n  },\n  dispatchRemoveCell: cell => {\n    dispatch(removeCell(cell));\n  },\n  dispatchAppendSibling: (position, cell, id) => {\n    dispatch(appendSibling(position, cell, id));\n  }\n});\n\nconst mapStateToProps = state => {\n  const tree = state.tree.tree._root;\n  const estimation = state.estimation;\n  return { tree, estimation };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TreeNode);\n","import * as actionTypes from '../constant/index';\nexport const addChild = cell => ({\n  type: actionTypes.ADD_CHILD,\n  cell: cell\n});\n\nexport const appendChild = (cell, parentId) => ({\n  type: actionTypes.APPEND_CHILD,\n  parentId: parentId,\n  cell: cell\n});\n\nexport const addSibling = cell => ({\n  type: actionTypes.ADD_SIBLING,\n  cell: cell\n});\n\nexport const removeCell = cell => ({\n  type: actionTypes.REMOVE_CELL,\n  cell: cell\n});\n\nexport const appendSibling = (position, cell, siblingId) => {\n  switch (position) {\n    case 'right':\n      return {\n        type: actionTypes.APPEND_RIGHT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    case 'left':\n      return {\n        type: actionTypes.APPEND_LEFT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    default:\n      return null;\n  }\n};\n","export const main = 'MAIN';\nexport const ESTIMATION = 'estimation';\nexport const ADD_CHILD = 'ADD_CHILD';\nexport const APPEND_CHILD = 'APPEND_CHILD';\nexport const ADD_SIBLING = 'ADD_SIBLING';\nexport const REMOVE_CELL = 'REMOVE_CELL';\nexport const APPEND_RIGHT_SIBLING = 'APPEND_RIGHT_SIBLING';\nexport const APPEND_LEFT_SIBLING = 'APPEND_LEFT_SIBLING';\nexport const TOGGLE_ESTIMATION = 'TOGGLE_ESTIMATION';\nexport const ARRANGE_ROW = 'ARRANGE_ROW';\nexport const ADD_ROW = 'ADD_ROW';\nexport const REMOVE_ROW = 'REMOVE_ROW';\nexport const EDIT_CELL = 'EDIT_CELL';\nexport const TOGGLE_TICK = 'TOGGLE_TICK';\nexport const KEEP_TOGGLE = 'KEEP_TOGGLE';\nexport const CLOSE_TOGGLE = 'CLOSE_TOGGLE';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FaDollarSign } from 'react-icons/fa';\n\nconst Header = props => {\n  const { toggleEstimation, setToggleEstimation } = props;\n  function handleClick() {\n    setToggleEstimation(toggleEstimation=>!toggleEstimation)\n  }\n  return (\n    <div className=\"flex justify-start\">\n      <button\n        onClick={handleClick}\n        className={[\"w-12 h-12 bg-button flex justify-center items-center\"]}\n      >\n        <FaDollarSign />\n      </button>\n    </div>\n  );\n};\n\n\nexport default connect(\n)(Header);\n","export const head = [\n  { unit: '', name: 'ITEM', value: 'item' },\n  { unit: '', name: 'RATE', value: 'rate' },\n  { unit: 'h', name: 'HOURS', value: 'hours' },\n  { unit: '', name: 'AMOUNT', value: 'amount' }\n];\nexport const toggle = { true: true, false: false };\n","import React from 'react';\nimport { FaRegCheckCircle } from 'react-icons/fa';\nimport { IoIosCheckmarkCircle } from 'react-icons/io';\n\nconst Tick = props => {\n  const { activated, index, color } = props;\n  return (\n    <div>\n      {!activated && <FaRegCheckCircle color={[activated ? color : '']} />}\n      {activated && (\n        <IoIosCheckmarkCircle\n          className=\"text-xl\"\n          color={[activated ? color : '']}\n        />\n      )}\n    </div>\n  );\n};\nexport default Tick;\n","export const clone = obj => {\n  if (null == obj || 'object' != typeof obj) return obj;\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n  }\n  return copy;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactDragListView from 'react-drag-listview/lib/index.js';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport * as table from '../../constant/estimationTable';\nimport Tick from './Tick';\nimport { clone } from '../../utils/cloneObj';\nimport {\n  arrangeRow,\n  addRow,\n  removeRow,\n  editCell,\n  toggleTick\n} from '../../actions/estimation';\nimport { keepToggle, closeToggle } from '../../actions/toggleEstimation';\nlet classNames = require('classnames');\n\nconst calculateSumMembers = (arr, key) => {\n  let sum;\n  if (Array.isArray(arr) && arr.length > 0 && key !== 'amount') {\n    sum = arr.reduce(function(cnt, o) {\n      return cnt + parseFloat(o[key]);\n    }, 0);\n  } else if (Array.isArray(arr) && arr.length > 0 && key === 'amount') {\n    sum = arr.reduce(function(cnt, o) {\n      return cnt + parseFloat(o.rate) * parseFloat(o.hours);\n    }, 0);\n  } else {\n    sum = 0;\n  }\n  return sum;\n};\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAddRow = this.handleAddRow.bind(this);\n    this.state = {\n      parentId: '',\n      reset: true\n    };\n    this.setState = this.setState.bind(this);\n  }\n\n  handleAddRow = id => {\n    this.props.dispatchAddRow(id);\n    this.props.dispatchKeepToggle();\n  };\n  handleRemoveRow = row => {\n    if (window.confirm('Confirm removing row?')) {\n      row && this.props.dispatchRemoveRow(row);\n    }\n    this.props.dispatchKeepToggle();\n  };\n  componentDidMount() {\n    document\n      .getElementById('estimationTable')\n      .addEventListener('keypress', e => {\n        var key = e.which || e.keyCode;\n        if (key === 13) {\n          const id = e.target.getAttribute('id').split('-')[1];\n          this.handleAddRow(id);\n        }\n      });\n  }\n  onDragEnd = (fromIndex, toIndex) => {\n    const data = clone(this.props.estimation);\n    const item1 = clone(data[fromIndex]);\n    const item2 = clone(data[toIndex]);\n    data[fromIndex] = item2;\n    data[toIndex] = item1;\n    this.props.dispatchArrangeRow(data);\n    this.props.dispatchKeepToggle();\n  };\n\n  dragProps = {\n    onDragEnd: this.onDragEnd,\n    nodeSelector: 'li',\n    handleSelector: 'a'\n  };\n  handleInputChange = e => {\n    const { id, name, value } = e.target;\n    const prefix = id.split('-')[0];\n    const cellId = id.replace(`${prefix}-`, '');\n    this.props.dispatchEditCell(cellId, name, value);\n    this.props.dispatchKeepToggle();\n  };\n  handleToggleTick = (id, activated) => {\n    if (activated) {\n      if (\n        window.confirm(\n          'Are you sure you want to unlink this data row from sitemap?'\n        )\n      ) {\n        this.props.dispatchToggleTick(id);\n      }\n    } else {\n      this.props.dispatchToggleTick(id);\n    }\n    this.props.dispatchKeepToggle();\n  };\n\n  render() {\n    return (\n      <div id=\"estimationTable\" className=\"w-full\">\n        <ReactDragListView {...this.dragProps}>\n          <div className=\"w-full flex items-center h-16\">\n            {table.head.map((h, key) => (\n              <div\n                className={classNames([\n                  `w-1/${table.head.length}`,\n                  'primary-grey font-semibold ml-4 text-white'\n                ])}\n                key={key}\n              >\n                {h.name}\n              </div>\n            ))}\n          </div>\n          <ol className=\"w-full\">\n            {this.props.estimation.map((item, index) => (\n              <li className=\"text-white flex estimation-row h-16\" key={index}>\n                <div className=\"flex items-center w-1/4 border grey-border\">\n                  <a\n                    className=\"-ml-3 mr-3 cursor-pointer absolute z-50\"\n                    onClick={() => this.handleRemoveRow(item)}\n                  >\n                    <div className=\"bg-red-700 rounded-full w-6 h-6 text-white text-xl flex justify-center items-center\">\n                      -\n                    </div>\n                  </a>\n                  <input\n                    autoComplete=\"off\"\n                    onChange={e => this.handleInputChange(e)}\n                    name=\"title\"\n                    id={`title-${item.id}`}\n                    className=\"ml-3 w-full max-h-full estimation-panel focus:outline-none\"\n                    type=\"text\"\n                    placeholder={item.title}\n                  ></input>\n                  <div\n                    id={`tick-${item.id}`}\n                    className=\"cursor-pointer \"\n                    onClick={() =>\n                      this.handleToggleTick(item.id, item.activated)\n                    }\n                  >\n                    <Tick\n                      activated={item.activated}\n                      index={index}\n                      color={item.color}\n                    />\n                  </div>\n                </div>\n                <div className=\"w-1/4 border grey-border\">\n                  <input\n                    autoComplete=\"off\"\n                    id={`rate-${item.id}`}\n                    onChange={e => this.handleInputChange(e)}\n                    name=\"rate\"\n                    className=\"ml-3 w-full h-full bg-transparent focus:outline-none focus:bg\"\n                    type=\"number\"\n                    placeholder={`$${item.rate}`}\n                  />\n                </div>\n                <div className=\"w-1/4 border grey-border\">\n                  <input\n                    autoComplete=\"off\"\n                    id={`hours-${item.id}`}\n                    onChange={e => this.handleInputChange(e)}\n                    name=\"hours\"\n                    className=\"ml-3 w-full h-full bg-transparent focus:outline-none focus:bg\"\n                    type=\"number\"\n                    placeholder={item.hours}\n                  />\n                </div>\n                <div className=\"w-1/4 border grey-border flex justify-between items-center\">\n                  <div\n                    id={`amount-${item.id}`}\n                    name=\"amount\"\n                    className=\"ml-3 w-full h-full bg-transparent focus:outline-none focus:bg flex items-center\"\n                  >\n                    {/* set default 0 to prevent no input */}${' '}\n                    {parseFloat(item.hours) * parseFloat(item.rate) || 0}\n                  </div>\n                  <a className=\"active:cursor-grabbing\">\n                    <FaEllipsisV />\n                  </a>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </ReactDragListView>\n        <div\n          onClick={() => {\n            this.handleAddRow();\n          }}\n          className=\"primary-grey h-16 flex justify-start items-center border-b grey-border cursor-pointer ml-3\"\n        >\n          Add row\n        </div>\n        <div className=\"h-16 flex justify-start items-center ml-3 text-white font-semibold text-xl\">\n          <div className=\"w-1/4\"></div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r border-b-2 border-white\">\n            Subtotal\n          </div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r pl-3 border-b-2 border-white\">\n            {calculateSumMembers(this.props.estimation, 'hours')}\n          </div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r pl-3 border-b-2 border-white\">\n            {calculateSumMembers(this.props.estimation, 'amount')}\n          </div>\n        </div>\n        <div className=\"h-16 flex justify-start items-center border-b grey-border ml-3 text-white font-semibold text-xl\">\n          <div className=\"w-1/4\"></div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r\">\n            Total\n          </div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r\"></div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r pl-3\">\n            {' '}\n            {calculateSumMembers(this.props.estimation, 'amount')}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  dispatchArrangeRow: data => {\n    dispatch(arrangeRow(data));\n  },\n  dispatchAddRow: id => {\n    dispatch(addRow(id));\n  },\n  dispatchRemoveRow: row => {\n    dispatch(removeRow(row));\n  },\n  dispatchEditCell: (cellId, name, value) => {\n    dispatch(editCell(cellId, name, value));\n  },\n  dispatchToggleTick: cellId => {\n    dispatch(toggleTick(cellId));\n  },\n  dispatchKeepToggle: () => {\n    dispatch(keepToggle());\n  },\n  dispatchCloseToggle: () => {\n    dispatch(closeToggle());\n  }\n});\nconst mapStateToProps = state => {\n  const { estimation } = state;\n  return { estimation };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import * as actionTypes from '../constant/index';\n\nexport const arrangeRow = data => {\n  return {\n    type: actionTypes.ARRANGE_ROW,\n    data: data\n  };\n};\n\nexport const addRow = id => {\n  return {\n    type: actionTypes.ADD_ROW,\n    id: id\n  };\n};\nexport const removeRow = row => {\n  return {\n    type: actionTypes.REMOVE_ROW,\n    data: row\n  };\n};\nexport const editCell = (cellId, name, value) => {\n  return {\n    type: actionTypes.EDIT_CELL,\n    data: { cellId: cellId, name: name, value: value }\n  };\n};\nexport const toggleTick = cellId => {\n  return {\n    type: actionTypes.TOGGLE_TICK,\n    data: cellId\n  };\n};\n","import * as actionTypes from '../constant/index';\n\nexport const toggleEstimation = isOpen => {\n  return {\n    type: actionTypes.TOGGLE_ESTIMATION,\n    isOpen: isOpen\n  };\n};\nexport const keepToggle = () => {\n  return {\n    type: actionTypes.KEEP_TOGGLE\n  };\n};\nexport const closeToggle = () => {\n  return {\n    type: actionTypes.CLOSE_TOGGLE\n  };\n};\n","import React from 'react';\nimport Table from './Table';\n\nexport const Estimation = props => {\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      <Table />\n    </div>\n  );\n};\n","import React, {useState} from 'react';\nimport TreeNode from './components/TreeNode';\nimport Header from './components/Header';\nimport { Estimation } from './components/Estimation/index';\nimport { connect } from 'react-redux';\nlet classNames = require('classnames');\n\nconst App = props => {\n  const [toggleEstimation, setToggleEstimation] = useState(true)\n  return (\n    <div\n      className={classNames('wrapper flex relative overflow-scroll', 'flex-col')}\n    >\n      <div\n        className={classNames([\n          'w-full z-0 px-8 mt-24',\n        ])}\n      >\n        <Header setToggleEstimation={setToggleEstimation}/>\n        <TreeNode toggleEstimation={toggleEstimation} store={props.store} />\n      </div>\n      {!toggleEstimation && <div onClick={()=>setToggleEstimation(toggleEstimation=>!toggleEstimation)} className=\"bg-gray-700 opacity-50 min-h-screen min-w-screen z-100 absolute top-0 left-0 right-0 bottom-0\"></div>}\n      {!toggleEstimation && (\n        <div className=\"estimation-panel w-1/2 min-h-screen overflow-scroll fixed right-0 top-0 bottom-0\">\n          <Estimation setToggleEstimation={setToggleEstimation} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export class Tree {\n  constructor(root) {\n    this._root = root || null;\n  }\n\n  _buildTree(initialTree) {\n    this._root = initTree;\n  }\n\n  _traverse(callback) {\n    function goThrough(node) {\n      callback(node);\n      node.children.forEach(child => {\n        goThrough(child);\n      });\n    }\n    goThrough(this._root);\n  }\n\n  _addNode(value, parentValue) {\n    const newNode = {\n      value: value,\n      children: []\n    };\n\n    if (this._root === null) {\n      this._root = newNode;\n      return;\n    }\n\n    this._traverse(node => {\n      if (node.value.id === parentValue) {\n        return node.children.push(value);\n      }\n    });\n  }\n\n  _addSibling(value, parentValue, siblingValue, position) {\n    if (position === 'right') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition + 1, 0, value);\n        }\n      });\n    }\n    if (position === 'left') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition, 0, value);\n        }\n      });\n    }\n  }\n\n  _removeNode(value) {\n    this._traverse(node => {\n      node.children.forEach((childNode, index) => {\n        if (childNode.value.id === value) {\n          node.children.splice(index, 1);\n        }\n      });\n    });\n  }\n\n  _search(value) {\n    let returnNode = 'Not Found';\n    this._traverse(node => {\n      if (node && node.value.id === value) {\n        returnNode = node;\n      }\n    });\n    return returnNode;\n  }\n\n  _displayLeafs(parentValue) {\n    const parentNode =\n      typeof parentValue === 'string' ? this._search(parentValue) : parentValue;\n    let leafsRet = [];\n    if (parentValue?.children && !parentValue.children.length) {\n      return parentValue;\n    }\n\n    parentNode &&\n      parentNode.children.forEach(child => {\n        leafsRet.push(this._displayLeafs(child));\n      });\n\n    return leafsRet.flat();\n  }\n\n  _childPosition(parentValue, siblingValue) {\n    let position;\n    this._search(parentValue).children.map((n, key) => {\n      if (n.value.id === siblingValue) {\n        position = key;\n      }\n    });\n    return position;\n  }\n}\n\nexport const initTree = () => {\n  const tree = new Tree();\n  return tree;\n};\n","export const isFirstChild = 'isFirstChild';\nexport const isLastChild = 'isLastChild';\nexport const isChild = 'isChild';\n","import * as actionTypes from '../constant';\nimport { initTree } from '../constant/tree';\nimport { getPosition } from '../utils/getPosition';\nimport * as positionTypes from '../constant/position';\n\nlet ChartTree;\n\nlet tree = initTree();\n// console.log(!localStorage.check());\n// if (!localStorage.check() === true) {\n//   ChartTree = {\n//     group: 'main',\n//     id: 'te83nwko7b',\n//     name: 'Root',\n//     root: true,\n//     hasChildren: false,\n//     children: []\n//   };\n//   localStorage.set(ChartTree);\n//   tree._addNode(ChartTree);\n// } else {\n//   ChartTree = localStorage.get();\n//   tree._addNode(ChartTree._root);\n// }\ntree._addNode({\n  group: 'main',\n  id: 'te83nwko7b',\n  name: 'Root',\n  root: true,\n  hasChildren: false,\n  children: [],\n  estimation: {}\n});\nconst initialState = {\n  tree\n};\nexport const treeReducer = (state = initialState, action) => {\n  const { cell } = action;\n  let parentId = cell?.value?.parentId;\n  const siblingId = cell?.value?.siblingId || action.siblingId;\n  let { tree } = state;\n  let parentNode = tree?._search(parentId);\n  const position = parentNode?.children?.length;\n  const length = parentNode?.children?.length;\n  let childPos, cellPos;\n  switch (action.type) {\n    case actionTypes.ADD_CHILD:\n      cell.value.position = getPosition(length, position);\n      //toggle previous sibling node into isChild\n      if (parentNode.children.length > 1) {\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      //toggle previous sibling to be first node if there are 2 siblings\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n      }\n      //toggle parent hasChildren field to true\n      if (parentNode) {\n        parentNode.value.hasChildren = true;\n      }\n      tree._addNode(cell, parentId);\n      return {...state, tree}\n\n    case actionTypes.APPEND_CHILD:\n      cellPos = cell.value.position;\n      tree._removeNode(cell.value.id);\n      cell.value.parentId = action.parentId;\n      cell.value.position = '';\n      tree._addNode(cell, action.parentId);\n      tree._search(action.parentId).value.hasChildren = true;\n      //handle position of target's parent node\n      const grandparent = tree._search(\n        tree._search(action.parentId).value.parentId\n      );\n      const grandLength = grandparent.children.length;\n      if (grandLength === 1) {\n        grandparent.children[0].value.position = '';\n      }\n      //handle position of the dragged cell\n      if (length - 1 === 1) {\n        parentNode.children[0].position = '';\n      }\n      childPos = tree._childPosition(parentId, cell.value.id);\n      if (length - 1 > 1 && cellPos === positionTypes.isFirstChild) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n      }\n      if (length - 1 > 1 && cellPos === positionTypes.isLastChild) {\n        if (parentNode) {\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n        }\n      }\n      return { ...state, tree };\n\n    case actionTypes.ADD_SIBLING:\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n        cell.value.position = positionTypes.isLastChild;\n      }\n      if (length > 1 && childPos === length - 1) {\n        cell.value.position = positionTypes.isLastChild;\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      if (length > 1 && childPos !== length - 1) {\n        cell.value.position = positionTypes.isChild;\n      }\n      tree._addSibling(cell, parentId, siblingId, 'right');\n      return { ...state, tree };\n\n    case actionTypes.APPEND_RIGHT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree?._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos + 1 && cellPos !== childPos) {\n        if (cellPos === 0 && childPos !== length - 1) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length === 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length > 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos !== 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isChild;\n        }\n        if (cellPos === length - 1) {\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (\n          length > 2 &&\n          cellPos !== 0 &&\n          cellPos !== length - 1 &&\n          childPos === length - 1\n        ) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'right');\n      }\n      return { ...state, tree };\n\n    case actionTypes.APPEND_LEFT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos - 1 && childPos !== cellPos) {\n        if (childPos === 0 && cellPos !== length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n        }\n\n        if (childPos === 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n        }\n        if (childPos !== 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[childPos].value.position =\n            positionTypes.isLastChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'left');\n      }\n      return { ...state, tree };\n\n    case actionTypes.REMOVE_CELL:\n      tree._removeNode(cell.id);\n      const parentLength = tree?._search(cell.parentId)?.children.length;\n      //is cell is first\n      if (tree._search(cell.parentId).children.length > 1) {\n        tree._search(cell.parentId).children[0].value.position =\n          positionTypes.isFirstChild;\n        tree._search(cell.parentId).children[parentLength - 1].value.position =\n          positionTypes.isLastChild;\n      }\n      //if cell if first child in 2-child-array\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      //if cell is last cell\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      return { ...state, tree };\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from '../constant';\nimport { getColor } from '../utils/getColor';\nimport * as localStorage from '../utils/localStorage';\nimport * as constant from '../constant';\nconst uuidv4 = require('uuid/v4');\n\nlet defaultValue = [\n  {\n    id: 'root',\n    title: '1',\n    order: 0,\n    rate: 0,\n    hours: 0,\n    amount: 0,\n    activated: true,\n    color: getColor(0)\n  }\n];\nlet initialState;\nif (localStorage.check(constant.ESTIMATION)) {\n  initialState = localStorage.get(constant.ESTIMATION);\n} else {\n  initialState = defaultValue;\n}\n\nexport const estimationReducer = (state = initialState, action) => {\n  const { data } = action;\n  let estimation;\n  switch (action.type) {\n    case actionTypes.ARRANGE_ROW:\n      estimation = data;\n      return [...estimation];\n    case actionTypes.ADD_ROW:\n      const id = uuidv4();\n      var position = state.length;\n      const newRow = {\n        id: id,\n        title: '',\n        rate: 0,\n        hours: 0,\n        color: getColor(position),\n        activated: true\n      };\n      let count = 0;\n      state.map(e => {\n        if (e.id === data) {\n          state.push(newRow);\n          count = 1;\n        }\n      });\n      if (count === 0) {\n        state.push(newRow);\n      }\n      return [...state];\n    case actionTypes.REMOVE_ROW:\n      state = state.filter(it => it.id !== data.id);\n      return [...state];\n    case actionTypes.EDIT_CELL:\n      let { cellId, value, name } = data;\n      state.map(e => {\n        if (e.id === cellId) {\n          e[`${name}`] = value;\n        }\n      });\n      return [...state];\n    case actionTypes.TOGGLE_TICK:\n      state.map(e => {\n        if (e.id === data) {\n          e.activated = !e.activated;\n        }\n      });\n      return [...state];\n    default:\n      return state;\n  }\n};\n","export const getColor = key => {\n  switch (key) {\n    case 0:\n      return 'rgb(234, 94, 94)';\n    case 1:\n      return 'rgb(130, 197, 72)';\n    case 2:\n      return 'rgb(234, 196, 94)';\n    case 3:\n      return 'rgb(94, 210, 234)';\n    case 4:\n      return 'rgb(230, 94, 234)';\n    case 5:\n      return 'rgb(94, 234, 200)';\n    case 6:\n      return 'rgb(94, 129, 234)';\n    case 7:\n      return 'rgb(244, 160, 7)';\n    default:\n      return 'rgb(234, 94, 94)';\n  }\n};\n","import { combineReducers } from 'redux';\nimport { treeReducer as tree } from './treeReducer';\nimport { toggleEstimationReducer as toggleEstimation } from './toggleEstimationReducer';\nimport { estimationReducer as estimation } from './estimationReducer';\n\nexport default combineReducers({\n  tree,\n  toggleEstimation,\n  estimation\n});\n","import * as actionTypes from '../constant/index';\nimport { toggleEstimation } from '../actions/toggleEstimation';\nimport { toggle } from '../constant/estimationTable';\n\nconst initialState = false;\n\nexport const toggleEstimationReducer = (state = initialState, action) => {\n  const { isOpen } = action;\n  switch (action.type) {\n    case actionTypes.TOGGLE_ESTIMATION:\n      return isOpen;\n    case actionTypes.KEEP_TOGGLE:\n      return toggle.true;\n    case actionTypes.CLOSE_TOGGLE:\n      return toggle.false;\n    default:\n      return initialState;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  blacklist: ['tree'],\n  stateReconciler: autoMergeLevel2\n};\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  pReducer,\n  composeEnhancer(applyMiddleware(logger))\n);\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { store, persistor } from './configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//method to manage local storage for tree data\nconst set = tree => {\n  window.localStorage.setItem('tree', JSON.stringify(tree));\n};\nconst clear = () => {\n  window.localStorage.removeItem('tree');\n};\n\nconst update = tree => {\n  window.localStorage.setItem('tree', JSON.stringify(tree));\n};\nconst get = key => {\n  return JSON.parse(\n    JSON.parse(window.localStorage.getItem('persist:root'))[key]\n  );\n};\nconst check = key => {\n  if (window.localStorage.getItem('persist:root')) {\n    return !JSON.parse(window.localStorage.getItem('persist:root'))[key];\n  } else {\n    return false;\n  }\n};\nmodule.exports = {\n  set,\n  update,\n  clear,\n  get,\n  check\n};\n"],"sourceRoot":""}