{"version":3,"sources":["components/Button.js","components/Cell/index.js","components/TreeNode.js","actions/cell.js","constant/index.js","App.js","serviceWorker.js","reducers/treeReducer.js","constant/tree.js","reducers/index.js","store.js","index.js"],"names":["Button","_ref","name","className","style","react_default","a","createElement","index_esm","color","classNames","require","Cell","props","cell","value","id","root","handleAddChild","handleAddSibling","handleRemoveCell","isEditing","setIsEditing","activeCell","editing","onClick","uuidv4","connect","state","tree","_root","console","log","dispatch","dispatchAddChild","type","addChild","dispatchAddSibling","addSibling","dispatchRemoveCell","removeCell","TreeNode","_tree$value","_tree$children","forceUpdate","_useState","useState","_useState2","Object","slicedToArray","set","useForceUpdate","_useState3","_useState4","parentId","newCell","group","children","Cell_Cell","length","map","treeNode","key","App","components_TreeNode","store","Boolean","window","location","hostname","match","ChartTree","Tree","classCallCheck","this","createClass","callback","goThrough","node","forEach","child","parentValue","newNode","_traverse","push","childNode","index","splice","returnNode","_this","parentNode","_search","leafsRet","_displayLeafs","flat","_addNode","initialState","combineReducers","arguments","undefined","action","objectSpread","_removeNode","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09315f8d.chunk.js","sourcesContent":["import React from 'react';\nimport { IoIosAddCircle, IoIosRemoveCircle } from 'react-icons/io';\n\nexport default function Button({ name, className, style }) {\n  switch (name) {\n    case 'add':\n      return (\n        <IoIosAddCircle className=\"w-8 h-8\" style={{ color: '#2f7fef' }} />\n      );\n    case 'minus':\n      return <IoIosRemoveCircle className=\"w-8 h-8\" style={{ color: 'red' }} />;\n    default:\n      return null;\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IoIosMore } from 'react-icons/io';\nimport Button from '../Button';\nvar classNames = require('classnames');\n\nexport const Cell = props => {\n  const cell = props.cell.value;\n  const { name, id, root } = cell;\n  const { handleAddChild, handleAddSibling, handleRemoveCell } = props;\n  const { isEditing, setIsEditing } = props;\n  const { activeCell, editing } = isEditing;\n  return (\n    <div>\n      <div className=\"mt-12 w-64 h-32 relative\">\n        <div\n          onClick={() => {\n            //reset active cell to empty string if user toggle editing from true to false\n            setIsEditing({ activeCell: editing ? '' : id, editing: !editing });\n          }}\n          className={classNames(\n            'border main-border w-56 h-24',\n            root ? 'absolute below-line' : 'absolute above-line'\n          )}\n        >\n          <div\n            className={classNames(\n              'flex items-center h-4 w-full main-border-bottom',\n              editing && activeCell === id && 'main-bg'\n            )}\n          >\n            <IoIosMore\n              className={classNames(\n                'text-4xl font-semibold pl-2',\n                editing && id === activeCell ? 'text-white' : 'main-text-color'\n              )}\n            />\n          </div>\n          <div className=\"relative px-2 py-2 text-xl font-semibold main-text-color\">\n            {id || '...'}\n          </div>\n        </div>\n        {/* only render \"add sibling\" button for cell not root*/}\n        {!cell.root &&\n          (activeCell !== id && (\n            <div\n              className={[\n                'ml-4 opacity-0 hover:opacity-100 flex justify-center w-12 h-24 absolute top-0 right-0'\n              ]}\n              onClick={() => {\n                handleAddSibling(cell);\n              }}\n            >\n              <Button name=\"add\" />\n            </div>\n          ))}\n        {activeCell !== id && (\n          <div\n            className={[\n              'absolute bottom-0 opacity-0 hover:opacity-100 flex justify-center w-56 h-4'\n            ]}\n            onClick={() => {\n              handleAddChild(cell);\n            }}\n          >\n            <Button name=\"add\" />\n          </div>\n        )}\n        {activeCell === id && (\n          <div\n            className={classNames(\n              'absolute bottom-0 right-0 flex justify-center w-56 h-4',\n              editing && activeCell === id ? 'opacity-1' : 'opacity-0'\n            )}\n            onClick={() => {\n              handleRemoveCell(cell);\n            }}\n          >\n            <Button name=\"minus\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {};\n\nexport default connect(mapStateToProps)(Cell);\n","import React, { useState } from 'react';\nimport { Cell } from './Cell';\nimport { connect } from 'react-redux';\nimport { addChild, addSibling, removeCell } from '../actions/cell';\n\nconst uuidv4 = require('uuid/v4');\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\nconst TreeNode = props => {\n  const forceUpdate = useForceUpdate();\n  const { tree } = props;\n  const [isEditing, setIsEditing] = useState({\n    activeCell: '',\n    editing: false\n  });\n\n  const { dispatchAddChild, dispatchAddSibling, dispatchRemoveCell } = props;\n  const handleAddChild = cell => {\n    console.log(cell);\n    console.log(cell.parentId);\n    console.log(cell.id);\n    const id = uuidv4();\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.id,\n        root: false\n      },\n      children: []\n    };\n    dispatchAddChild(newCell);\n    forceUpdate();\n  };\n  const handleAddSibling = cell => {\n    const id = uuidv4();\n\n    let newCell = {\n      value: { group: 'body', id: id, name: '...', parentId: cell.parentId },\n      children: []\n    };\n    dispatchAddSibling(newCell);\n    forceUpdate();\n  };\n\n  const handleRemoveCell = cell => {\n    dispatchRemoveCell(cell);\n    forceUpdate();\n  };\n  return (\n    <div>\n      {/* render root cell */}\n      <div className=\"flex justify-center\">\n        {tree?.value?.root && (\n          <Cell\n            isEditing={isEditing}\n            setIsEditing={setIsEditing}\n            cell={tree}\n            handleAddChild={handleAddChild}\n            handleAddSibling={handleAddSibling}\n          />\n        )}\n      </div>\n      <div className=\"flex justify-center\">\n        {tree?.children?.length > 0 &&\n          tree.children.map((treeNode, key) => (\n            <div key={key} className=\"flex flex-col items-center\">\n              <Cell\n                isEditing={isEditing}\n                setIsEditing={setIsEditing}\n                key={key}\n                cell={treeNode}\n                handleAddChild={handleAddChild}\n                handleAddSibling={handleAddSibling}\n                handleRemoveCell={handleRemoveCell}\n              />\n              {treeNode.children.length > 0 && (\n                <TreeNode\n                  tree={treeNode}\n                  dispatchAddChild={dispatchAddChild}\n                  dispatchAddSibling={dispatchAddSibling}\n                  dispatchRemoveCell={dispatchRemoveCell}\n                />\n              )}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  dispatchAddChild: cell => {\n    dispatch(addChild(cell));\n  },\n  dispatchAddSibling: cell => {\n    dispatch(addSibling(cell));\n  },\n  dispatchRemoveCell: cell => {\n    dispatch(removeCell(cell));\n  }\n});\n\nconst mapStateToProps = state => {\n  const tree = state.tree.tree._root;\n  console.log(tree);\n  return { tree };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TreeNode);\n","import * as actionTypes from '../constant/index';\nexport const addChild = cell => ({\n  type: actionTypes.ADD_CHILD,\n  cell: cell\n});\n\nexport const addSibling = cell => ({\n  type: actionTypes.ADD_SIBLING,\n  cell: cell\n});\n\nexport const removeCell = cell => ({\n  type: actionTypes.REMOVE_CELL,\n  cell: cell\n});\n","export const main = 'MAIN';\nexport const ADD_CHILD = 'ADD_CHILD';\nexport const ADD_SIBLING = 'ADD_SIBLING';\nexport const REMOVE_CELL = 'REMOVE_CELL';\n","import React from 'react';\nimport TreeNode from './components/TreeNode';\n\nconst App = props => {\n  return (\n    <div>\n      <TreeNode store={props.store} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../constant';\nimport { initTree } from '../constant/tree';\n\nconst ChartTree = initTree();\n//add root node to tree\nChartTree._addNode({\n  group: 'main',\n  id: 'te83nwko7b',\n  name: 'Main page',\n  parentId: '',\n  root: true\n});\n//seed other node\nChartTree._addNode(\n  {\n    group: 'body',\n    id: 'te83nwkoaa',\n    name: 'Body',\n    parentId: 'te83nwko7b',\n    root: false\n  },\n  'te83nwko7b'\n);\nChartTree._addNode(\n  {\n    group: 'body',\n    id: '22nwkoaa',\n    name: '1',\n    parentId: 'te83nwko7b',\n    root: false\n  },\n  'te83nwko7b'\n);\nconst tree = ChartTree;\nconst initialState = {\n  tree\n};\nexport const treeReducer = (state = initialState, action) => {\n  const { cell } = action;\n  let { tree } = state;\n  switch (action.type) {\n    case actionTypes.ADD_CHILD:\n      tree._addNode(cell, cell.value.parentId);\n      return { ...state, tree };\n    case actionTypes.ADD_SIBLING:\n      tree._addNode(cell, cell.value.parentId);\n      return { ...state, tree };\n    case actionTypes.REMOVE_CELL:\n      tree._removeNode(cell.id);\n      return { ...state, tree };\n    default:\n      return state;\n  }\n};\n","export class Tree {\n  constructor(root) {\n    this._root = root || null;\n  }\n\n  _traverse(callback) {\n    const self = this;\n    function goThrough(node) {\n      callback(node);\n      node.children.forEach(child => {\n        goThrough(child);\n      });\n    }\n    goThrough(this._root);\n  }\n\n  _addNode(value, parentValue) {\n    const newNode = {\n      value: value,\n      children: []\n    };\n\n    if (this._root === null) {\n      this._root = newNode;\n      return;\n    }\n\n    this._traverse(node => {\n      if (node.value.id === parentValue) {\n        return node.children.push(newNode);\n      }\n    });\n  }\n\n  _removeNode(value) {\n    this._traverse(node => {\n      node.children.forEach((childNode, index) => {\n        if (childNode.value.id === value) {\n          node.children.splice(index, 1);\n        }\n      });\n    });\n  }\n\n  _search(value) {\n    let returnNode = 'Not Found';\n    this._traverse(node => {\n      if (node.value === value) {\n        returnNode = node;\n      }\n    });\n    return returnNode;\n  }\n\n  _displayLeafs(parentValue) {\n    const parentNode =\n      typeof parentValue === 'string' ? this._search(parentValue) : parentValue;\n    let leafsRet = [];\n    if (parentValue.children && !parentValue.children.length) {\n      return parentValue;\n    }\n\n    parentNode.children.forEach(child => {\n      leafsRet.push(this._displayLeafs(child));\n    });\n\n    return leafsRet.flat();\n  }\n}\n\nexport const initTree = () => {\n  const tree = new Tree();\n  return tree;\n};\n","import { combineReducers } from 'redux';\nimport { treeReducer as tree } from './treeReducer';\nexport default combineReducers({\n  tree\n});\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport rootReducer from './reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(logger))\n  );\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}