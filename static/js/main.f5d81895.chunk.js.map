{"version":3,"sources":["components/Button.js","utils/getPosition.js","components/Cell/index.js","components/TreeNode.js","actions/cell.js","constant/index.js","components/Header.js","actions/toggleEstimation.js","constant/estimationTable.js","components/Estimation/Tick.js","utils/cloneObj.js","components/Estimation/Table.js","actions/estimation.js","components/Estimation/index.js","App.js","serviceWorker.js","constant/tree.js","constant/position.js","reducers/treeReducer.js","reducers/estimationReducer.js","utils/getColor.js","reducers/index.js","reducers/toggleEstimationReducer.js","configureStore.js","index.js","utils/localStorage.js"],"names":["Button","_ref","name","className","style","react_default","a","createElement","index_esm","color","getConnectLine","position","classNames","require","Cell","props","forceUpdate","_useState","useState","_useState2","Object","slicedToArray","set","value","useForceUpdate","_props$cell$value","cell","id","root","estimation","toggleEstimation","handleAddChild","handleAddSibling","handleRemoveCell","handleAppendChild","handleAppendSibling","activeCell","setActiveCell","console","log","_useState3","_useState4","setIsDragging","_useState5","_useState6","onHover","setOnHover","inputRef","React","createRef","cellRef","allowDrop","event","currentArea","target","getAttribute","includes","concat","preventDefault","handleClickEvent","useCallback","current","contains","useEffect","document","addEventListener","removeEventListener","drop","data","targetCell","getElementById","dropCell","cellId","dataTransfer","getData","JSON","parse","hasChildNodes","replace","cellsCollection","getElementsByClassName","toConsumableArray","map","v","classList","remove","onDrop","e","onDragOver","ref","children","length","onDragStart","setData","stringify","draggable","onClick","handleActive","width","rows","data-min-rows","placeholder","onDragLeave","key","activated","hours","uuidv4","calculateNodeWidth","_document","_document$getElementB","offsetWidth","connect","state","tree","_root","dispatch","dispatchAddChild","type","addChild","dispatchAppendChild","parentId","appendChild","dispatchAddSibling","addSibling","dispatchRemoveCell","removeCell","dispatchAppendSibling","siblingId","appendSibling","TreeNode","_tree$value","_tree$children","newCell","group","hasChildren","Cell_Cell","obj","treeNode","nodeWidth","dispatchToggleEstimation","isOpen","fa_index_esm","head","unit","toggle","Tick","index","clone","copy","constructor","attr","hasOwnProperty","calculateSumMembers","arr","Array","isArray","reduce","cnt","o","parseFloat","rate","Table","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAddRow","dispatchAddRow","dispatchKeepToggle","handleRemoveRow","row","window","confirm","dispatchRemoveRow","onDragEnd","fromIndex","toIndex","item1","item2","dispatchArrangeRow","dragProps","nodeSelector","handleSelector","handleInputChange","_e$target","prefix","split","dispatchEditCell","handleToggleTick","dispatchToggleTick","bind","assertThisInitialized","reset","setState","_this2","which","keyCode","_this3","lib_default","table","h","item","autoComplete","onChange","title","Estimation_Tick","Component","arrangeRow","addRow","removeRow","editCell","toggleTick","dispatchCloseToggle","Estimation","Estimation_Table","components_Header","components_TreeNode","store","Estimation_Estimation","Boolean","location","hostname","match","Tree","createClass","initialTree","initTree","callback","goThrough","node","forEach","child","parentValue","newNode","_traverse","push","siblingValue","siblingPosition","n","splice","childNode","returnNode","parentNode","_search","leafsRet","_displayLeafs","flat","isChild","_addNode","initialState","getColor","defaultValue","order","amount","localStorage","combineReducers","_cell$value","_cell$value2","_parentNode$children","_parentNode$children2","_tree$_search","childPos","cellPos","arguments","undefined","action","getPosition","positionTypes","objectSpread","_removeNode","grandparent","_childPosition","_addSibling","parentLength","newRow","count","filter","it","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","blacklist","stateReconciler","autoMergeLevel2","pReducer","persistReducer","rootReducer","createStore","applyMiddleware","logger","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","setItem","update","clear","removeItem","get","getItem","check"],"mappings":"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","file":"static/js/main.f5d81895.chunk.js","sourcesContent":["import React from 'react';\nimport { IoIosAddCircle, IoIosRemoveCircle } from 'react-icons/io';\n\nexport default function Button({ name, className, style }) {\n  switch (name) {\n    case 'add':\n      return (\n        <IoIosAddCircle\n          className=\"w-12 h-12 text-white z-100\"\n          style={{ color: '#2f7fef' }}\n        />\n      );\n    case 'minus':\n      return (\n        <IoIosRemoveCircle className=\"w-12 h-12\" style={{ color: 'red' }} />\n      );\n    default:\n      return null;\n  }\n}\n","//this function get position of a child node in it's parents' children array\nexport const getPosition = (length, position) => {\n  if (position === 0 && length > 0) {\n    return 'isFirstChild';\n  }\n  if (position === length && position !== 0) {\n    return 'isLastChild';\n  }\n  if (position !== 0 && position < length && length > 2) {\n    return 'isChild';\n  }\n};\nexport const getConnectLine = position => {\n  switch (position) {\n    case 'isFirstChild':\n      return 'right-connect-line';\n    case 'isChild':\n      return 'full-connect-line';\n    case 'isLastChild':\n      return 'left-connect-line';\n    default:\n      return '';\n  }\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { IoIosMore } from 'react-icons/io';\nimport Button from '../Button';\nimport { getConnectLine } from '../../utils/getPosition';\nlet classNames = require('classnames');\n\n// create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\nexport const Cell = props => {\n  const forceUpdate = useForceUpdate();\n  const { name, id, root, position } = props.cell.value;\n  const { estimation, toggleEstimation } = props;\n  const {\n    handleAddChild,\n    handleAddSibling,\n    handleRemoveCell,\n    handleAppendChild,\n    handleAppendSibling\n  } = props;\n  const { activeCell, setActiveCell } = props;\n  console.log('active cell in cell ',activeCell);\n  const [isDragging, setIsDragging] = useState(false);\n  const [onHover, setOnHover] = useState(null);\n  const inputRef = React.createRef();\n  const cellRef = React.createRef(null)\n  const dragStart = (event, cell) => {\n    setIsDragging(true);\n    event.dataTransfer.setData('cell', JSON.stringify(cell));\n  };\n  const allowDrop = event => {\n    const currentArea = event.target.getAttribute('id');\n    const name = event.target.getAttribute('name');\n    let id;\n    if (currentArea?.includes('sibling-dropzone')) {\n      setOnHover(currentArea);\n    }\n    if (name === 'child-dropzone') {\n      setOnHover(`child-dropzone-${id}`);\n    }\n    event.preventDefault();\n  };\n\n  const handleDragLeave = event => {\n    const currentArea = event.target.getAttribute('id');\n    if (currentArea.includes('sibling-dropzone')) {\n      setOnHover(null);\n    }\n    if (event.target.getAttribute('name') === 'child-dropzone') {\n      setOnHover(null);\n    }\n  };\n\n  const handleClickEvent = useCallback(\n    (event) => {\n    const { target } = event\n      if (cellRef && cellRef.current && id===activeCell && !cellRef.current.contains(target)) {\n      setActiveCell(null)\n    }\n    },\n    [activeCell, cellRef, id, setActiveCell],\n  )\n  useEffect(() => {\n  document.addEventListener('click', handleClickEvent)\n  return () => {\n    document.removeEventListener('click', handleClickEvent)\n  };\n}, [handleClickEvent])\n\n  const drop = (event, data) => {\n    event.preventDefault();\n    const targetCell = document.getElementById(id);\n    const dropCell = event.target;\n    let cellId = dropCell.getAttribute('id');\n    var data = event.dataTransfer.getData('cell');\n    data = JSON.parse(data);\n    if (\n      targetCell.hasChildNodes(dropCell) &&\n      dropCell.getAttribute('name') !== 'right-sibling-dropzone' &&\n      dropCell.getAttribute('name') !== 'left-sibling-dropzone'\n    ) {\n      cellId = cellId.replace(/edit-/g, '') || cellId;\n      handleAppendChild(data, cellId);\n      forceUpdate();\n    }\n    if (event.target.getAttribute('name') === 'right-sibling-dropzone') {\n      event.target.style.className = 'is-dragging';\n      cellId = cellId.replace(/right-sibling-dropzone-/g, '');\n      handleAppendSibling('right', data, cellId);\n      const cellsCollection = document.getElementsByClassName('cell');\n      let cellArr = [...cellsCollection];\n      cellArr.map(v => {\n        v.classList.remove('on-right-dragged-over', 'on-left-dragged-over');\n      });\n    }\n    if (event.target.getAttribute('name') === 'left-sibling-dropzone') {\n      cellId = cellId.replace(/left-sibling-dropzone-/g, '');\n      handleAppendSibling('left', data, cellId);\n    }\n    setIsDragging(false);\n    setOnHover(null);\n    forceUpdate();\n  };\n  const handleActive = e => {\n    const currentId = e.target.getAttribute('id');\n    if (currentId.includes(id)) {\n      if (!activeCell || activeCell !== id) {\n        setActiveCell(id);\n      }\n      if (activeCell) {\n        setActiveCell(null);\n      }\n    }\n  };\n\n  return (\n    <div className={classNames(getConnectLine(position))}>\n      <div className={classNames('relative')}>\n        <div\n          className={classNames(\n            'cell cell-width mt-12 h-32 flex justify-center relative',\n            onHover?.includes(id) &&\n              onHover?.includes('right') &&\n              'on-right-dragged-over',\n            onHover?.includes(id) &&\n              onHover?.includes('left') &&\n              'on-left-dragged-over'\n          )}\n        >\n          {!root && (\n            <div\n              className={classNames(\n                'left-dz bg-red absolute left-0 top-0 dropzone bg-transparent'\n              )}\n              name=\"left-sibling-dropzone\"\n              id={`left-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n            ></div>\n          )}\n          <div\n            id={id}\n            ref={cellRef}\n            name=\"child-dropzone\"\n            className={classNames(\n              'border main-border rounded-lg w-56',\n              !root && 'absolute above-line min-h-cell',\n              props.cell.children.length > 0 && 'absolute below-line'\n            )}\n            onDragStart={e => dragStart(e, props.cell)}\n            draggable={!root && 'true'}\n            onDrop={e => {\n              drop(e, props.cell);\n            }}\n            onDragOver={e => allowDrop(e)}\n          >\n            <div\n              className={classNames(\n                'flex items-center h-4 w-full main-border-bottom',\n                !root && 'draggable',\n                activeCell === id && 'main-bg'\n              )}\n            >\n              <IoIosMore\n                className={classNames(\n                  'text-4xl font-semibold pl-2',\n                  id === activeCell ? 'text-white' : 'main-text-color'\n                )}\n              />\n            </div>\n            <div\n              ref={inputRef}\n              className=\"relative px-2 py-2 text-xl font-semibold main-text-color\"\n              id={`edit-${id}`}\n              onClick={e => handleActive(e)}\n            >\n              <textarea\n                style={{width:'100%'}}\n                rows=\"2\"\n                data-min-rows=\"2\"\n                id={`textarea-${id}`}\n                placeholder={name}\n              ></textarea>\n            </div>\n          </div>\n          {/* only render \"add sibling\" button for cell not root*/}\n          {!root && activeCell !== id && (\n            <div\n              className={[\n                'absolute opacity-0 hover:opacity-100 flex justify-center w-24 h-32 top-0 right-0'\n              ]}\n              onClick={() => {\n                handleAddSibling(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\" z-100\" />\n            </div>\n          )}\n          {!root && (\n            <div\n              className={classNames(\n                'right-dz bg-red absolute top-0 right-0 dropzone bg-transparent'\n              )}\n              name=\"right-sibling-dropzone\"\n              id={`right-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n              onDragLeave={e => handleDragLeave(e)}\n            ></div>\n          )}\n          {/* estimation vertical line */}\n          {toggleEstimation && (\n            <div className=\"flex flex-col h-auto items-center justify-center absolute right-0\">\n              {estimation.map(\n                (e, key) =>\n                  e.activated && (\n                    <div\n                      key={key}\n                      className={classNames([\n                        'w-8 text-center h-6 px-2',\n                        key !== estimation.length - 1 &&\n                          key !== 0 &&\n                          'border-middle-cells',\n                        key === 0 && 'border-first-cell',\n                        key === estimation.length - 1 && 'border-last-cell'\n                      ])}\n                      style={{ color: e.activated ? e.color : '' }}\n                    >\n                      {e.hours}\n                    </div>\n                  )\n              )}\n            </div>\n          )}\n          {/* ends estimation vertical line */}\n          {activeCell !== id && (\n            <div\n              className={[\n                'absolute bottom-0 opacity-0 hover:opacity-100 flex justify-center w-56 h-8'\n              ]}\n              onClick={() => {\n                handleAddChild(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\"absolute z-100\" />\n            </div>\n          )}\n          {/* toggle remove button on hover cell but not the root cell */}\n          {activeCell === id && !root && (\n            <div\n              id={`remove${id}`}\n              className={classNames(\n                'absolute bottom-0 right-0 flex justify-center w-56 h-8',\n                activeCell === id ? 'opacity-1' : 'opacity-0'\n              )}\n              onClick={() => {\n                handleRemoveCell(props.cell.value);\n              }}\n            >\n              <Button id={`remove${id}`} name=\"minus\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cell;\n","import React, { useState } from 'react';\nimport { Cell } from './Cell';\nimport { connect } from 'react-redux';\nimport {\n  addChild,\n  appendChild,\n  addSibling,\n  removeCell,\n  appendSibling\n} from '../actions/cell';\nconst uuidv4 = require('uuid/v4');\nvar classNames = require('classnames');\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n  const [_, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\n\nconst calculateNodeWidth = id => {\n  return id && document?.getElementById(id)?.offsetWidth;\n};\nconst TreeNode = props => {\n  const forceUpdate = useForceUpdate();\n  const { tree, toggleEstimation } = props;\n  const { estimation } = props;\n  const [activeCell, setActiveCell] = useState(null);\n\n  const {\n    dispatchAddChild,\n    dispatchAppendChild,\n    dispatchAddSibling,\n    dispatchRemoveCell,\n    dispatchAppendSibling\n  } = props;\n\n  const handleAddChild = cell => {\n    const id = uuidv4();\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddChild(newCell);\n    forceUpdate();\n  };\n\n  const handleAppendChild = (cell, parentId) => {\n    //prevent dropping at the same cell\n    cell.value.id !== parentId && dispatchAppendChild(cell, parentId);\n    forceUpdate();\n  };\n  const handleAddSibling = cell => {\n    const id = uuidv4();\n\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.parentId,\n        siblingId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddSibling(newCell);\n    forceUpdate();\n  };\n\n  const handleAppendSibling = (position, data, siblingId) => {\n    let newCell = data;\n    dispatchAppendSibling(position, newCell, siblingId);\n    forceUpdate();\n  };\n\n  const handleRemoveCell = cell => {\n    dispatchRemoveCell(cell);\n    forceUpdate();\n  };\n  return (\n    <div className={[toggleEstimation && 'pointer-events-none']}>\n      {/* render root cell */}\n      <div className=\"flex justify-center\">\n        {tree?.value?.root && (\n          <Cell\n            toggleEstimation={toggleEstimation}\n            activeCell={activeCell}\n            setActiveCell={(obj)=>setActiveCell(obj)}\n            cell={tree}\n            estimation={estimation}\n            handleAddChild={handleAddChild}\n            handleAddSibling={handleAddSibling}\n            handleAppendSibling={handleAppendSibling}\n          />\n        )}\n      </div>\n      <div className=\"flex justify-center\">\n        {tree?.children?.length > 0 &&\n          tree.children.map((treeNode, key) => (\n            <div\n              id={treeNode.value.id}\n              key={key}\n              className={classNames('flex flex-col items-center relative')}\n            >\n              <Cell\n                  toggleEstimation={toggleEstimation}\n                  estimation={estimation}\n                  activeCell={activeCell}\n                  setActiveCell={(obj)=>setActiveCell(obj)}\n                  key={key}\n                  cell={treeNode}\n                  handleAddChild={handleAddChild}\n                  handleAppendChild={handleAppendChild}\n                  handleAddSibling={handleAddSibling}\n                  handleAppendSibling={handleAppendSibling}\n                  handleRemoveCell={handleRemoveCell}\n              />\n              {treeNode.children.length > 0 && (\n                <TreeNode\n                  toggleEstimation={toggleEstimation}\n                  estimation={estimation}\n                  nodeWidth={calculateNodeWidth(treeNode.value.id)}\n                  id={treeNode.value.id}\n                  tree={treeNode}\n                  dispatchAddChild={dispatchAddChild}\n                  dispatchAppendChild={dispatchAppendChild}\n                  dispatchAddSibling={dispatchAddSibling}\n                  dispatchRemoveCell={dispatchRemoveCell}\n                  dispatchAppendSibling={dispatchAppendSibling}\n                />\n              )}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  dispatchAddChild: cell => {\n    dispatch(addChild(cell));\n  },\n  dispatchAppendChild: (cell, parentId) => {\n    dispatch(appendChild(cell, parentId));\n  },\n  dispatchAddSibling: cell => {\n    dispatch(addSibling(cell));\n  },\n  dispatchRemoveCell: cell => {\n    dispatch(removeCell(cell));\n  },\n  dispatchAppendSibling: (position, cell, id) => {\n    dispatch(appendSibling(position, cell, id));\n  }\n});\n\nconst mapStateToProps = state => {\n  const tree = state.tree.tree._root;\n  const estimation = state.estimation;\n  return { tree, estimation };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TreeNode);\n","import * as actionTypes from '../constant/index';\nexport const addChild = cell => ({\n  type: actionTypes.ADD_CHILD,\n  cell: cell\n});\n\nexport const appendChild = (cell, parentId) => ({\n  type: actionTypes.APPEND_CHILD,\n  parentId: parentId,\n  cell: cell\n});\n\nexport const addSibling = cell => ({\n  type: actionTypes.ADD_SIBLING,\n  cell: cell\n});\n\nexport const removeCell = cell => ({\n  type: actionTypes.REMOVE_CELL,\n  cell: cell\n});\n\nexport const appendSibling = (position, cell, siblingId) => {\n  switch (position) {\n    case 'right':\n      return {\n        type: actionTypes.APPEND_RIGHT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    case 'left':\n      return {\n        type: actionTypes.APPEND_LEFT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    default:\n      return null;\n  }\n};\n","export const main = 'MAIN';\nexport const ESTIMATION = 'estimation';\nexport const ADD_CHILD = 'ADD_CHILD';\nexport const APPEND_CHILD = 'APPEND_CHILD';\nexport const ADD_SIBLING = 'ADD_SIBLING';\nexport const REMOVE_CELL = 'REMOVE_CELL';\nexport const APPEND_RIGHT_SIBLING = 'APPEND_RIGHT_SIBLING';\nexport const APPEND_LEFT_SIBLING = 'APPEND_LEFT_SIBLING';\nexport const TOGGLE_ESTIMATION = 'TOGGLE_ESTIMATION';\nexport const ARRANGE_ROW = 'ARRANGE_ROW';\nexport const ADD_ROW = 'ADD_ROW';\nexport const REMOVE_ROW = 'REMOVE_ROW';\nexport const EDIT_CELL = 'EDIT_CELL';\nexport const TOGGLE_TICK = 'TOGGLE_TICK';\nexport const KEEP_TOGGLE = 'KEEP_TOGGLE';\nexport const CLOSE_TOGGLE = 'CLOSE_TOGGLE';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FaDollarSign } from 'react-icons/fa';\nimport { toggleEstimation } from '../actions/toggleEstimation';\n\nconst Header = props => {\n  const { toggleEstimation } = props;\n  const { dispatchToggleEstimation } = props;\n  function handleClick() {\n    if (!toggleEstimation) {\n      dispatchToggleEstimation(true);\n    } else {\n      dispatchToggleEstimation(false);\n    }\n  }\n  return (\n    <div className=\"flex justify-end\">\n      <button\n        onClick={() => handleClick()}\n        className=\"w-12 h-12 bg-button flex justify-center items-center\"\n      >\n        <FaDollarSign />\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchToggleEstimation: isOpen => {\n    dispatch(toggleEstimation(isOpen));\n  }\n});\nconst mapStateToProps = state => {\n  const toggleEstimation = state.toggleEstimation;\n  return { toggleEstimation };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import * as actionTypes from '../constant/index';\n\nexport const toggleEstimation = isOpen => {\n  return {\n    type: actionTypes.TOGGLE_ESTIMATION,\n    isOpen: isOpen\n  };\n};\nexport const keepToggle = () => {\n  return {\n    type: actionTypes.KEEP_TOGGLE\n  };\n};\nexport const closeToggle = () => {\n  return {\n    type: actionTypes.CLOSE_TOGGLE\n  };\n};\n","export const head = [\n  { unit: '', name: 'ITEM', value: 'item' },\n  { unit: '', name: 'RATE', value: 'rate' },\n  { unit: 'h', name: 'HOURS', value: 'hours' },\n  { unit: '', name: 'AMOUNT', value: 'amount' }\n];\nexport const toggle = { true: true, false: false };\n","import React from 'react';\nimport { FaRegCheckCircle } from 'react-icons/fa';\nimport { IoIosCheckmarkCircle } from 'react-icons/io';\n\nconst Tick = props => {\n  const { activated, index, color } = props;\n  return (\n    <div>\n      {!activated && <FaRegCheckCircle color={[activated ? color : '']} />}\n      {activated && (\n        <IoIosCheckmarkCircle\n          className=\"text-xl\"\n          color={[activated ? color : '']}\n        />\n      )}\n    </div>\n  );\n};\nexport default Tick;\n","export const clone = obj => {\n  if (null == obj || 'object' != typeof obj) return obj;\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n  }\n  return copy;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactDragListView from 'react-drag-listview/lib/index.js';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport * as table from '../../constant/estimationTable';\nimport Tick from './Tick';\nimport { clone } from '../../utils/cloneObj';\nimport {\n  arrangeRow,\n  addRow,\n  removeRow,\n  editCell,\n  toggleTick\n} from '../../actions/estimation';\nimport { keepToggle, closeToggle } from '../../actions/toggleEstimation';\nlet classNames = require('classnames');\n\nconst calculateSumMembers = (arr, key) => {\n  let sum;\n  if (Array.isArray(arr) && arr.length > 0 && key !== 'amount') {\n    sum = arr.reduce(function(cnt, o) {\n      return cnt + parseFloat(o[key]);\n    }, 0);\n  } else if (Array.isArray(arr) && arr.length > 0 && key === 'amount') {\n    sum = arr.reduce(function(cnt, o) {\n      return cnt + parseFloat(o.rate) * parseFloat(o.hours);\n    }, 0);\n  } else {\n    sum = 0;\n  }\n  return sum;\n};\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAddRow = this.handleAddRow.bind(this);\n    this.state = {\n      parentId: '',\n      reset: true\n    };\n    this.setState = this.setState.bind(this);\n  }\n\n  handleAddRow = id => {\n    this.props.dispatchAddRow(id);\n    this.props.dispatchKeepToggle();\n  };\n  handleRemoveRow = row => {\n    if (window.confirm('Confirm removing row?')) {\n      row && this.props.dispatchRemoveRow(row);\n    }\n    this.props.dispatchKeepToggle();\n  };\n  componentDidMount() {\n    document\n      .getElementById('estimationTable')\n      .addEventListener('keypress', e => {\n        var key = e.which || e.keyCode;\n        if (key === 13) {\n          const id = e.target.getAttribute('id').split('-')[1];\n          this.handleAddRow(id);\n        }\n      });\n  }\n  onDragEnd = (fromIndex, toIndex) => {\n    const data = clone(this.props.estimation);\n    const item1 = clone(data[fromIndex]);\n    const item2 = clone(data[toIndex]);\n    data[fromIndex] = item2;\n    data[toIndex] = item1;\n    this.props.dispatchArrangeRow(data);\n    this.props.dispatchKeepToggle();\n  };\n\n  dragProps = {\n    onDragEnd: this.onDragEnd,\n    nodeSelector: 'li',\n    handleSelector: 'a'\n  };\n  handleInputChange = e => {\n    const { id, name, value } = e.target;\n    const prefix = id.split('-')[0];\n    const cellId = id.replace(`${prefix}-`, '');\n    this.props.dispatchEditCell(cellId, name, value);\n    this.props.dispatchKeepToggle();\n  };\n  handleToggleTick = (id, activated) => {\n    if (activated) {\n      if (\n        window.confirm(\n          'Are you sure you want to unlink this data row from sitemap?'\n        )\n      ) {\n        this.props.dispatchToggleTick(id);\n      }\n    } else {\n      this.props.dispatchToggleTick(id);\n    }\n    this.props.dispatchKeepToggle();\n  };\n\n  render() {\n    return (\n      <div id=\"estimationTable\" className=\"w-full\">\n        <ReactDragListView {...this.dragProps}>\n          <div className=\"w-full flex items-center h-16\">\n            {table.head.map((h, key) => (\n              <div\n                className={classNames([\n                  `w-1/${table.head.length}`,\n                  'primary-grey font-semibold ml-4 text-white'\n                ])}\n                key={key}\n              >\n                {h.name}\n              </div>\n            ))}\n          </div>\n          <ol className=\"w-full\">\n            {this.props.estimation.map((item, index) => (\n              <li className=\"text-white flex estimation-row h-16\" key={index}>\n                <div className=\"flex items-center w-1/4 border grey-border\">\n                  <a\n                    className=\"-ml-3 mr-3 cursor-pointer absolute z-50\"\n                    onClick={() => this.handleRemoveRow(item)}\n                  >\n                    <div className=\"bg-red-700 rounded-full w-6 h-6 text-white text-xl flex justify-center items-center\">\n                      -\n                    </div>\n                  </a>\n                  <input\n                    autoComplete=\"off\"\n                    onChange={e => this.handleInputChange(e)}\n                    name=\"title\"\n                    id={`title-${item.id}`}\n                    className=\"ml-3 w-full max-h-full estimation-panel focus:outline-none\"\n                    type=\"text\"\n                    placeholder={item.title}\n                  ></input>\n                  <div\n                    id={`tick-${item.id}`}\n                    className=\"cursor-pointer \"\n                    onClick={() =>\n                      this.handleToggleTick(item.id, item.activated)\n                    }\n                  >\n                    <Tick\n                      activated={item.activated}\n                      index={index}\n                      color={item.color}\n                    />\n                  </div>\n                </div>\n                <div className=\"w-1/4 border grey-border\">\n                  <input\n                    autoComplete=\"off\"\n                    id={`rate-${item.id}`}\n                    onChange={e => this.handleInputChange(e)}\n                    name=\"rate\"\n                    className=\"ml-3 w-full h-full bg-transparent focus:outline-none focus:bg\"\n                    type=\"number\"\n                    placeholder={`$${item.rate}`}\n                  />\n                </div>\n                <div className=\"w-1/4 border grey-border\">\n                  <input\n                    autoComplete=\"off\"\n                    id={`hours-${item.id}`}\n                    onChange={e => this.handleInputChange(e)}\n                    name=\"hours\"\n                    className=\"ml-3 w-full h-full bg-transparent focus:outline-none focus:bg\"\n                    type=\"number\"\n                    placeholder={item.hours}\n                  />\n                </div>\n                <div className=\"w-1/4 border grey-border flex justify-between items-center\">\n                  <div\n                    id={`amount-${item.id}`}\n                    name=\"amount\"\n                    className=\"ml-3 w-full h-full bg-transparent focus:outline-none focus:bg flex items-center\"\n                  >\n                    {/* set default 0 to prevent no input */}${' '}\n                    {parseFloat(item.hours) * parseFloat(item.rate) || 0}\n                  </div>\n                  <a className=\"active:cursor-grabbing\">\n                    <FaEllipsisV />\n                  </a>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </ReactDragListView>\n        <div\n          onClick={() => {\n            this.handleAddRow();\n          }}\n          className=\"primary-grey h-16 flex justify-start items-center border-b grey-border cursor-pointer ml-3\"\n        >\n          Add row\n        </div>\n        <div className=\"h-16 flex justify-start items-center ml-3 text-white font-semibold text-xl\">\n          <div className=\"w-1/4\"></div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r border-b-2 border-white\">\n            Subtotal\n          </div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r pl-3 border-b-2 border-white\">\n            {calculateSumMembers(this.props.estimation, 'hours')}\n          </div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r pl-3 border-b-2 border-white\">\n            {calculateSumMembers(this.props.estimation, 'amount')}\n          </div>\n        </div>\n        <div className=\"h-16 flex justify-start items-center border-b grey-border ml-3 text-white font-semibold text-xl\">\n          <div className=\"w-1/4\"></div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r\">\n            Total\n          </div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r\"></div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r pl-3\">\n            {' '}\n            {calculateSumMembers(this.props.estimation, 'amount')}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  dispatchArrangeRow: data => {\n    dispatch(arrangeRow(data));\n  },\n  dispatchAddRow: id => {\n    dispatch(addRow(id));\n  },\n  dispatchRemoveRow: row => {\n    dispatch(removeRow(row));\n  },\n  dispatchEditCell: (cellId, name, value) => {\n    dispatch(editCell(cellId, name, value));\n  },\n  dispatchToggleTick: cellId => {\n    dispatch(toggleTick(cellId));\n  },\n  dispatchKeepToggle: () => {\n    dispatch(keepToggle());\n  },\n  dispatchCloseToggle: () => {\n    dispatch(closeToggle());\n  }\n});\nconst mapStateToProps = state => {\n  const { estimation } = state;\n  return { estimation };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import * as actionTypes from '../constant/index';\n\nexport const arrangeRow = data => {\n  return {\n    type: actionTypes.ARRANGE_ROW,\n    data: data\n  };\n};\n\nexport const addRow = id => {\n  return {\n    type: actionTypes.ADD_ROW,\n    id: id\n  };\n};\nexport const removeRow = row => {\n  return {\n    type: actionTypes.REMOVE_ROW,\n    data: row\n  };\n};\nexport const editCell = (cellId, name, value) => {\n  return {\n    type: actionTypes.EDIT_CELL,\n    data: { cellId: cellId, name: name, value: value }\n  };\n};\nexport const toggleTick = cellId => {\n  return {\n    type: actionTypes.TOGGLE_TICK,\n    data: cellId\n  };\n};\n","import React from 'react';\nimport Table from './Table';\n\nexport const Estimation = props => {\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      <Table />\n    </div>\n  );\n};\n","import React from 'react';\nimport TreeNode from './components/TreeNode';\nimport Header from './components/Header';\nimport { Estimation } from './components/Estimation/index';\nimport { connect } from 'react-redux';\nlet classNames = require('classnames');\n\nconst App = props => {\n  const { toggleEstimation } = props;\n  return (\n    <div\n      className={classNames('wrapper flex', !toggleEstimation && 'flex-col')}\n    >\n      <div\n        className={classNames([\n          toggleEstimation\n            ? 'w-3/4 px-8 mt-24 overflow-hidden '\n            : 'w-full px-8 mt-24'\n        ])}\n      >\n        <Header />\n        <TreeNode toggleEstimation={toggleEstimation} store={props.store} />\n      </div>\n      {toggleEstimation && (\n        <div className=\"estimation-panel w-1/2 min-h-screen overflow-scroll\">\n          <Estimation />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { toggleEstimation } = state;\n  return { toggleEstimation };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export class Tree {\n  constructor(root) {\n    this._root = root || null;\n  }\n\n  _buildTree(initialTree) {\n    this._root = initTree;\n  }\n\n  _traverse(callback) {\n    function goThrough(node) {\n      callback(node);\n      node.children.forEach(child => {\n        goThrough(child);\n      });\n    }\n    goThrough(this._root);\n  }\n\n  _addNode(value, parentValue) {\n    const newNode = {\n      value: value,\n      children: []\n    };\n\n    if (this._root === null) {\n      this._root = newNode;\n      return;\n    }\n\n    this._traverse(node => {\n      if (node.value.id === parentValue) {\n        return node.children.push(value);\n      }\n    });\n  }\n\n  _addSibling(value, parentValue, siblingValue, position) {\n    if (position === 'right') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition + 1, 0, value);\n        }\n      });\n    }\n    if (position === 'left') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition, 0, value);\n        }\n      });\n    }\n  }\n\n  _removeNode(value) {\n    this._traverse(node => {\n      node.children.forEach((childNode, index) => {\n        if (childNode.value.id === value) {\n          node.children.splice(index, 1);\n        }\n      });\n    });\n  }\n\n  _search(value) {\n    let returnNode = 'Not Found';\n    this._traverse(node => {\n      if (node && node.value.id === value) {\n        returnNode = node;\n      }\n    });\n    return returnNode;\n  }\n\n  _displayLeafs(parentValue) {\n    const parentNode =\n      typeof parentValue === 'string' ? this._search(parentValue) : parentValue;\n    let leafsRet = [];\n    if (parentValue?.children && !parentValue.children.length) {\n      return parentValue;\n    }\n\n    parentNode &&\n      parentNode.children.forEach(child => {\n        leafsRet.push(this._displayLeafs(child));\n      });\n\n    return leafsRet.flat();\n  }\n\n  _childPosition(parentValue, siblingValue) {\n    let position;\n    this._search(parentValue).children.map((n, key) => {\n      if (n.value.id === siblingValue) {\n        position = key;\n      }\n    });\n    return position;\n  }\n}\n\nexport const initTree = () => {\n  const tree = new Tree();\n  return tree;\n};\n","export const isFirstChild = 'isFirstChild';\nexport const isLastChild = 'isLastChild';\nexport const isChild = 'isChild';\n","import * as actionTypes from '../constant';\nimport { initTree } from '../constant/tree';\nimport { getPosition } from '../utils/getPosition';\nimport * as positionTypes from '../constant/position';\n\nlet ChartTree;\n\nlet tree = initTree();\n// console.log(!localStorage.check());\n// if (!localStorage.check() === true) {\n//   ChartTree = {\n//     group: 'main',\n//     id: 'te83nwko7b',\n//     name: 'Root',\n//     root: true,\n//     hasChildren: false,\n//     children: []\n//   };\n//   localStorage.set(ChartTree);\n//   tree._addNode(ChartTree);\n// } else {\n//   ChartTree = localStorage.get();\n//   tree._addNode(ChartTree._root);\n// }\ntree._addNode({\n  group: 'main',\n  id: 'te83nwko7b',\n  name: 'Root',\n  root: true,\n  hasChildren: false,\n  children: [],\n  estimation: {}\n});\nconst initialState = {\n  tree\n};\nexport const treeReducer = (state = initialState, action) => {\n  const { cell } = action;\n  let parentId = cell?.value?.parentId;\n  const siblingId = cell?.value?.siblingId || action.siblingId;\n  let { tree } = state;\n  let parentNode = tree?._search(parentId);\n  const position = parentNode?.children?.length;\n  const length = parentNode?.children?.length;\n  let childPos, cellPos;\n  switch (action.type) {\n    case actionTypes.ADD_CHILD:\n      cell.value.position = getPosition(length, position);\n      //toggle previous sibling node into isChild\n      if (parentNode.children.length > 1) {\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      //toggle previous sibling to be first node if there are 2 siblings\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n      }\n      //toggle parent hasChildren field to true\n      parentNode.value.hasChildren = true;\n      tree._addNode(cell, parentId);\n      return { ...state, tree };\n\n    case actionTypes.APPEND_CHILD:\n      cellPos = cell.value.position;\n      tree._removeNode(cell.value.id);\n      cell.value.parentId = action.parentId;\n      cell.value.position = '';\n      tree._addNode(cell, action.parentId);\n      tree._search(action.parentId).value.hasChildren = true;\n      //handle position of target's parent node\n      const grandparent = tree._search(\n        tree._search(action.parentId).value.parentId\n      );\n      const grandLength = grandparent.children.length;\n      if (grandLength === 1) {\n        grandparent.children[0].value.position = '';\n      }\n      //handle position of the dragged cell\n      if (length - 1 === 1) {\n        parentNode.children[0].position = '';\n      }\n      childPos = tree._childPosition(parentId, cell.value.id);\n      if (length - 1 > 1 && cellPos === positionTypes.isFirstChild) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n      }\n      if (length - 1 > 1 && cellPos === positionTypes.isLastChild) {\n        if (parentNode) {\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n        }\n      }\n      //end of position handling\n      console.log(tree);\n      return { ...state, tree };\n\n    case actionTypes.ADD_SIBLING:\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n        cell.value.position = positionTypes.isLastChild;\n      }\n      if (length > 1 && childPos === length - 1) {\n        cell.value.position = positionTypes.isLastChild;\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      if (length > 1 && childPos !== length - 1) {\n        cell.value.position = positionTypes.isChild;\n      }\n      tree._addSibling(cell, parentId, siblingId, 'right');\n      return { ...state, tree };\n\n    case actionTypes.APPEND_RIGHT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree?._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos + 1 && cellPos !== childPos) {\n        if (cellPos === 0 && childPos !== length - 1) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length === 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length > 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos !== 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isChild;\n        }\n        if (cellPos === length - 1) {\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (\n          length > 2 &&\n          cellPos !== 0 &&\n          cellPos !== length - 1 &&\n          childPos === length - 1\n        ) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'right');\n      }\n      return { ...state, tree };\n\n    case actionTypes.APPEND_LEFT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos - 1 && childPos !== cellPos) {\n        if (childPos === 0 && cellPos !== length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n        }\n\n        if (childPos === 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n        }\n        if (childPos !== 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[childPos].value.position =\n            positionTypes.isLastChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'left');\n      }\n      return { ...state, tree };\n\n    case actionTypes.REMOVE_CELL:\n      tree._removeNode(cell.id);\n      const parentLength = tree?._search(cell.parentId)?.children.length;\n      //is cell is first\n      if (tree._search(cell.parentId).children.length > 1) {\n        tree._search(cell.parentId).children[0].value.position =\n          positionTypes.isFirstChild;\n        tree._search(cell.parentId).children[parentLength - 1].value.position =\n          positionTypes.isLastChild;\n      }\n      //if cell if first child in 2-child-array\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      //if cell is last cell\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      return { ...state, tree };\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from '../constant';\nimport { getColor } from '../utils/getColor';\nimport * as localStorage from '../utils/localStorage';\nimport * as constant from '../constant';\nconst uuidv4 = require('uuid/v4');\n\nlet defaultValue = [\n  {\n    id: 'root',\n    title: '1',\n    order: 0,\n    rate: 0,\n    hours: 0,\n    amount: 0,\n    activated: true,\n    color: getColor(0)\n  }\n];\nlet initialState;\nif (localStorage.check(constant.ESTIMATION)) {\n  initialState = localStorage.get(constant.ESTIMATION);\n} else {\n  initialState = defaultValue;\n}\n\nexport const estimationReducer = (state = initialState, action) => {\n  const { data } = action;\n  let estimation;\n  switch (action.type) {\n    case actionTypes.ARRANGE_ROW:\n      estimation = data;\n      return [...estimation];\n    case actionTypes.ADD_ROW:\n      const id = uuidv4();\n      var position = state.length;\n      const newRow = {\n        id: id,\n        title: '',\n        rate: 0,\n        hours: 0,\n        color: getColor(position),\n        activated: true\n      };\n      let count = 0;\n      state.map(e => {\n        if (e.id === data) {\n          state.push(newRow);\n          count = 1;\n        }\n      });\n      if (count === 0) {\n        state.push(newRow);\n      }\n      return [...state];\n    case actionTypes.REMOVE_ROW:\n      state = state.filter(it => it.id !== data.id);\n      return [...state];\n    case actionTypes.EDIT_CELL:\n      let { cellId, value, name } = data;\n      state.map(e => {\n        if (e.id === cellId) {\n          e[`${name}`] = value;\n        }\n      });\n      return [...state];\n    case actionTypes.TOGGLE_TICK:\n      state.map(e => {\n        if (e.id === data) {\n          e.activated = !e.activated;\n        }\n      });\n      return [...state];\n    default:\n      return state;\n  }\n};\n","export const getColor = key => {\n  switch (key) {\n    case 0:\n      return 'rgb(234, 94, 94)';\n    case 1:\n      return 'rgb(130, 197, 72)';\n    case 2:\n      return 'rgb(234, 196, 94)';\n    case 3:\n      return 'rgb(94, 210, 234)';\n    case 4:\n      return 'rgb(230, 94, 234)';\n    case 5:\n      return 'rgb(94, 234, 200)';\n    case 6:\n      return 'rgb(94, 129, 234)';\n    case 7:\n      return 'rgb(244, 160, 7)';\n    default:\n      return 'rgb(234, 94, 94)';\n  }\n};\n","import { combineReducers } from 'redux';\nimport { treeReducer as tree } from './treeReducer';\nimport { toggleEstimationReducer as toggleEstimation } from './toggleEstimationReducer';\nimport { estimationReducer as estimation } from './estimationReducer';\n\nexport default combineReducers({\n  tree,\n  toggleEstimation,\n  estimation\n});\n","import * as actionTypes from '../constant/index';\nimport { toggleEstimation } from '../actions/toggleEstimation';\nimport { toggle } from '../constant/estimationTable';\n\nconst initialState = false;\n\nexport const toggleEstimationReducer = (state = initialState, action) => {\n  const { isOpen } = action;\n  switch (action.type) {\n    case actionTypes.TOGGLE_ESTIMATION:\n      return isOpen;\n    case actionTypes.KEEP_TOGGLE:\n      return toggle.true;\n    case actionTypes.CLOSE_TOGGLE:\n      return toggle.false;\n    default:\n      return initialState;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  blacklist: ['tree'],\n  stateReconciler: autoMergeLevel2\n};\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  pReducer,\n  composeEnhancer(applyMiddleware(logger))\n);\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { store, persistor } from './configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//method to manage local storage for tree data\nconst set = tree => {\n  window.localStorage.setItem('tree', JSON.stringify(tree));\n};\nconst clear = () => {\n  window.localStorage.removeItem('tree');\n};\n\nconst update = tree => {\n  window.localStorage.setItem('tree', JSON.stringify(tree));\n};\nconst get = key => {\n  return JSON.parse(\n    JSON.parse(window.localStorage.getItem('persist:root'))[key]\n  );\n};\nconst check = key => {\n  if (window.localStorage.getItem('persist:root')) {\n    return !JSON.parse(window.localStorage.getItem('persist:root'))[key];\n  } else {\n    return false;\n  }\n};\nmodule.exports = {\n  set,\n  update,\n  clear,\n  get,\n  check\n};\n"],"sourceRoot":""}