{"version":3,"sources":["components/Button.js","utils/getPosition.js","components/Cell/index.js","components/TreeNode.js","actions/cell.js","constant/index.js","components/Header.js","actions/toggleEstimation.js","constant/estimationTable.js","components/Estimation/Table.js","actions/estimation.js","components/Estimation/index.js","App.js","serviceWorker.js","constant/tree.js","constant/position.js","reducers/treeReducer.js","reducers/estimationReducer.js","reducers/index.js","reducers/toggleEstimationReducer.js","localStorage.js","store.js","index.js"],"names":["Button","_ref","name","className","style","react_default","a","createElement","index_esm","color","getConnectLine","position","classNames","require","Cell","props","forceUpdate","_useState","useState","_useState2","Object","slicedToArray","set","value","useForceUpdate","_props$cell$value","cell","id","root","handleAddChild","handleAddSibling","handleRemoveCell","handleAppendChild","handleAppendSibling","activeCell","setActiveCell","_useState3","_useState4","setIsDragging","_useState5","_useState6","onHover","setOnHover","inputRef","React","createRef","allowDrop","event","currentArea","target","getAttribute","includes","concat","preventDefault","drop","data","targetCell","document","getElementById","dropCell","cellId","dataTransfer","getData","JSON","parse","hasChildNodes","replace","cellsCollection","getElementsByClassName","toConsumableArray","map","v","classList","remove","onDrop","e","onDragOver","children","length","onDragStart","setData","stringify","draggable","ref","onClick","handleActive","onDragLeave","uuidv4","connect","state","calculateNodeWidth","_document","_document$getElementB","offsetWidth","tree","_root","dispatch","dispatchAddChild","type","addChild","dispatchAppendChild","parentId","appendChild","dispatchAddSibling","addSibling","dispatchRemoveCell","removeCell","dispatchAppendSibling","siblingId","appendSibling","TreeNode","_tree$value","_tree$children","toggleEstimation","newCell","group","hasChildren","Cell_Cell","treeNode","key","nodeWidth","dispatchToggleEstimation","isOpen","fa_index_esm","head","Table","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAddRow","dispatchAddRow","handleRemoveRow","row","window","confirm","dispatchRemoveRow","onDragEnd","fromIndex","toIndex","estimation","item","splice","dispatchArrangeRow","dragProps","nodeSelector","handleSelector","bind","assertThisInitialized","setState","_this2","addEventListener","which","keyCode","_this3","lib_default","table","h","index","placeholder","title","rate","hours","amount","Component","arrangeRow","addRow","removeRow","Estimation","Estimation_Table","components_Header","components_TreeNode","store","Estimation_Estimation","Boolean","location","hostname","match","Tree","createClass","initialTree","initTree","callback","goThrough","node","forEach","child","parentValue","newNode","_traverse","push","siblingValue","siblingPosition","n","childNode","returnNode","parentNode","_search","leafsRet","_displayLeafs","flat","isChild","_addNode","initialState","combineReducers","_cell$value","_cell$value2","_parentNode$children","_parentNode$children2","_tree$_search","childPos","cellPos","arguments","undefined","action","getPosition","positionTypes","objectSpread","_removeNode","grandparent","_childPosition","console","log","_addSibling","parentLength","newRow","filter","it","saveState","serializedState","localStorage","setItem","_unused","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","logger","subscribe","getState","configureStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36dba319.chunk.js","sourcesContent":["import React from 'react';\nimport { IoIosAddCircle, IoIosRemoveCircle } from 'react-icons/io';\n\nexport default function Button({ name, className, style }) {\n  switch (name) {\n    case 'add':\n      return (\n        <IoIosAddCircle\n          className=\"w-12 h-12 text-white z-100\"\n          style={{ color: '#2f7fef' }}\n        />\n      );\n    case 'minus':\n      return (\n        <IoIosRemoveCircle className=\"w-12 h-12\" style={{ color: 'red' }} />\n      );\n    default:\n      return null;\n  }\n}\n","//this function get position of a child node in it's parents' children array\nexport const getPosition = (length, position) => {\n  if (position === 0 && length > 0) {\n    return 'isFirstChild';\n  }\n  if (position === length && position !== 0) {\n    return 'isLastChild';\n  }\n  if (position !== 0 && position < length && length > 2) {\n    return 'isChild';\n  }\n};\nexport const getConnectLine = position => {\n  switch (position) {\n    case 'isFirstChild':\n      return 'right-connect-line';\n    case 'isChild':\n      return 'full-connect-line';\n    case 'isLastChild':\n      return 'left-connect-line';\n    default:\n      return '';\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { IoIosMore } from 'react-icons/io';\nimport Button from '../Button';\nimport { getConnectLine } from '../../utils/getPosition';\nimport { onClickInside } from '../../utils/detectElement';\nlet classNames = require('classnames');\n\n// create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\nexport const Cell = props => {\n  const forceUpdate = useForceUpdate();\n  const { name, id, root, position } = props.cell.value;\n  const {\n    handleAddChild,\n    handleAddSibling,\n    handleRemoveCell,\n    handleAppendChild,\n    handleAppendSibling\n  } = props;\n  const { activeCell, setActiveCell } = props;\n  const [isDragging, setIsDragging] = useState(false);\n  const [onHover, setOnHover] = useState(null);\n  const inputRef = React.createRef();\n  const dragStart = (event, cell) => {\n    setIsDragging(true);\n    event.dataTransfer.setData('cell', JSON.stringify(cell));\n  };\n  const allowDrop = event => {\n    const currentArea = event.target.getAttribute('id');\n    const name = event.target.getAttribute('name');\n    let id;\n    if (currentArea?.includes('sibling-dropzone')) {\n      setOnHover(currentArea);\n    }\n    if (name === 'child-dropzone') {\n      setOnHover(`child-dropzone-${id}`);\n    }\n    event.preventDefault();\n  };\n\n  const handleDragLeave = event => {\n    const currentArea = event.target.getAttribute('id');\n    if (currentArea.includes('sibling-dropzone')) {\n      setOnHover(null);\n    }\n    if (event.target.getAttribute('name') === 'child-dropzone') {\n      setOnHover(null);\n    }\n  };\n\n  const drop = (event, data) => {\n    event.preventDefault();\n    const targetCell = document.getElementById(id);\n    const dropCell = event.target;\n    let cellId = dropCell.getAttribute('id');\n    var data = event.dataTransfer.getData('cell');\n    data = JSON.parse(data);\n    if (\n      targetCell.hasChildNodes(dropCell) &&\n      dropCell.getAttribute('name') !== 'right-sibling-dropzone' &&\n      dropCell.getAttribute('name') !== 'left-sibling-dropzone'\n    ) {\n      cellId = cellId.replace(/edit-/g, '') || cellId;\n      handleAppendChild(data, cellId);\n      forceUpdate();\n    }\n    if (event.target.getAttribute('name') === 'right-sibling-dropzone') {\n      event.target.style.className = 'is-dragging';\n      cellId = cellId.replace(/right-sibling-dropzone-/g, '');\n      handleAppendSibling('right', data, cellId);\n      const cellsCollection = document.getElementsByClassName('cell');\n      let cellArr = [...cellsCollection];\n      cellArr.map(v => {\n        v.classList.remove('on-right-dragged-over', 'on-left-dragged-over');\n      });\n    }\n    if (event.target.getAttribute('name') === 'left-sibling-dropzone') {\n      cellId = cellId.replace(/left-sibling-dropzone-/g, '');\n      handleAppendSibling('left', data, cellId);\n    }\n    setIsDragging(false);\n    setOnHover(null);\n    forceUpdate();\n  };\n  const handleActive = e => {\n    const currentId = e.target.getAttribute('id');\n    if (currentId.includes(id)) {\n      if (!activeCell) {\n        setActiveCell(id);\n      }\n      if (activeCell) {\n        setActiveCell(null);\n      }\n      if (activeCell !== id) {\n        setActiveCell(id);\n      }\n    }\n  };\n\n  return (\n    <div className={classNames(getConnectLine(position))}>\n      <div className={classNames('relative')}>\n        <div\n          className={classNames(\n            'cell cell-width mt-12 h-32 flex justify-center relative',\n            onHover?.includes(id) &&\n              onHover?.includes('right') &&\n              'on-right-dragged-over',\n            onHover?.includes(id) &&\n              onHover?.includes('left') &&\n              'on-left-dragged-over'\n          )}\n        >\n          {!root && (\n            <div\n              className={classNames(\n                'w-24 h-32 left-dz bg-red absolute left-0 top-0 dropzone bg-gray-100'\n              )}\n              name=\"left-sibling-dropzone\"\n              id={`left-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n            ></div>\n          )}\n          <div\n            id={id}\n            name=\"child-dropzone\"\n            className={classNames(\n              'border main-border rounded-lg w-56 h-24',\n              !root && 'absolute above-line',\n              props.cell.children.length > 0 && 'absolute below-line'\n            )}\n            onDragStart={e => dragStart(e, props.cell)}\n            draggable={!root && 'true'}\n            onDrop={e => {\n              drop(e, props.cell);\n            }}\n            onDragOver={e => allowDrop(e)}\n          >\n            <div\n              className={classNames(\n                'flex items-center h-4 w-full main-border-bottom',\n                !root && 'draggable',\n                activeCell === id && 'main-bg'\n              )}\n            >\n              <IoIosMore\n                className={classNames(\n                  'text-4xl font-semibold pl-2',\n                  id === activeCell ? 'text-white' : 'main-text-color'\n                )}\n              />\n            </div>\n            <div\n              ref={inputRef}\n              className=\"relative px-2 py-2 text-xl font-semibold main-text-color\"\n              id={`edit-${id}`}\n              onClick={e => handleActive(e)}\n            >\n              {id}\n            </div>\n          </div>\n          {/* only render \"add sibling\" button for cell not root*/}\n          {!root && activeCell !== id && (\n            <div\n              className={[\n                'absolute opacity-0 hover:opacity-100 flex justify-center w-12 h-32 top-0 right-0'\n              ]}\n              onClick={() => {\n                handleAddSibling(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\"absolute\" />\n            </div>\n          )}\n          {!root && (\n            <div\n              className={classNames(\n                'w-24 h-32 right-dz bg-red absolute top-0 right-0 dropzone bg-gray-100'\n              )}\n              name=\"right-sibling-dropzone\"\n              id={`right-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n              onDragLeave={e => handleDragLeave(e)}\n            ></div>\n          )}\n          {activeCell !== id && (\n            <div\n              className={[\n                'absolute bottom-0 opacity-0 hover:opacity-100 flex justify-center w-56 h-8'\n              ]}\n              onClick={() => {\n                handleAddChild(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\"absolute z-100\" />\n            </div>\n          )}\n          {/* toggle remove button on hover cell but not the root cell */}\n          {activeCell === id && !root && (\n            <div\n              id={`remove${id}`}\n              className={classNames(\n                'absolute bottom-0 right-0 flex justify-center w-56 h-8',\n                activeCell === id ? 'opacity-1' : 'opacity-0'\n              )}\n              onClick={() => {\n                handleRemoveCell(props.cell.value);\n              }}\n            >\n              <Button id={`remove${id}`} name=\"minus\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {};\n\nexport default connect(mapStateToProps)(Cell);\n","import React, { useState } from 'react';\nimport { Cell } from './Cell';\nimport { connect } from 'react-redux';\nimport {\n  addChild,\n  appendChild,\n  addSibling,\n  removeCell,\n  appendSibling\n} from '../actions/cell';\nconst uuidv4 = require('uuid/v4');\nvar classNames = require('classnames');\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\n\nconst calculateNodeWidth = id => {\n  return id && document?.getElementById(id)?.offsetWidth;\n};\nconst TreeNode = props => {\n  const forceUpdate = useForceUpdate();\n  const { tree, toggleEstimation } = props;\n  const [activeCell, setActiveCell] = useState(null);\n\n  const {\n    dispatchAddChild,\n    dispatchAppendChild,\n    dispatchAddSibling,\n    dispatchRemoveCell,\n    dispatchAppendSibling\n  } = props;\n\n  const handleAddChild = cell => {\n    const id = uuidv4();\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddChild(newCell);\n    forceUpdate();\n  };\n\n  const handleAppendChild = (cell, parentId) => {\n    //prevent dropping at the same cell\n    cell.value.id !== parentId && dispatchAppendChild(cell, parentId);\n    forceUpdate();\n  };\n  const handleAddSibling = cell => {\n    const id = uuidv4();\n\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.parentId,\n        siblingId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddSibling(newCell);\n    forceUpdate();\n  };\n\n  const handleAppendSibling = (position, data, siblingId) => {\n    let newCell = data;\n    dispatchAppendSibling(position, newCell, siblingId);\n    forceUpdate();\n  };\n\n  const handleRemoveCell = cell => {\n    dispatchRemoveCell(cell);\n    forceUpdate();\n  };\n  return (\n    <div className={[toggleEstimation && 'pointer-events-none']}>\n      {/* render root cell */}\n      <div className=\"flex justify-center\">\n        {tree?.value?.root && (\n          <Cell\n            activeCell={activeCell}\n            setActiveCell={setActiveCell}\n            cell={tree}\n            handleAddChild={handleAddChild}\n            handleAddSibling={handleAddSibling}\n            handleAppendSibling={handleAppendSibling}\n          />\n        )}\n      </div>\n      <div className=\"flex justify-center\">\n        {tree?.children?.length > 0 &&\n          tree.children.map((treeNode, key) => (\n            <div\n              id={treeNode.value.id}\n              key={key}\n              className={classNames('flex flex-col items-center relative')}\n            >\n              <Cell\n                activeCell={activeCell}\n                setActiveCell={setActiveCell}\n                key={key}\n                cell={treeNode}\n                handleAddChild={handleAddChild}\n                handleAppendChild={handleAppendChild}\n                handleAddSibling={handleAddSibling}\n                handleAppendSibling={handleAppendSibling}\n                handleRemoveCell={handleRemoveCell}\n              />\n              {treeNode.children.length > 0 && (\n                <TreeNode\n                  nodeWidth={calculateNodeWidth(treeNode.value.id)}\n                  id={treeNode.value.id}\n                  tree={treeNode}\n                  dispatchAddChild={dispatchAddChild}\n                  dispatchAppendChild={dispatchAppendChild}\n                  dispatchAddSibling={dispatchAddSibling}\n                  dispatchRemoveCell={dispatchRemoveCell}\n                  dispatchAppendSibling={dispatchAppendSibling}\n                />\n              )}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  dispatchAddChild: cell => {\n    dispatch(addChild(cell));\n  },\n  dispatchAppendChild: (cell, parentId) => {\n    dispatch(appendChild(cell, parentId));\n  },\n  dispatchAddSibling: cell => {\n    dispatch(addSibling(cell));\n  },\n  dispatchRemoveCell: cell => {\n    dispatch(removeCell(cell));\n  },\n  dispatchAppendSibling: (position, cell, id) => {\n    dispatch(appendSibling(position, cell, id));\n  }\n});\n\nconst mapStateToProps = state => {\n  const tree = state.tree.tree._root;\n  return { tree };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TreeNode);\n","import * as actionTypes from '../constant/index';\nexport const addChild = cell => ({\n  type: actionTypes.ADD_CHILD,\n  cell: cell\n});\n\nexport const appendChild = (cell, parentId) => ({\n  type: actionTypes.APPEND_CHILD,\n  parentId: parentId,\n  cell: cell\n});\n\nexport const addSibling = cell => ({\n  type: actionTypes.ADD_SIBLING,\n  cell: cell\n});\n\nexport const removeCell = cell => ({\n  type: actionTypes.REMOVE_CELL,\n  cell: cell\n});\n\nexport const appendSibling = (position, cell, siblingId) => {\n  switch (position) {\n    case 'right':\n      return {\n        type: actionTypes.APPEND_RIGHT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    case 'left':\n      return {\n        type: actionTypes.APPEND_LEFT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    default:\n      return null;\n  }\n};\n","export const main = 'MAIN';\nexport const ADD_CHILD = 'ADD_CHILD';\nexport const APPEND_CHILD = 'APPEND_CHILD';\nexport const ADD_SIBLING = 'ADD_SIBLING';\nexport const REMOVE_CELL = 'REMOVE_CELL';\nexport const APPEND_RIGHT_SIBLING = 'APPEND_RIGHT_SIBLING';\nexport const APPEND_LEFT_SIBLING = 'APPEND_LEFT_SIBLING';\nexport const TOGGLE_ESTIMATION = 'TOGGLE_ESTIMATION';\nexport const ARRANGE_ROW = 'ARRANGE_ROW';\nexport const ADD_ROW = 'ADD_ROW';\nexport const REMOVE_ROW = 'REMOVE_ROW';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FaDollarSign } from 'react-icons/fa';\nimport { toggleEstimation } from '../actions/toggleEstimation';\n\nconst Header = props => {\n  const { toggleEstimation } = props;\n  const { dispatchToggleEstimation } = props;\n  function handleClick() {\n    if (!toggleEstimation) {\n      dispatchToggleEstimation(true);\n    } else {\n      dispatchToggleEstimation(false);\n    }\n  }\n  return (\n    <div className=\"flex justify-end\">\n      <button\n        onClick={() => handleClick()}\n        className=\"w-12 h-12 bg-button flex justify-center items-center\"\n      >\n        <FaDollarSign />\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchToggleEstimation: isOpen => {\n    dispatch(toggleEstimation(isOpen));\n  }\n});\nconst mapStateToProps = state => {\n  const toggleEstimation = state.toggleEstimation;\n  return { toggleEstimation };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import * as actionTypes from '../constant/index';\n\nexport const toggleEstimation = isOpen => {\n  return {\n    type: actionTypes.TOGGLE_ESTIMATION,\n    isOpen: isOpen\n  };\n};\n","export const head = ['ITEM', 'RATE', 'HOURS', 'AMOUNT'];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport ReactDragListView from 'react-drag-listview/lib/index.js';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport * as table from '../../constant/estimationTable';\nimport { arrangeRow, addRow, removeRow } from '../../actions/estimation';\nlet classNames = require('classnames');\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAddRow = this.handleAddRow.bind(this);\n    this.state = {\n      parentId: ''\n    };\n    this.setState = this.setState.bind(this);\n  }\n  handleAddRow = id => {\n    this.props.dispatchAddRow(id);\n  };\n  handleRemoveRow = row => {\n    if (window.confirm('Confirm removing row?')) {\n      row && this.props.dispatchRemoveRow(row);\n      this.forceUpdate();\n    }\n  };\n  componentDidMount() {\n    document\n      .getElementById('estimationTable')\n      .addEventListener('keypress', e => {\n        var key = e.which || e.keyCode;\n        if (key === 13) {\n          const id = e.target.getAttribute('id').replace(/input-/g, '');\n          this.handleAddRow(id);\n        }\n      });\n  }\n  onDragEnd = (fromIndex, toIndex) => {\n    const data = this.props.estimation;\n    const item = data.splice(fromIndex, 1)[0];\n    data.splice(toIndex, 0, item);\n    this.props.dispatchArrangeRow(data);\n  };\n\n  dragProps = {\n    onDragEnd: this.onDragEnd,\n    nodeSelector: 'li',\n    handleSelector: 'a'\n  };\n\n  render() {\n    return (\n      <div id=\"estimationTable\" className=\"w-full\">\n        <ReactDragListView {...this.dragProps}>\n          <div className=\"w-full flex\">\n            {table.head.map((h, key) => (\n              <div\n                className={classNames([\n                  `w-1/${table.head.length}`,\n                  'primary-grey mb-6 font-semibold'\n                ])}\n                key={key}\n              >\n                {h}\n              </div>\n            ))}\n          </div>\n          <ol className=\"w-full\">\n            {this.props.estimation.map((item, index) => (\n              <li className=\"text-white flex estimation-row h-16\" key={index}>\n                <div className=\"flex items-center w-1/4 border grey-border\">\n                  <a\n                    className=\"-ml-3 mr-3 cursor-pointer\"\n                    onClick={() => this.handleRemoveRow(item)}\n                  >\n                    <div className=\"bg-red-700 rounded-full w-6 h-6 text-white text-xl flex justify-center items-center\">\n                      -\n                    </div>\n                  </a>\n                  <input\n                    id={`input-${item.id}`}\n                    className=\"w-full h-full bg-transparent focus:outline-none\"\n                    type=\"text\"\n                    placeholder={item.title}\n                  />\n                </div>\n                <div className=\"w-1/4 border grey-border\">\n                  <input\n                    className=\"w-full h-full bg-transparent focus:outline-none focus:bg\"\n                    type=\"text\"\n                    placeholder={`$${item.rate}`}\n                  />\n                </div>\n                <div className=\"w-1/4 border grey-border\">\n                  <input\n                    className=\"w-full h-full bg-transparent focus:outline-none focus:bg\"\n                    type=\"text\"\n                    placeholder={item.hours}\n                  />\n                </div>\n                <div className=\"w-1/4 border grey-border flex justify-between items-center\">\n                  <input\n                    className=\"w-full h-full bg-transparent focus:outline-none focus:bg\"\n                    type=\"text\"\n                    placeholder={item.amount}\n                  />\n                  <a>\n                    <FaEllipsisV />\n                  </a>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </ReactDragListView>\n        <div\n          onClick={() => {\n            this.handleAddRow();\n          }}\n          className=\"primary-grey h-16 flex justify-start items-center border-b grey-border cursor-pointer\"\n        >\n          Add row\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  dispatchArrangeRow: data => {\n    dispatch(arrangeRow(data));\n  },\n  dispatchAddRow: id => {\n    dispatch(addRow(id));\n  },\n  dispatchRemoveRow: row => {\n    dispatch(removeRow(row));\n  }\n});\nconst mapStateToProps = state => {\n  const { estimation } = state;\n  return { estimation };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import * as actionTypes from '../constant/index';\n\nexport const arrangeRow = data => {\n  return {\n    type: actionTypes.ARRANGE_ROW,\n    data: data\n  };\n};\n\nexport const addRow = id => {\n  return {\n    type: actionTypes.ADD_ROW,\n    id: id\n  };\n};\nexport const removeRow = row => {\n  return {\n    type: actionTypes.REMOVE_ROW,\n    data: row\n  };\n};\n","import React from 'react';\nimport Table from './Table';\n\nexport const Estimation = () => {\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      <Table />\n    </div>\n  );\n};\n","import React from 'react';\nimport TreeNode from './components/TreeNode';\nimport Header from './components/Header';\nimport { Estimation } from './components/Estimation/index';\nimport { connect } from 'react-redux';\nlet classNames = require('classnames');\n\nconst App = props => {\n  const { toggleEstimation } = props;\n  return (\n    <div\n      className={classNames('wrapper flex', !toggleEstimation && 'flex-col')}\n    >\n      <div\n        className={classNames([\n          toggleEstimation\n            ? 'w-1/2 px-8 mt-24 overflow-hidden '\n            : 'w-full px-8 mt-24'\n        ])}\n      >\n        <Header />\n        <TreeNode toggleEstimation={toggleEstimation} store={props.store} />\n      </div>\n      {toggleEstimation && (\n        <div className=\"estimation-panel w-1/2 h-screen\">\n          <Estimation />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { toggleEstimation } = state;\n  return { toggleEstimation };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export class Tree {\n  constructor(root) {\n    this._root = root || null;\n  }\n\n  _buildTree(initialTree) {\n    this._root = initTree;\n  }\n\n  _traverse(callback) {\n    function goThrough(node) {\n      callback(node);\n      node.children.forEach(child => {\n        goThrough(child);\n      });\n    }\n    goThrough(this._root);\n  }\n\n  _addNode(value, parentValue) {\n    const newNode = {\n      value: value,\n      children: []\n    };\n\n    if (this._root === null) {\n      this._root = newNode;\n      return;\n    }\n\n    this._traverse(node => {\n      if (node.value.id === parentValue) {\n        return node.children.push(value);\n      }\n    });\n  }\n\n  _addSibling(value, parentValue, siblingValue, position) {\n    if (position === 'right') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition + 1, 0, value);\n        }\n      });\n    }\n    if (position === 'left') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition, 0, value);\n        }\n      });\n    }\n  }\n\n  _removeNode(value) {\n    this._traverse(node => {\n      node.children.forEach((childNode, index) => {\n        if (childNode.value.id === value) {\n          node.children.splice(index, 1);\n        }\n      });\n    });\n  }\n\n  _search(value) {\n    let returnNode = 'Not Found';\n    this._traverse(node => {\n      if (node && node.value.id === value) {\n        returnNode = node;\n      }\n    });\n    return returnNode;\n  }\n\n  _displayLeafs(parentValue) {\n    const parentNode =\n      typeof parentValue === 'string' ? this._search(parentValue) : parentValue;\n    let leafsRet = [];\n    if (parentValue?.children && !parentValue.children.length) {\n      return parentValue;\n    }\n\n    parentNode &&\n      parentNode.children.forEach(child => {\n        leafsRet.push(this._displayLeafs(child));\n      });\n\n    return leafsRet.flat();\n  }\n\n  _childPosition(parentValue, siblingValue) {\n    let position;\n    this._search(parentValue).children.map((n, key) => {\n      if (n.value.id === siblingValue) {\n        position = key;\n      }\n    });\n    return position;\n  }\n}\n\nexport const initTree = () => {\n  const tree = new Tree();\n  return tree;\n};\n","export const isFirstChild = 'isFirstChild';\nexport const isLastChild = 'isLastChild';\nexport const isChild = 'isChild';\n","import * as actionTypes from '../constant';\nimport { initTree } from '../constant/tree';\nimport { getPosition } from '../utils/getPosition';\nimport * as positionTypes from '../constant/position';\n\nlet ChartTree;\n\nlet tree = initTree();\n// console.log(!localStorage.check());\n// if (!localStorage.check() === true) {\n//   ChartTree = {\n//     group: 'main',\n//     id: 'te83nwko7b',\n//     name: 'Root',\n//     root: true,\n//     hasChildren: false,\n//     children: []\n//   };\n//   localStorage.set(ChartTree);\n//   tree._addNode(ChartTree);\n// } else {\n//   ChartTree = localStorage.get();\n//   tree._addNode(ChartTree._root);\n// }\ntree._addNode({\n  group: 'main',\n  id: 'te83nwko7b',\n  name: 'Root',\n  root: true,\n  hasChildren: false,\n  children: []\n});\nconst initialState = {\n  tree\n};\nexport const treeReducer = (state = initialState, action) => {\n  const { cell } = action;\n  let parentId = cell?.value?.parentId;\n  const siblingId = cell?.value?.siblingId || action.siblingId;\n  let { tree } = state;\n  let parentNode = tree?._search(parentId);\n  const position = parentNode?.children?.length;\n  const length = parentNode?.children?.length;\n  let childPos, cellPos;\n  switch (action.type) {\n    case actionTypes.ADD_CHILD:\n      cell.value.position = getPosition(length, position);\n      //toggle previous sibling node into isChild\n      if (parentNode.children.length > 1) {\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      //toggle previous sibling to be first node if there are 2 siblings\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n      }\n      //toggle parent hasChildren field to true\n      parentNode.value.hasChildren = true;\n      tree._addNode(cell, parentId);\n      return { ...state, tree };\n\n    case actionTypes.APPEND_CHILD:\n      cellPos = cell.value.position;\n      tree._removeNode(cell.value.id);\n      cell.value.parentId = action.parentId;\n      cell.value.position = '';\n      tree._addNode(cell, action.parentId);\n      tree._search(action.parentId).value.hasChildren = true;\n      //handle position of target's parent node\n      const grandparent = tree._search(\n        tree._search(action.parentId).value.parentId\n      );\n      const grandLength = grandparent.children.length;\n      if (grandLength === 1) {\n        grandparent.children[0].value.position = '';\n      }\n      //handle position of the dragged cell\n      if (length - 1 === 1) {\n        parentNode.children[0].position = '';\n      }\n      childPos = tree._childPosition(parentId, cell.value.id);\n      if (length - 1 > 1 && cellPos === positionTypes.isFirstChild) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n      }\n      if (length - 1 > 1 && cellPos === positionTypes.isLastChild) {\n        if (parentNode) {\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n        }\n      }\n      //end of position handling\n      console.log(tree);\n      return { ...state, tree };\n\n    case actionTypes.ADD_SIBLING:\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n        cell.value.position = positionTypes.isLastChild;\n      }\n      if (length > 1 && childPos === length - 1) {\n        cell.value.position = positionTypes.isLastChild;\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      if (length > 1 && childPos !== length - 1) {\n        cell.value.position = positionTypes.isChild;\n      }\n      tree._addSibling(cell, parentId, siblingId, 'right');\n      return { ...state, tree };\n\n    case actionTypes.APPEND_RIGHT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree?._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos + 1 && cellPos !== childPos) {\n        if (cellPos === 0 && childPos !== length - 1) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length === 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length > 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos !== 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isChild;\n        }\n        if (cellPos === length - 1) {\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (\n          length > 2 &&\n          cellPos !== 0 &&\n          cellPos !== length - 1 &&\n          childPos === length - 1\n        ) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'right');\n      }\n      return { ...state, tree };\n\n    case actionTypes.APPEND_LEFT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos - 1 && childPos !== cellPos) {\n        if (childPos === 0 && cellPos !== length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n        }\n\n        if (childPos === 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n        }\n        if (childPos !== 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[childPos].value.position =\n            positionTypes.isLastChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'left');\n      }\n      return { ...state, tree };\n\n    case actionTypes.REMOVE_CELL:\n      tree._removeNode(cell.id);\n      const parentLength = tree?._search(cell.parentId)?.children.length;\n      //is cell is first\n      if (tree._search(cell.parentId).children.length > 1) {\n        tree._search(cell.parentId).children[0].value.position =\n          positionTypes.isFirstChild;\n        tree._search(cell.parentId).children[parentLength - 1].value.position =\n          positionTypes.isLastChild;\n      }\n      //if cell if first child in 2-child-array\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      //if cell is last cell\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      return { ...state, tree };\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from '../constant';\nconst uuidv4 = require('uuid/v4');\n\nlet estimation = [\n  { id: 'asjahsada', title: '1', rate: 0, hours: 0, amount: 0 },\n  { id: 'wervsvsd', title: '2', rate: 0, hours: 0, amount: 0 }\n];\nconst initialState = estimation;\n\nexport const estimationReducer = (state = initialState, action) => {\n  const { data } = action;\n  switch (action.type) {\n    case actionTypes.ARRANGE_ROW:\n      estimation = data;\n      return [...estimation];\n    case actionTypes.ADD_ROW:\n      const id = uuidv4();\n      const newRow = { id: id, title: '', rate: 0, hours: 0 };\n      estimation.map(e => {\n        if (e.id === data) {\n          estimation.push(newRow);\n          return;\n        }\n      });\n      return [...estimation];\n    case actionTypes.REMOVE_ROW:\n      estimation = estimation.filter(it => it.id !== data.id);\n      return [...estimation];\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { treeReducer as tree } from './treeReducer';\nimport { toggleEstimationReducer as toggleEstimation } from './toggleEstimationReducer';\nimport { estimationReducer as estimation } from './estimationReducer';\n\nexport default combineReducers({\n  tree,\n  toggleEstimation,\n  estimation\n});\n","import * as actionTypes from '../constant/index';\nimport { toggleEstimation } from '../actions/toggleEstimation';\n\nconst initialState = true;\n\nexport const toggleEstimationReducer = (state = initialState, action) => {\n  const { isOpen } = action;\n  switch (action.type) {\n    case actionTypes.TOGGLE_ESTIMATION:\n      return isOpen;\n    default:\n      return initialState;\n  }\n};\n","//load state from localStorage\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n// save the state to localStorage\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport rootReducer from './reducers/index';\nimport logger from 'redux-logger';\nimport { saveState } from './localStorage';\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(logger))\n  );\n  store.subscribe(() => {\n    saveState({\n      ...store.getState().tree,\n      ...store.getState().toggleEstimation,\n      ...store.getState().estimation\n    });\n  });\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}