{"version":3,"sources":["components/Button.js","utils/getPosition.js","hooks/onClickOutside.js","components/Cell/index.js","components/TreeNode.js","actions/cell.js","constant/index.js","utils/convertToPdf.js","components/Header.js","constant/estimationTable.js","components/Estimation/Tick.js","utils/cloneObj.js","components/Estimation/Table.js","actions/estimation.js","actions/toggleEstimation.js","components/Estimation/index.js","App.js","serviceWorker.js","constant/tree.js","constant/position.js","reducers/treeReducer.js","reducers/estimationReducer.js","utils/getColor.js","reducers/index.js","reducers/toggleEstimationReducer.js","configureStore.js","index.js","utils/localStorage.js"],"names":["Button","_ref","name","className","style","react_default","a","createElement","index_esm","color","getConnectLine","position","useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","classNames","require","Cell","props","forceUpdate","_useState","useState","_useState2","Object","slicedToArray","set","value","useForceUpdate","_props$cell$value","cell","id","root","estimation","toggleEstimation","handleAddChild","handleAddSibling","handleRemoveCell","handleAppendChild","handleAppendSibling","handleActive","activeCell","isActiveCell","setActiveCell","useMemo","getElementById","console","log","_useState3","_useState4","setIsDragging","_useState5","_useState6","onHover","setOnHover","allowDrop","currentArea","getAttribute","includes","concat","preventDefault","drop","data","targetCell","dropCell","cellId","dataTransfer","getData","JSON","parse","hasChildNodes","replace","cellsCollection","getElementsByClassName","toConsumableArray","map","v","classList","remove","cellRef","useRef","e","onDrop","onDragOver","children","length","onClick","onDragStart","setData","stringify","draggable","width","rows","data-min-rows","placeholder","onDragLeave","right","key","activated","hours","uuidv4","calculateNodeWidth","_document","_document$getElementB","offsetWidth","connect","state","tree","_root","dispatch","dispatchAddChild","type","addChild","dispatchAppendChild","parentId","appendChild","dispatchAddSibling","addSibling","dispatchRemoveCell","removeCell","dispatchAppendSibling","siblingId","appendSibling","TreeNode","_tree$value","_tree$children","newCell","group","hasChildren","childCellRef","currentId","Cell_Cell","obj","treeNode","nodeWidth","print","quality","el","querySelector","html2canvas","scrollWidth","height","scrollHeight","then","canvas","pdf","jsPDF","internal","pageSize","getWidth","getHeight","addImage","toDataURL","save","setToggleEstimation","fa_index_esm","head","unit","toggle","Tick","index","clone","copy","constructor","attr","hasOwnProperty","calculateSumMembers","arr","Array","isArray","reduce","cnt","o","parseFloat","rate","Table","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAddRow","dispatchAddRow","dispatchKeepToggle","handleRemoveRow","row","window","confirm","dispatchRemoveRow","onDragEnd","fromIndex","toIndex","item1","item2","dispatchArrangeRow","dragProps","nodeSelector","handleSelector","handleInputChange","_e$target","prefix","split","dispatchEditCell","handleToggleTick","dispatchToggleTick","bind","assertThisInitialized","reset","setState","_this2","which","keyCode","_this3","lib_default","table","h","item","autoComplete","onChange","title","Estimation_Tick","React","Component","arrangeRow","addRow","removeRow","editCell","toggleTick","dispatchCloseToggle","Estimation","Estimation_Table","components_Header","components_TreeNode","store","Estimation_Estimation","Boolean","location","hostname","match","Tree","createClass","initialTree","initTree","callback","goThrough","node","forEach","child","parentValue","newNode","_traverse","push","siblingValue","siblingPosition","n","splice","childNode","returnNode","parentNode","_search","leafsRet","_displayLeafs","flat","isChild","_addNode","initialState","getColor","defaultValue","order","amount","localStorage","combineReducers","_cell$value","_cell$value2","_parentNode$children","_parentNode$children2","_tree$_search","childPos","cellPos","arguments","undefined","action","getPosition","positionTypes","objectSpread","_removeNode","grandparent","_childPosition","_addSibling","parentLength","isOpen","newRow","count","filter","it","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","blacklist","stateReconciler","autoMergeLevel2","pReducer","persistReducer","rootReducer","createStore","applyMiddleware","logger","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","setItem","update","clear","removeItem","get","getItem","check"],"mappings":"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","file":"static/js/main.efcc2fa8.chunk.js","sourcesContent":["import React from 'react';\nimport { IoIosAddCircle, IoIosRemoveCircle } from 'react-icons/io';\n\nexport default function Button({ name, className, style }) {\n  switch (name) {\n    case 'add':\n      return (\n        <IoIosAddCircle\n          className=\"w-8 h-8 text-white z-100 rounded-full bg-white\"\n          style={{ color: '#2f7fef' }}\n        />\n      );\n    case 'minus':\n      return (\n        <IoIosRemoveCircle className=\"w-8 h-8 rounded-full bg-white\" style={{ color: 'red' }} />\n      );\n    default:\n      return null;\n  }\n}\n","//this function get position of a child node in it's parents' children array\nexport const getPosition = (length, position) => {\n  if (position === 0 && length > 0) {\n    return 'isFirstChild';\n  }\n  if (position === length && position !== 0) {\n    return 'isLastChild';\n  }\n  if (position !== 0 && position < length && length > 2) {\n    return 'isChild';\n  }\n};\nexport const getConnectLine = position => {\n  switch (position) {\n    case 'isFirstChild':\n      return 'right-connect-line';\n    case 'isChild':\n      return 'full-connect-line';\n    case 'isLastChild':\n      return 'left-connect-line';\n    default:\n      return '';\n  }\n};\n","// creadit: https://usehooks.com/useOnClickOutside/\nimport { useEffect } from 'react';\n// Hook\nfunction useOnClickOutside(ref, handler) {\n  useEffect(\n    () => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n\nexport default useOnClickOutside","import React, { useState, useRef, useMemo } from 'react';\nimport { IoIosMore } from 'react-icons/io';\nimport Button from '../Button';\nimport { getConnectLine } from '../../utils/getPosition';\nimport useOnClickOutside from '../../hooks/onClickOutside';\nlet classNames = require('classnames');\n\n// create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\nexport const Cell = props => {\n  const forceUpdate = useForceUpdate();\n  const { name, id, root, position } = props.cell.value;\n  const { estimation, toggleEstimation } = props;\n  const {\n    handleAddChild,\n    handleAddSibling,\n    handleRemoveCell,\n    handleAppendChild,\n    handleAppendSibling,\n    handleActive\n  } = props;\n  const { activeCell, setActiveCell } = props;\n  const isActiveCell = useMemo(() => {\n    if (activeCell && (document.getElementById(id).contains(document.getElementById(activeCell)) || activeCell === id)) {\n      return true\n    }\n    return false\n  },[activeCell, id])\n    console.log(\"isActiveCell -> isActiveCell\", isActiveCell, ' ', id)\n  const [isDragging, setIsDragging] = useState(false);\n  const [onHover, setOnHover] = useState(null);\n\n  const dragStart = (event, cell) => {\n    setIsDragging(true);\n    event.dataTransfer.setData('cell', JSON.stringify(cell));\n  };\n  const allowDrop = event => {\n    const currentArea = event.target.getAttribute('id');\n    const name = event.target.getAttribute('name');\n    let id;\n    if (currentArea?.includes('sibling-dropzone')) {\n      setOnHover(currentArea);\n    }\n    if (name === 'child-dropzone') {\n      setOnHover(`child-dropzone-${id}`);\n    }\n    event.preventDefault();\n  };\n\n  const handleDragLeave = event => {\n    const currentArea = event.target.getAttribute('id');\n    if (currentArea.includes('sibling-dropzone')) {\n      setOnHover(null);\n    }\n    if (event.target.getAttribute('name') === 'child-dropzone') {\n      setOnHover(null);\n    }\n  };\n\n  const drop = (event, data) => {\n    event.preventDefault();\n    const targetCell = document.getElementById(id);\n    const dropCell = event.target;\n    let cellId = dropCell.getAttribute('id');\n    var data = event.dataTransfer.getData('cell');\n    data = JSON.parse(data);\n    if (\n      targetCell.hasChildNodes(dropCell) &&\n      dropCell.getAttribute('name') !== 'right-sibling-dropzone' &&\n      dropCell.getAttribute('name') !== 'left-sibling-dropzone'\n    ) {\n      cellId = cellId.replace(/textarea-|edit-/g, '') || cellId;\n      handleAppendChild(data, cellId);\n      forceUpdate();\n    }\n    if (event.target.getAttribute('name') === 'right-sibling-dropzone') {\n      event.target.style.className = 'is-dragging';\n      cellId = cellId.replace(/right-sibling-dropzone-/g, '');\n      handleAppendSibling('right', data, cellId);\n      const cellsCollection = document.getElementsByClassName('cell');\n      let cellArr = [...cellsCollection];\n      cellArr.map(v => {\n        v.classList.remove('on-right-dragged-over', 'on-left-dragged-over');\n      });\n    }\n    if (event.target.getAttribute('name') === 'left-sibling-dropzone') {\n      cellId = cellId.replace(/left-sibling-dropzone-/g, '');\n      handleAppendSibling('left', data, cellId);\n    }\n    setIsDragging(false);\n    setOnHover(null);\n    forceUpdate();\n  };\n\n  const cellRef = useRef(null);\n  useOnClickOutside(cellRef, (e) => {\n    handleActive(e)\n  });\n\n  return (\n    <div className={classNames(getConnectLine(position))}>\n      <div className={classNames('relative')} ref={cellRef}>\n        <div\n          className={classNames(\n            'cell cell-width mt-12 mb-2 h-32 flex justify-center relative',\n            onHover?.includes(id) &&\n              onHover?.includes('right') &&\n              'on-right-dragged-over',\n            onHover?.includes(id) &&\n              onHover?.includes('left') &&\n              'on-left-dragged-over'\n          )}\n        >\n          {!root && (\n            <div\n              className={classNames(\n                'left-dz bg-red absolute left-0 top-0 dropzone bg-transparent'\n              )}\n              name=\"left-sibling-dropzone\"\n              id={`left-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n            ></div>\n          )}\n          <div\n            id={id}\n            name=\"child-dropzone\"\n            className={classNames(\n              'border main-border rounded-lg w-48',\n              !root && 'absolute above-line min-h-cell',\n              props.cell.children.length > 0 && 'absolute below-line'\n            )}\n            onClick={(e)=>handleActive(e)}\n            onDragStart={e => dragStart(e, props.cell)}\n            draggable={!root && 'true'}\n            onDrop={e => {\n              drop(e, props.cell);\n            }}\n            onDragOver={e => allowDrop(e)}\n          >\n            <div\n              className={classNames(\n                'flex items-center h-4 w-full main-border-bottom',\n                !root && 'draggable',\n                isActiveCell && 'main-bg'\n              )}\n            >\n              <IoIosMore\n                className={classNames(\n                  'text-4xl font-semibold pl-2',\n                  id === activeCell ? 'text-white' : 'main-text-color'\n                )}\n              />\n            </div>\n            <div\n              className=\"relative px-2 py-2 text-xl font-semibold main-text-color\"\n              id={`edit-${id}`}\n            >\n              <textarea\n                style={{ width: '100%' }}\n                rows=\"2\"\n                data-min-rows=\"2\"\n                id={`textarea-${id}`}\n                placeholder={name}\n              ></textarea>\n            </div>\n          </div>\n          {/* only render \"add sibling\" button for cell not root*/}\n          {!root && activeCell !== id && (\n            <div\n              className={[\n                'absolute opacity-0 hover:opacity-100 flex justify-start items-center w-24 h-32 top-0 right-0 z-20 cursor-pointer'\n              ]}\n              onClick={() => {\n                handleAddSibling(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\" z-100\" />\n            </div>\n          )}\n          {!root && (\n            <div\n              className={classNames(\n                'right-dz bg-red absolute top-0 right-0 dropzone bg-transparent z-40'\n              )}\n              name=\"right-sibling-dropzone\"\n              id={`right-sibling-dropzone-${id}`}\n              onDrop={e => drop(e, props.cell)}\n              onDragOver={e => allowDrop(e)}\n              onDragLeave={e => handleDragLeave(e)}\n            ></div>\n          )}\n          {/* estimation vertical line */}\n          {toggleEstimation && (\n            <div\n              className={\n                'flex flex-col h-auto items-center justify-center absolute'\n              }\n              style={{ right: '80px' }}\n            >\n              {estimation.map(\n                (e, key) =>\n                  e.activated && (\n                    <div\n                      key={key}\n                      className={classNames([\n                        'w-8 text-center h-6 px-2',\n                        key !== estimation.length - 1 &&\n                          key !== 0 &&\n                          'border-middle-cells',\n                        key === 0 && 'border-first-cell',\n                        key === estimation.length - 1 && 'border-last-cell'\n                      ])}\n                      style={{ color: e.activated ? e.color : '' }}\n                    >\n                      {e.hours}\n                    </div>\n                  )\n              )}\n            </div>\n          )}\n          {/* ends estimation vertical line */}\n          {activeCell !== id && (\n            <div\n              className={[\n                'absolute bottom-0 opacity-0 hover:opacity-100 flex justify-center w-48 h-8'\n              ]}\n              onClick={() => {\n                handleAddChild(props.cell.value);\n              }}\n            >\n              <Button name=\"add\" className=\"absolute z-100\" />\n            </div>\n          )}\n          {/* toggle remove button on hover cell but not the root cell */}\n          {activeCell === id && !root && (\n            <div\n              id={`remove${id}`}\n              className={classNames(\n                'absolute bottom-0 right-0 flex justify-center w-48 h-8',\n                activeCell === id ? 'opacity-1' : 'opacity-0'\n              )}\n              onClick={() => {\n                handleRemoveCell(props.cell.value);\n              }}\n            >\n              <Button id={`remove${id}`} name=\"minus\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cell;\n","import React, { useState, useRef, useMemo } from 'react';\nimport { Cell } from './Cell';\nimport { connect } from 'react-redux';\nimport useOnClickOutside from '../hooks/onClickOutside';\nimport {\n  addChild,\n  appendChild,\n  addSibling,\n  removeCell,\n  appendSibling\n} from '../actions/cell';\nconst uuidv4 = require('uuid/v4');\nvar classNames = require('classnames');\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n  const [_, set] = useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\n\nconst calculateNodeWidth = id => {\n  return id && document?.getElementById(id)?.offsetWidth;\n};\nconst TreeNode = props => {\n  const forceUpdate = useForceUpdate();\n  const { tree, toggleEstimation } = props;\n  const { estimation } = props;\n  const [activeCell, setActiveCell] = useState(null);\n\n  const {\n    dispatchAddChild,\n    dispatchAppendChild,\n    dispatchAddSibling,\n    dispatchRemoveCell,\n    dispatchAppendSibling\n  } = props;\n\n  const handleAddChild = cell => {\n    const id = uuidv4();\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddChild(newCell);\n    forceUpdate();\n  };\n\n  const handleAppendChild = (cell, parentId) => {\n    //prevent dropping at the same cell\n    cell.value.id !== parentId && dispatchAppendChild(cell, parentId);\n    forceUpdate();\n  };\n  const handleAddSibling = cell => {\n    const id = uuidv4();\n\n    let newCell = {\n      value: {\n        group: 'body',\n        id: id,\n        name: 'name',\n        parentId: cell.parentId,\n        siblingId: cell.id,\n        hasChildren: false\n      },\n      children: []\n    };\n    dispatchAddSibling(newCell);\n    forceUpdate();\n  };\n\n  const handleAppendSibling = (position, data, siblingId) => {\n    let newCell = data;\n    dispatchAppendSibling(position, newCell, siblingId);\n    forceUpdate();\n  };\n\n  const handleRemoveCell = cell => {\n    dispatchRemoveCell(cell);\n    forceUpdate();\n  };\n  const cellRef = useRef(null);\n  const childCellRef = useRef(null);\n  const handleActive = e => {\n    const currentId = e.target.getAttribute('id');\n    if (currentId) {\n      if ( activeCell !== currentId) {\n        setActiveCell(currentId);\n      }\n        setActiveCell(null);\n    }\n  };\n\n  return (\n    <div className={classNames(['flex flex-col flex-wrap',!toggleEstimation && 'pointer-events-none'])} id=\"canvas\">\n      {/* render root cell */}\n      <div className=\"flex justify-center\">\n        {tree?.value?.root && (\n          <Cell\n            ref={cellRef}\n            handleActive={handleActive}\n            toggleEstimation={toggleEstimation}\n            activeCell={activeCell}\n            setActiveCell={(obj)=>setActiveCell(obj)}\n            cell={tree}\n            estimation={estimation}\n            handleAddChild={handleAddChild}\n            handleAddSibling={handleAddSibling}\n            handleAppendSibling={handleAppendSibling}\n          />\n        )}\n      </div>\n      <div className=\"flex justify-center\">\n        {tree?.children?.length > 0 &&\n          tree.children.map((treeNode, key) => (\n            <div\n              id={treeNode.value.id}\n              key={key}\n              className={classNames('flex flex-col items-center relative')}\n            >\n              <Cell\n                  handleActive={handleActive}\n                  ref={childCellRef}\n                  toggleEstimation={toggleEstimation}\n                  estimation={estimation}\n                  activeCell={activeCell}\n                  setActiveCell={(obj)=>setActiveCell(obj)}\n                  key={key}\n                  cell={treeNode}\n                  handleAddChild={handleAddChild}\n                  handleAppendChild={handleAppendChild}\n                  handleAddSibling={handleAddSibling}\n                  handleAppendSibling={handleAppendSibling}\n                  handleRemoveCell={handleRemoveCell}\n              />\n              {treeNode.children.length > 0 && (\n                <TreeNode\n                  toggleEstimation={toggleEstimation}\n                  estimation={estimation}\n                  nodeWidth={calculateNodeWidth(treeNode.value.id)}\n                  id={treeNode.value.id}\n                  tree={treeNode}\n                  dispatchAddChild={dispatchAddChild}\n                  dispatchAppendChild={dispatchAppendChild}\n                  dispatchAddSibling={dispatchAddSibling}\n                  dispatchRemoveCell={dispatchRemoveCell}\n                  dispatchAppendSibling={dispatchAppendSibling}\n                />\n              )}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  dispatchAddChild: cell => {\n    dispatch(addChild(cell));\n  },\n  dispatchAppendChild: (cell, parentId) => {\n    dispatch(appendChild(cell, parentId));\n  },\n  dispatchAddSibling: cell => {\n    dispatch(addSibling(cell));\n  },\n  dispatchRemoveCell: cell => {\n    dispatch(removeCell(cell));\n  },\n  dispatchAppendSibling: (position, cell, id) => {\n    dispatch(appendSibling(position, cell, id));\n  }\n});\n\nconst mapStateToProps = state => {\n  const tree = state.tree.tree._root;\n  const estimation = state.estimation;\n  return { tree, estimation };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TreeNode);\n","import * as actionTypes from '../constant/index';\nexport const addChild = cell => ({\n  type: actionTypes.ADD_CHILD,\n  cell: cell\n});\n\nexport const appendChild = (cell, parentId) => ({\n  type: actionTypes.APPEND_CHILD,\n  parentId: parentId,\n  cell: cell\n});\n\nexport const addSibling = cell => ({\n  type: actionTypes.ADD_SIBLING,\n  cell: cell\n});\n\nexport const removeCell = cell => ({\n  type: actionTypes.REMOVE_CELL,\n  cell: cell\n});\n\nexport const appendSibling = (position, cell, siblingId) => {\n  switch (position) {\n    case 'right':\n      return {\n        type: actionTypes.APPEND_RIGHT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    case 'left':\n      return {\n        type: actionTypes.APPEND_LEFT_SIBLING,\n        cell: cell,\n        siblingId: siblingId\n      };\n    default:\n      return null;\n  }\n};\n","export const main = 'MAIN';\nexport const ESTIMATION = 'estimation';\nexport const ADD_CHILD = 'ADD_CHILD';\nexport const APPEND_CHILD = 'APPEND_CHILD';\nexport const ADD_SIBLING = 'ADD_SIBLING';\nexport const REMOVE_CELL = 'REMOVE_CELL';\nexport const APPEND_RIGHT_SIBLING = 'APPEND_RIGHT_SIBLING';\nexport const APPEND_LEFT_SIBLING = 'APPEND_LEFT_SIBLING';\nexport const TOGGLE_ESTIMATION = 'TOGGLE_ESTIMATION';\nexport const ARRANGE_ROW = 'ARRANGE_ROW';\nexport const ADD_ROW = 'ADD_ROW';\nexport const REMOVE_ROW = 'REMOVE_ROW';\nexport const EDIT_CELL = 'EDIT_CELL';\nexport const TOGGLE_TICK = 'TOGGLE_TICK';\nexport const KEEP_TOGGLE = 'KEEP_TOGGLE';\nexport const CLOSE_TOGGLE = 'CLOSE_TOGGLE';\n","import html2canvas from 'html2canvas';\nimport * as jsPDF from 'jspdf';\n// This one lets you improve the PDF sharpness by scaling up the HTML node tree to render as an image before getting pasted on the PDF.\nfunction print(quality, id) {\n  const filename = 'ThisIsYourPDFFilename.pdf';\n\n  if (!document.getElementById(id)) {\n    return\n  }\n  const el = document.querySelector(`#${id}`)\n\n  html2canvas(el, {width: el.scrollWidth, height: el.scrollHeight}).then(\n    canvas => {\n      let pdf = new jsPDF('landscape');\n      var width = pdf.internal.pageSize.getWidth();\n      var height = pdf.internal.pageSize.getHeight();\n      pdf.addImage(canvas.toDataURL('image/png'), 'PNG', 0, 0, width, height);\n      pdf.save(filename);\n    }\n  );\n}\n\nexport default print;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FaDollarSign, FaFilePdf, FaDownload, FaFileDownload } from 'react-icons/fa';\nimport print from '../utils/convertToPdf';\n\nconst Header = props => {\n  const { toggleEstimation, setToggleEstimation } = props;\n  function handleClick() {\n    setToggleEstimation(toggleEstimation=>!toggleEstimation)\n  }\n  return (\n    <div className=\"flex justify-start\">\n      <button\n        onClick={handleClick}\n        className={[\"w-12 h-12 bg-button flex justify-center items-center mr-4\"]}\n      >\n        <FaDollarSign />\n      </button>\n      <button\n        onClick={()=>print(1, 'root')}\n        className={[\"w-12 h-12 bg-button flex justify-center items-center\"]}\n      >\n        <FaFileDownload />\n      </button>\n    </div>\n  );\n};\n\n\nexport default connect(\n)(Header);\n","export const head = [\n  { unit: '', name: 'ITEM', value: 'item' },\n  { unit: '', name: 'RATE', value: 'rate' },\n  { unit: 'h', name: 'HOURS', value: 'hours' },\n  { unit: '', name: 'AMOUNT', value: 'amount' }\n];\nexport const toggle = { true: true, false: false };\n","import React from 'react';\nimport { FaRegCheckCircle } from 'react-icons/fa';\nimport { IoIosCheckmarkCircle } from 'react-icons/io';\n\nconst Tick = props => {\n  const { activated, index, color } = props;\n  return (\n    <div>\n      {!activated && <FaRegCheckCircle color={[activated ? color : '']} />}\n      {activated && (\n        <IoIosCheckmarkCircle\n          className=\"text-xl\"\n          color={[activated ? color : '']}\n        />\n      )}\n    </div>\n  );\n};\nexport default Tick;\n","export const clone = obj => {\n  if (null == obj || 'object' != typeof obj) return obj;\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n  }\n  return copy;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactDragListView from 'react-drag-listview/lib/index.js';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport * as table from '../../constant/estimationTable';\nimport Tick from './Tick';\nimport { clone } from '../../utils/cloneObj';\nimport {\n  arrangeRow,\n  addRow,\n  removeRow,\n  editCell,\n  toggleTick\n} from '../../actions/estimation';\nimport { keepToggle, closeToggle } from '../../actions/toggleEstimation';\nlet classNames = require('classnames');\n\nconst calculateSumMembers = (arr, key) => {\n  let sum;\n  if (Array.isArray(arr) && arr.length > 0 && key !== 'amount') {\n    sum = arr.reduce(function(cnt, o) {\n      return cnt + parseFloat(o[key]);\n    }, 0);\n  } else if (Array.isArray(arr) && arr.length > 0 && key === 'amount') {\n    sum = arr.reduce(function(cnt, o) {\n      return cnt + parseFloat(o.rate) * parseFloat(o.hours);\n    }, 0);\n  } else {\n    sum = 0;\n  }\n  return sum;\n};\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAddRow = this.handleAddRow.bind(this);\n    this.state = {\n      parentId: '',\n      reset: true\n    };\n    this.setState = this.setState.bind(this);\n  }\n\n  handleAddRow = id => {\n    this.props.dispatchAddRow(id);\n    this.props.dispatchKeepToggle();\n  };\n  handleRemoveRow = row => {\n    if (window.confirm('Confirm removing row?')) {\n      row && this.props.dispatchRemoveRow(row);\n    }\n    this.props.dispatchKeepToggle();\n  };\n  componentDidMount() {\n    document\n      .getElementById('estimationTable')\n      .addEventListener('keypress', e => {\n        var key = e.which || e.keyCode;\n        if (key === 13) {\n          const id = e.target.getAttribute('id').split('-')[1];\n          this.handleAddRow(id);\n        }\n      });\n  }\n  onDragEnd = (fromIndex, toIndex) => {\n    const data = clone(this.props.estimation);\n    const item1 = clone(data[fromIndex]);\n    const item2 = clone(data[toIndex]);\n    data[fromIndex] = item2;\n    data[toIndex] = item1;\n    this.props.dispatchArrangeRow(data);\n    this.props.dispatchKeepToggle();\n  };\n\n  dragProps = {\n    onDragEnd: this.onDragEnd,\n    nodeSelector: 'li',\n    handleSelector: 'a'\n  };\n  handleInputChange = e => {\n    const { id, name, value } = e.target;\n    const prefix = id.split('-')[0];\n    const cellId = id.replace(`${prefix}-`, '');\n    this.props.dispatchEditCell(cellId, name, value);\n    this.props.dispatchKeepToggle();\n  };\n  handleToggleTick = (id, activated) => {\n    if (activated) {\n      if (\n        window.confirm(\n          'Are you sure you want to unlink this data row from sitemap?'\n        )\n      ) {\n        this.props.dispatchToggleTick(id);\n      }\n    } else {\n      this.props.dispatchToggleTick(id);\n    }\n    this.props.dispatchKeepToggle();\n  };\n\n  render() {\n    return (\n      <div id=\"estimationTable\" className=\"w-full\">\n        <ReactDragListView {...this.dragProps}>\n          <div className=\"w-full flex items-center h-16\">\n            {table.head.map((h, key) => (\n              <div\n                className={classNames([\n                  `w-1/${table.head.length}`,\n                  'primary-grey font-semibold ml-4 text-white'\n                ])}\n                key={key}\n              >\n                {h.name}\n              </div>\n            ))}\n          </div>\n          <ol className=\"w-full\">\n            {this.props.estimation.map((item, index) => (\n              <li className=\"text-white flex estimation-row h-16\" key={index}>\n                <div className=\"flex items-center w-1/4 border grey-border\">\n                  <a\n                    className=\"-ml-3 mr-3 cursor-pointer absolute z-50\"\n                    onClick={() => this.handleRemoveRow(item)}\n                  >\n                    <div className=\"bg-red-700 rounded-full w-6 h-6 text-white text-xl flex justify-center items-center\">\n                      -\n                    </div>\n                  </a>\n                  <input\n                    autoComplete=\"off\"\n                    onChange={e => this.handleInputChange(e)}\n                    name=\"title\"\n                    id={`title-${item.id}`}\n                    className=\"ml-3 w-full max-h-full estimation-panel focus:outline-none\"\n                    type=\"text\"\n                    placeholder={item.title}\n                  ></input>\n                  <div\n                    id={`tick-${item.id}`}\n                    className=\"cursor-pointer \"\n                    onClick={() =>\n                      this.handleToggleTick(item.id, item.activated)\n                    }\n                  >\n                    <Tick\n                      activated={item.activated}\n                      index={index}\n                      color={item.color}\n                    />\n                  </div>\n                </div>\n                <div className=\"w-1/4 border grey-border\">\n                  <input\n                    autoComplete=\"off\"\n                    id={`rate-${item.id}`}\n                    onChange={e => this.handleInputChange(e)}\n                    name=\"rate\"\n                    className=\"ml-3 w-full h-full bg-transparent focus:outline-none focus:bg\"\n                    type=\"number\"\n                    placeholder={`$${item.rate}`}\n                  />\n                </div>\n                <div className=\"w-1/4 border grey-border\">\n                  <input\n                    autoComplete=\"off\"\n                    id={`hours-${item.id}`}\n                    onChange={e => this.handleInputChange(e)}\n                    name=\"hours\"\n                    className=\"ml-3 w-full h-full bg-transparent focus:outline-none focus:bg\"\n                    type=\"number\"\n                    placeholder={item.hours}\n                  />\n                </div>\n                <div className=\"w-1/4 border grey-border flex justify-between items-center\">\n                  <div\n                    id={`amount-${item.id}`}\n                    name=\"amount\"\n                    className=\"ml-3 w-full h-full bg-transparent focus:outline-none focus:bg flex items-center\"\n                  >\n                    {/* set default 0 to prevent no input */}${' '}\n                    {parseFloat(item.hours) * parseFloat(item.rate) || 0}\n                  </div>\n                  <a className=\"active:cursor-grabbing\">\n                    <FaEllipsisV />\n                  </a>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </ReactDragListView>\n        <div\n          onClick={() => {\n            this.handleAddRow();\n          }}\n          className=\"primary-grey h-16 flex justify-start items-center border-b grey-border cursor-pointer ml-3\"\n        >\n          Add row\n        </div>\n        <div className=\"h-16 flex justify-start items-center ml-3 text-white font-semibold text-xl\">\n          <div className=\"w-1/4\"></div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r border-b-2 border-white\">\n            Subtotal\n          </div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r pl-3 border-b-2 border-white\">\n            {calculateSumMembers(this.props.estimation, 'hours')}\n          </div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r pl-3 border-b-2 border-white\">\n            {calculateSumMembers(this.props.estimation, 'amount')}\n          </div>\n        </div>\n        <div className=\"h-16 flex justify-start items-center border-b grey-border ml-3 text-white font-semibold text-xl\">\n          <div className=\"w-1/4\"></div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r\">\n            Total\n          </div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r\"></div>\n          <div className=\"w-1/4 h-full flex items-center grey-border border-r pl-3\">\n            {' '}\n            {calculateSumMembers(this.props.estimation, 'amount')}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  dispatchArrangeRow: data => {\n    dispatch(arrangeRow(data));\n  },\n  dispatchAddRow: id => {\n    dispatch(addRow(id));\n  },\n  dispatchRemoveRow: row => {\n    dispatch(removeRow(row));\n  },\n  dispatchEditCell: (cellId, name, value) => {\n    dispatch(editCell(cellId, name, value));\n  },\n  dispatchToggleTick: cellId => {\n    dispatch(toggleTick(cellId));\n  },\n  dispatchKeepToggle: () => {\n    dispatch(keepToggle());\n  },\n  dispatchCloseToggle: () => {\n    dispatch(closeToggle());\n  }\n});\nconst mapStateToProps = state => {\n  const { estimation } = state;\n  return { estimation };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import * as actionTypes from '../constant/index';\n\nexport const arrangeRow = data => {\n  return {\n    type: actionTypes.ARRANGE_ROW,\n    data: data\n  };\n};\n\nexport const addRow = id => {\n  return {\n    type: actionTypes.ADD_ROW,\n    id: id\n  };\n};\nexport const removeRow = row => {\n  return {\n    type: actionTypes.REMOVE_ROW,\n    data: row\n  };\n};\nexport const editCell = (cellId, name, value) => {\n  return {\n    type: actionTypes.EDIT_CELL,\n    data: { cellId: cellId, name: name, value: value }\n  };\n};\nexport const toggleTick = cellId => {\n  return {\n    type: actionTypes.TOGGLE_TICK,\n    data: cellId\n  };\n};\n","import * as actionTypes from '../constant/index';\n\nexport const toggleEstimation = isOpen => {\n  return {\n    type: actionTypes.TOGGLE_ESTIMATION,\n    isOpen: isOpen\n  };\n};\nexport const keepToggle = () => {\n  return {\n    type: actionTypes.KEEP_TOGGLE\n  };\n};\nexport const closeToggle = () => {\n  return {\n    type: actionTypes.CLOSE_TOGGLE\n  };\n};\n","import React from 'react';\nimport Table from './Table';\n\nexport const Estimation = props => {\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      <Table />\n    </div>\n  );\n};\n","import React, {useState} from 'react';\nimport TreeNode from './components/TreeNode';\nimport Header from './components/Header';\nimport { Estimation } from './components/Estimation/index';\nimport { connect } from 'react-redux';\nlet classNames = require('classnames');\n\nconst App = props => {\n  const [toggleEstimation, setToggleEstimation] = useState(true)\n  return (\n    <div\n      className={classNames('wrapper flex relative overflow-scroll', 'flex-col')}\n    >\n      <div\n        className={classNames([\n          'w-full z-0 px-8 mt-24',\n        ])}\n      >\n        <Header setToggleEstimation={setToggleEstimation}/>\n        <TreeNode toggleEstimation={toggleEstimation} store={props.store} />\n      </div>\n      {!toggleEstimation && <div onClick={()=>setToggleEstimation(toggleEstimation=>!toggleEstimation)} className=\"bg-gray-700 opacity-50 min-h-screen min-w-screen z-100 absolute top-0 left-0 right-0 bottom-0\"></div>}\n      {!toggleEstimation && (\n        <div className=\"estimation-panel w-1/2 min-h-screen overflow-scroll fixed right-0 top-0 bottom-0\">\n          <Estimation setToggleEstimation={setToggleEstimation} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export class Tree {\n  constructor(root) {\n    this._root = root || null;\n  }\n\n  _buildTree(initialTree) {\n    this._root = initTree;\n  }\n\n  _traverse(callback) {\n    function goThrough(node) {\n      callback(node);\n      node.children.forEach(child => {\n        goThrough(child);\n      });\n    }\n    goThrough(this._root);\n  }\n\n  _addNode(value, parentValue) {\n    const newNode = {\n      value: value,\n      children: []\n    };\n\n    if (this._root === null) {\n      this._root = newNode;\n      return;\n    }\n\n    this._traverse(node => {\n      if (node.value.id === parentValue) {\n        return node.children.push(value);\n      }\n    });\n  }\n\n  _addSibling(value, parentValue, siblingValue, position) {\n    if (position === 'right') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition + 1, 0, value);\n        }\n      });\n    }\n    if (position === 'left') {\n      this._traverse(node => {\n        if (node.value.id === parentValue) {\n          //find its left sibling position\n          let siblingPosition;\n          node.children.map((n, key) => {\n            if (n.value.id === siblingValue) {\n              siblingPosition = key;\n            }\n          });\n          return node.children.splice(siblingPosition, 0, value);\n        }\n      });\n    }\n  }\n\n  _removeNode(value) {\n    this._traverse(node => {\n      node.children.forEach((childNode, index) => {\n        if (childNode.value.id === value) {\n          node.children.splice(index, 1);\n        }\n      });\n    });\n  }\n\n  _search(value) {\n    let returnNode = 'Not Found';\n    this._traverse(node => {\n      if (node && node.value.id === value) {\n        returnNode = node;\n      }\n    });\n    return returnNode;\n  }\n\n  _displayLeafs(parentValue) {\n    const parentNode =\n      typeof parentValue === 'string' ? this._search(parentValue) : parentValue;\n    let leafsRet = [];\n    if (parentValue?.children && !parentValue.children.length) {\n      return parentValue;\n    }\n\n    parentNode &&\n      parentNode.children.forEach(child => {\n        leafsRet.push(this._displayLeafs(child));\n      });\n\n    return leafsRet.flat();\n  }\n\n  _childPosition(parentValue, siblingValue) {\n    let position;\n    this._search(parentValue).children.map((n, key) => {\n      if (n.value.id === siblingValue) {\n        position = key;\n      }\n    });\n    return position;\n  }\n}\n\nexport const initTree = () => {\n  const tree = new Tree();\n  return tree;\n};\n","export const isFirstChild = 'isFirstChild';\nexport const isLastChild = 'isLastChild';\nexport const isChild = 'isChild';\n","import * as actionTypes from '../constant';\nimport { initTree } from '../constant/tree';\nimport { getPosition } from '../utils/getPosition';\nimport * as positionTypes from '../constant/position';\n\nlet ChartTree;\n\nlet tree = initTree();\n// console.log(!localStorage.check());\n// if (!localStorage.check() === true) {\n//   ChartTree = {\n//     group: 'main',\n//     id: 'te83nwko7b',\n//     name: 'Root',\n//     root: true,\n//     hasChildren: false,\n//     children: []\n//   };\n//   localStorage.set(ChartTree);\n//   tree._addNode(ChartTree);\n// } else {\n//   ChartTree = localStorage.get();\n//   tree._addNode(ChartTree._root);\n// }\ntree._addNode({\n  group: 'main',\n  id: 'te83nwko7b',\n  name: 'Root',\n  root: true,\n  hasChildren: false,\n  children: [],\n  estimation: {}\n});\nconst initialState = {\n  tree\n};\nexport const treeReducer = (state = initialState, action) => {\n  const { cell } = action;\n  let parentId = cell?.value?.parentId;\n  const siblingId = cell?.value?.siblingId || action.siblingId;\n  let { tree } = state;\n  let parentNode = tree?._search(parentId);\n  const position = parentNode?.children?.length;\n  const length = parentNode?.children?.length;\n  let childPos, cellPos;\n  switch (action.type) {\n    case actionTypes.ADD_CHILD:\n      cell.value.position = getPosition(length, position);\n      //toggle previous sibling node into isChild\n      if (parentNode.children.length > 1) {\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      //toggle previous sibling to be first node if there are 2 siblings\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n      }\n      //toggle parent hasChildren field to true\n      if (parentNode) {\n        parentNode.value.hasChildren = true;\n      }\n      tree._addNode(cell, parentId);\n      return {...state, tree}\n\n    case actionTypes.APPEND_CHILD:\n      cellPos = cell.value.position;\n      tree._removeNode(cell.value.id);\n      cell.value.parentId = action.parentId;\n      cell.value.position = '';\n      tree._addNode(cell, action.parentId);\n      tree._search(action.parentId).value.hasChildren = true;\n      //handle position of target's parent node\n      const grandparent = tree._search(\n        tree._search(action.parentId).value.parentId\n      );\n      const grandLength = grandparent.children.length;\n      if (grandLength === 1) {\n        grandparent.children[0].value.position = '';\n      }\n      //handle position of the dragged cell\n      if (length - 1 === 1) {\n        parentNode.children[0].position = '';\n      }\n      childPos = tree._childPosition(parentId, cell.value.id);\n      if (length - 1 > 1 && cellPos === positionTypes.isFirstChild) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n      }\n      if (length - 1 > 1 && cellPos === positionTypes.isLastChild) {\n        if (parentNode) {\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n        }\n      }\n      return { ...state, tree };\n\n    case actionTypes.ADD_SIBLING:\n      if (length === 1) {\n        parentNode.children[0].value.position = positionTypes.isFirstChild;\n        cell.value.position = positionTypes.isLastChild;\n      }\n      if (length > 1 && childPos === length - 1) {\n        cell.value.position = positionTypes.isLastChild;\n        parentNode.children[length - 1].value.position = positionTypes.isChild;\n      }\n      if (length > 1 && childPos !== length - 1) {\n        cell.value.position = positionTypes.isChild;\n      }\n      tree._addSibling(cell, parentId, siblingId, 'right');\n      return { ...state, tree };\n\n    case actionTypes.APPEND_RIGHT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree?._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos + 1 && cellPos !== childPos) {\n        if (cellPos === 0 && childPos !== length - 1) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length === 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1 && length > 2) {\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n          cell.value.position = positionTypes.isLastChild;\n        }\n        if (cellPos !== 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isChild;\n        }\n        if (cellPos === length - 1) {\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n          cell.value.position = positionTypes.isChild;\n        }\n        if (\n          length > 2 &&\n          cellPos !== 0 &&\n          cellPos !== length - 1 &&\n          childPos === length - 1\n        ) {\n          cell.value.position = positionTypes.isLastChild;\n          parentNode.children[length - 1].value.position =\n            positionTypes.isChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'right');\n      }\n      return { ...state, tree };\n\n    case actionTypes.APPEND_LEFT_SIBLING:\n      parentId = tree._search(siblingId).value.parentId;\n      childPos = tree._childPosition(parentId, siblingId);\n      cellPos = tree._childPosition(parentId, cell.value.id);\n      if (cellPos !== childPos - 1 && childPos !== cellPos) {\n        if (childPos === 0 && cellPos !== length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n        }\n\n        if (childPos === 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isFirstChild;\n          parentNode.children[0].value.position = positionTypes.isChild;\n          parentNode.children[length - 2].value.position =\n            positionTypes.isLastChild;\n        }\n        if (cellPos === 0 && childPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[1].value.position = positionTypes.isFirstChild;\n        }\n        if (childPos !== 0 && cellPos === length - 1) {\n          cell.value.position = positionTypes.isChild;\n          parentNode.children[childPos].value.position =\n            positionTypes.isLastChild;\n        }\n        tree._removeNode(cell.value.id);\n        tree._addSibling(cell, parentId, siblingId, 'left');\n      }\n      return { ...state, tree };\n\n    case actionTypes.REMOVE_CELL:\n      tree._removeNode(cell.id);\n      const parentLength = tree?._search(cell.parentId)?.children.length;\n      //is cell is first\n      if (tree._search(cell.parentId).children.length > 1) {\n        tree._search(cell.parentId).children[0].value.position =\n          positionTypes.isFirstChild;\n        tree._search(cell.parentId).children[parentLength - 1].value.position =\n          positionTypes.isLastChild;\n      }\n      //if cell if first child in 2-child-array\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      //if cell is last cell\n      if (tree._search(cell.parentId).children.length === 1) {\n        tree._search(cell.parentId).children[0].value.position = '';\n      }\n      return { ...state, tree };\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from '../constant';\nimport { getColor } from '../utils/getColor';\nimport * as localStorage from '../utils/localStorage';\nimport * as constant from '../constant';\nconst uuidv4 = require('uuid/v4');\n\nlet defaultValue = [\n  {\n    id: 'root',\n    title: '1',\n    order: 0,\n    rate: 0,\n    hours: 0,\n    amount: 0,\n    activated: true,\n    color: getColor(0)\n  }\n];\nlet initialState;\nif (localStorage.check(constant.ESTIMATION)) {\n  initialState = localStorage.get(constant.ESTIMATION);\n} else {\n  initialState = defaultValue;\n}\n\nexport const estimationReducer = (state = initialState, action) => {\n  const { data } = action;\n  let estimation;\n  switch (action.type) {\n    case actionTypes.ARRANGE_ROW:\n      estimation = data;\n      return [...estimation];\n    case actionTypes.ADD_ROW:\n      const id = uuidv4();\n      var position = state.length;\n      const newRow = {\n        id: id,\n        title: '',\n        rate: 0,\n        hours: 0,\n        color: getColor(position),\n        activated: true\n      };\n      let count = 0;\n      state.map(e => {\n        if (e.id === data) {\n          state.push(newRow);\n          count = 1;\n        }\n      });\n      if (count === 0) {\n        state.push(newRow);\n      }\n      return [...state];\n    case actionTypes.REMOVE_ROW:\n      state = state.filter(it => it.id !== data.id);\n      return [...state];\n    case actionTypes.EDIT_CELL:\n      let { cellId, value, name } = data;\n      state.map(e => {\n        if (e.id === cellId) {\n          e[`${name}`] = value;\n        }\n      });\n      return [...state];\n    case actionTypes.TOGGLE_TICK:\n      state.map(e => {\n        if (e.id === data) {\n          e.activated = !e.activated;\n        }\n      });\n      return [...state];\n    default:\n      return state;\n  }\n};\n","export const getColor = key => {\n  switch (key) {\n    case 0:\n      return 'rgb(234, 94, 94)';\n    case 1:\n      return 'rgb(130, 197, 72)';\n    case 2:\n      return 'rgb(234, 196, 94)';\n    case 3:\n      return 'rgb(94, 210, 234)';\n    case 4:\n      return 'rgb(230, 94, 234)';\n    case 5:\n      return 'rgb(94, 234, 200)';\n    case 6:\n      return 'rgb(94, 129, 234)';\n    case 7:\n      return 'rgb(244, 160, 7)';\n    default:\n      return 'rgb(234, 94, 94)';\n  }\n};\n","import { combineReducers } from 'redux';\nimport { treeReducer as tree } from './treeReducer';\nimport { toggleEstimationReducer as toggleEstimation } from './toggleEstimationReducer';\nimport { estimationReducer as estimation } from './estimationReducer';\n\nexport default combineReducers({\n  tree,\n  toggleEstimation,\n  estimation\n});\n","import * as actionTypes from '../constant/index';\nimport { toggleEstimation } from '../actions/toggleEstimation';\nimport { toggle } from '../constant/estimationTable';\n\nconst initialState = false;\n\nexport const toggleEstimationReducer = (state = initialState, action) => {\n  const { isOpen } = action;\n  switch (action.type) {\n    case actionTypes.TOGGLE_ESTIMATION:\n      return isOpen;\n    case actionTypes.KEEP_TOGGLE:\n      return toggle.true;\n    case actionTypes.CLOSE_TOGGLE:\n      return toggle.false;\n    default:\n      return initialState;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  blacklist: ['tree'],\n  stateReconciler: autoMergeLevel2\n};\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  pReducer,\n  composeEnhancer(applyMiddleware(logger))\n);\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { store, persistor } from './configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//method to manage local storage for tree data\nconst set = tree => {\n  window.localStorage.setItem('tree', JSON.stringify(tree));\n};\nconst clear = () => {\n  window.localStorage.removeItem('tree');\n};\n\nconst update = tree => {\n  window.localStorage.setItem('tree', JSON.stringify(tree));\n};\nconst get = key => {\n  return JSON.parse(\n    JSON.parse(window.localStorage.getItem('persist:root'))[key]\n  );\n};\nconst check = key => {\n  if (window.localStorage.getItem('persist:root')) {\n    return !JSON.parse(window.localStorage.getItem('persist:root'))[key];\n  } else {\n    return false;\n  }\n};\nmodule.exports = {\n  set,\n  update,\n  clear,\n  get,\n  check\n};\n"],"sourceRoot":""}